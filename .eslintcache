[{"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js":"1","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js":"2","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js":"3","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\location.js":"4","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LaneVehicleCnt.js":"5","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTPCU.js":"6","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js":"7","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js":"8","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js":"9","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js":"10","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\userInfo.js":"11","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js":"12","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\dashLineChart\\WeekPedestrians.js":"13","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\datePicker\\DatePicker.js":"14","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js":"15","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\video\\Video.js":"16","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LaneVehicleRatio.js":"17","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTOverSpeed.js":"18","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\DTPCU.js":"19","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\tableCard\\TimeTableCard.js":"20","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js":"21","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js":"22","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTAvgSpeed.js":"23","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\DTOverSpeed.js":"24"},{"size":2872,"mtime":1620885247363,"results":"25","hashOfConfig":"26"},{"size":2101,"mtime":1620885296165,"results":"27","hashOfConfig":"26"},{"size":9849,"mtime":1620779529810,"results":"28","hashOfConfig":"26"},{"size":446,"mtime":1620029818451,"results":"29","hashOfConfig":"26"},{"size":2503,"mtime":1620779378712,"results":"30","hashOfConfig":"26"},{"size":2599,"mtime":1620779449357,"results":"31","hashOfConfig":"26"},{"size":5636,"mtime":1620779545737,"results":"32","hashOfConfig":"26"},{"size":3341,"mtime":1620885245949,"results":"33","hashOfConfig":"26"},{"size":410,"mtime":1620029818378,"results":"34","hashOfConfig":"26"},{"size":1324,"mtime":1620029818407,"results":"35","hashOfConfig":"26"},{"size":459,"mtime":1620029818452,"results":"36","hashOfConfig":"26"},{"size":5633,"mtime":1620779520566,"results":"37","hashOfConfig":"26"},{"size":2840,"mtime":1620029818388,"results":"38","hashOfConfig":"26"},{"size":4073,"mtime":1620029818380,"results":"39","hashOfConfig":"26"},{"size":3941,"mtime":1620885307797,"results":"40","hashOfConfig":"26"},{"size":1846,"mtime":1620029818421,"results":"41","hashOfConfig":"26"},{"size":2739,"mtime":1620779381293,"results":"42","hashOfConfig":"26"},{"size":2555,"mtime":1620779446968,"results":"43","hashOfConfig":"26"},{"size":2479,"mtime":1620779410804,"results":"44","hashOfConfig":"26"},{"size":3508,"mtime":1620029818418,"results":"45","hashOfConfig":"26"},{"size":1061,"mtime":1620885338261,"results":"46","hashOfConfig":"26"},{"size":9722,"mtime":1620779547841,"results":"47","hashOfConfig":"26"},{"size":2453,"mtime":1620779418159,"results":"48","hashOfConfig":"26"},{"size":2413,"mtime":1620779408393,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b4szrg",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js",[],["107","108"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js",["109"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\location.js",[],["110","111"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LaneVehicleCnt.js",["112"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTPCU.js",["113"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTPCU = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tlet tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehiclePassengerCarUnit;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlegend: true,\r\n\t\tseriesField: \"key\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTPCU;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js",["114"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\n// import \"../style.less\";\r\n\r\nconst WLFisrtTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar FristRow;\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tFristRow = true;\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"lane\",\r\n\t\t\twidth: 60,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (FristRow) {\r\n\t\t\t\tdataTemp[\"lane\"] = \"전체\";\r\n\t\t\t\tFristRow = false;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"lane\"] = `${laneNumber} 차선`;\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WLFisrtTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js",["115","116"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Spin } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport GeneralVisualization from \"../../organisms/generalVisualization/GeneralVisualization\";\r\nimport TimeStatistic from \"../../organisms/visualStatistic/timeStat/TimeStat\";\r\nimport LaneStatistic from \"../../organisms/visualStatistic/laneStat/LaneStat\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst DayStatPage = (props) => {\r\n\tconst { setLoggedIn, isMaster } = props;\r\n\tconst { Content } = Layout;\r\n\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [count, setCount] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className=\"statistic-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"통계 분석\", \"일간 별\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\tfirstFilter={firstFilter}\r\n\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\tcount ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{/* <div className=\"statistic-general-visualization\"> */}\r\n\t\t\t\t\t\t\t\t\t<GeneralVisualization\r\n\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\tpage=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\trefresh={false}\r\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t\t\t\t\t\t{timeClassification ? (\r\n\t\t\t\t\t\t\t\t\t\t<TimeStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<LaneStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcity: state.location.city,\r\n\t\tdistrict: state.location.district,\r\n\t\troad: state.location.road,\r\n\t\tspot: state.location.spot,\r\n\t\tcamera: state.location.camera,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationInfo: () => {\r\n\t\t\tdispatch(actions.getLocation());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DayStatPage);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js",[],["117","118"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\userInfo.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js",["119"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\dashLineChart\\WeekPedestrians.js",["120"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\datePicker\\DatePicker.js",["121"],"import React, { useState, useEffect } from \"react\";\r\nimport { DatePicker, ConfigProvider, Typography } from \"antd\";\r\n// import locale from \"antd/lib/locale/ko_KR\";\r\nimport locale from \"antd/es/locale/ko_KR\";\r\nimport \"moment/locale/ko\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst MyDatePicker = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tsetTempStartDate,\r\n\t\tsetTempEndTime,\r\n\t\tdayStartDate,\r\n\t\tdayEndTime,\r\n\t\tweekStartDate,\r\n\t\tweekEndTime,\r\n\t\tmonthStartDate,\r\n\t\tmonthEndTime,\r\n\t\tsearchStartDate,\r\n\t\tsearchEndTime,\r\n\t\toverSpeedStartDate,\r\n\t\toverSpeedEndTime,\r\n\t} = props;\r\n\tconst { RangePicker } = DatePicker;\r\n\tconst { Text } = Typography;\r\n\tconst [week, setWeek] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (period === \"WEEK\" && weekStartDate) {\r\n\t\t\tsetTempStartDate(weekStartDate);\r\n\t\t\tsetTempEndTime(weekEndTime);\r\n\t\t} else if (period === \"MONTH\" && monthStartDate) {\r\n\t\t\tsetTempStartDate(monthStartDate);\r\n\t\t\tsetTempEndTime(monthEndTime);\r\n\t\t} else if (period === \"SEARCH\" && searchStartDate) {\r\n\t\t\tsetTempStartDate(searchStartDate);\r\n\t\t\tsetTempEndTime(searchEndTime);\r\n\t\t} else if (period === \"DAY\" && dayStartDate) {\r\n\t\t\tsetTempStartDate(dayStartDate);\r\n\t\t\tsetTempEndTime(dayEndTime);\r\n\t\t} else if (period === \"OVERSPEED\" && overSpeedStartDate) {\r\n\t\t\tsetTempStartDate(overSpeedStartDate);\r\n\t\t\tsetTempEndTime(overSpeedEndTime);\r\n\t\t} else {\r\n\t\t\treturn () => {\r\n\t\t\t\tsetTempStartDate(\"\");\r\n\t\t\t\tsetTempEndTime(\"\");\r\n\t\t\t};\r\n\t\t}\r\n\t}, [period]);\r\n\r\n\tvar defaultDay = dayStartDate && moment(dayStartDate);\r\n\tvar defaultWeek = weekStartDate && moment(weekStartDate);\r\n\tvar defaultMonth = monthStartDate && moment(monthStartDate, \"YYYY-MM\");\r\n\tvar defaultOverSpeed = overSpeedStartDate && moment(overSpeedStartDate);\r\n\tvar defaultSearch =\r\n\t\tsearchStartDate || searchEndTime\r\n\t\t\t? [moment(searchStartDate), moment(searchEndTime)]\r\n\t\t\t: null;\r\n\r\n\tmoment.locale(\"ko\", {\r\n\t\tweek: {\r\n\t\t\tdow: 7,\r\n\t\t},\r\n\t});\r\n\r\n\tconst onChange = (date, dateString) => {\r\n\t\tvar startDate = \"\";\r\n\t\tvar endDate = \"\";\r\n\t\tif (period === \"WEEK\") {\r\n\t\t\tstartDate = moment(date).startOf(\"week\").format(\"YYYY-MM-DD\");\r\n\t\t\tendDate = moment(date).endOf(\"week\").format(\"YYYY-MM-DD\");\r\n\t\t\tsetWeek([startDate, endDate]);\r\n\t\t} else if (period === \"MONTH\") {\r\n\t\t\tstartDate = moment(date).startOf(\"month\").format(\"YYYY-MM-DD\");\r\n\t\t\tendDate = moment(date).endOf(\"month\").format(\"YYYY-MM-DD\");\r\n\t\t} else if (period === \"SEARCH\") {\r\n\t\t\tstartDate = dateString[0];\r\n\t\t\tendDate = dateString[1];\r\n\t\t} else {\r\n\t\t\tstartDate = endDate = dateString;\r\n\t\t}\r\n\t\tsetTempStartDate(startDate);\r\n\t\tsetTempEndTime(endDate);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ConfigProvider locale={locale}>\r\n\t\t\t{period === \"WEEK\" ? (\r\n\t\t\t\t<div className=\"week-description\">\r\n\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tpicker=\"week\"\r\n\t\t\t\t\t\tplaceholder=\"주 선택\"\r\n\t\t\t\t\t\tdefaultValue={defaultWeek}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{week[1] && (\r\n\t\t\t\t\t\t<Text type=\"secondary\" style={{ marginLeft: 10, marginTop: 5 }}>\r\n\t\t\t\t\t\t\t{week[0]} ~ {week[1]}\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t) : period === \"MONTH\" ? (\r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tpicker=\"month\"\r\n\t\t\t\t\tplaceholder=\"월 선택\"\r\n\t\t\t\t\tdefaultValue={defaultMonth}\r\n\t\t\t\t/>\r\n\t\t\t) : period === \"SEARCH\" ? (\r\n\t\t\t\t<RangePicker onChange={onChange} defaultValue={defaultSearch} />\r\n\t\t\t) : (\r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tplaceholder=\"날짜 선택\"\r\n\t\t\t\t\tdefaultValue={period === \"DAY\" ? defaultDay : defaultOverSpeed}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</ConfigProvider>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdayStartDate: state.date.dayStartDate,\r\n\t\tdayEndTime: state.date.dayEndTime,\r\n\t\tweekStartDate: state.date.weekStartDate,\r\n\t\tweekEndTime: state.date.weekEndTime,\r\n\t\tmonthStartDate: state.date.monthStartDate,\r\n\t\tmonthEndTime: state.date.monthEndTime,\r\n\t\tsearchStartDate: state.date.searchStartDate,\r\n\t\tsearchEndTime: state.date.searchEndTime,\r\n\t\toverSpeedStartDate: state.date.overSpeedStartDate,\r\n\t\toverSpeedEndTime: state.date.overSpeedEndTime,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(MyDatePicker);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js",["122","123"],"import React, { useEffect, useState } from \"react\";\r\nimport { Layout, message } from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport RealtimeStatUpper from \"../../organisms/realtimeStatUpper/RealtimeStatUpper\";\r\nimport StatContainer from \"../../organisms/videoContainer/StatContainer\";\r\nimport GeneralVisualization from \"../../organisms/generalVisualization/GeneralVisualization\";\r\nimport TimeTableCard from \"../../molecules/tableCard/TimeTableCard\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst RealtimeStatisticPage = (props) => {\r\n\tconst {\r\n\t\tcamAddress,\r\n\t\tcamera,\r\n\t\tcameraCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\tsetLoggedIn,\r\n\t\tisMaster,\r\n\t\tassociateIds,\r\n\t} = props;\r\n\tconst { Content } = Layout;\r\n\r\n\tconst [trafficTotalData, setTrafficTotalData] = useState([]);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [currTime, setCurrTime] = useState(\r\n\t\tmoment(new Date()).subtract(1, \"second\")\r\n\t);\r\n\tconst [refresh, setRefresh] = useState(false);\r\n\r\n\tconst date = moment(new Date()).format(\"YYYY-MM-DD\");\r\n\tvar currTimeStr = currTime.format(\"HH:mm:ss\");\r\n\r\n\tconst camCodes =\r\n\t\tassociateIds.length !== 0\r\n\t\t\t? `camCodes=[${[...associateIds, cameraCode]}]`\r\n\t\t\t: `camCode=${cameraCode}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEmptyData(false);\r\n\t\tsetTrafficTotalData([]);\r\n\t\taxiosAsync();\r\n\t}, [cameraCode, currTimeStr]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (refresh) {\r\n\t\t\tsetEmptyData(false);\r\n\t\t\tsetTrafficTotalData([]);\r\n\t\t\taxiosAsync();\r\n\t\t}\r\n\t}, [refresh]);\r\n\r\n\tconst axiosAsync = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${trafficURL}/daily?${camCodes}&startDate=${date}&endTime=${date} ${currTimeStr}&axis=time&laneNumber=0`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetTrafficTotalData(res.data);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t}\r\n\t\t\t\tif (refresh) {\r\n\t\t\t\t\tmessage.success(\"새로고침 성공\");\r\n\t\t\t\t}\r\n\t\t\t\tsetRefresh(false);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"realtime-statistic-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<RealtimeStatUpper\r\n\t\t\t\t\t\t\tcurrTime={currTime}\r\n\t\t\t\t\t\t\tsetCurrTime={setCurrTime}\r\n\t\t\t\t\t\t\tsetRefresh={setRefresh}\r\n\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"realtime-statistic-video-and-graph\">\r\n\t\t\t\t\t\t\t<StatContainer camName={camera} httpAddress={camAddress} />\r\n\t\t\t\t\t\t\t<div className=\"realtime-statistic-graph\">\r\n\t\t\t\t\t\t\t\t<GeneralVisualization\r\n\t\t\t\t\t\t\t\t\tpage=\"REALSTATISTIC\"\r\n\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\tstartDate={date}\r\n\t\t\t\t\t\t\t\t\tendTime={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currTimeStr}\r\n\t\t\t\t\t\t\t\t\trefresh={refresh}\r\n\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TimeTableCard\r\n\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\tpage=\"REALSTATISTIC\"\r\n\t\t\t\t\t\t\ttableKey=\"first\"\r\n\t\t\t\t\t\t\tcurrentLaneNum=\"0\"\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\tstartDate={date}\r\n\t\t\t\t\t\t\tendTime={date}\r\n\t\t\t\t\t\t\tcurrentTime={currTime}\r\n\t\t\t\t\t\t\tisEmptyData={isEmptyData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcamAddress: state.locationCode.camAddress,\r\n\t\tcamera: state.location.camera,\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t\tassociateIds: state.locationCode.associateIds,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(RealtimeStatisticPage);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\video\\Video.js",["124"],"/* eslint-disable jsx-a11y/media-has-caption */\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport Hls from \"hls.js\";\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst Video = (props) => {\r\n\tconst { source, showControls = false, setVideoSource } = props;\r\n\tconst videoRef = useRef();\r\n\tconst handleClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\te.target.requestFullscreen();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!videoRef) return;\r\n\r\n\t\tconst hls = new Hls({\r\n\t\t\txhrSetup: (xhr, url) => {\r\n\t\t\t\txhr.setRequestHeader(\r\n\t\t\t\t\t\"authorization\",\r\n\t\t\t\t\t`Bearer ${localStorage.getItem(\"token\")}`\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (videoRef.current.canPlayType(\"application/vnd.apple.mpegurl\")) {\r\n\t\t\tvideoRef.current.src = source;\r\n\t\t\tvideoRef.addEventListener(\"loadedmetadata\", () => {\r\n\t\t\t\tvideoRef.current.play();\r\n\t\t\t});\r\n\t\t} else if (Hls.isSupported()) {\r\n\t\t\thls.attachMedia(videoRef.current);\r\n\t\t\thls.on(Hls.Events.MEDIA_ATTACHED, () => {\r\n\t\t\t\thls.loadSource(source);\r\n\t\t\t\thls.on(Hls.Events.MANIFEST_PARSED, () => {\r\n\t\t\t\t\tsetVideoSource(true);\r\n\t\t\t\t\tvideoRef.current.play();\r\n\t\t\t\t});\r\n\t\t\t\thls.on(Hls.Events.ERROR, (_, data) => {\r\n\t\t\t\t\tif (data.response) {\r\n\t\t\t\t\t\tif (data.response.code === 404) {\r\n\t\t\t\t\t\t\tif (setVideoSource) {\r\n\t\t\t\t\t\t\t\tsetVideoSource(false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (data.response.code === 401) {\r\n\t\t\t\t\t\t\t// jwt가 invalid 할 때\r\n\t\t\t\t\t\t\tif (setVideoSource) {\r\n\t\t\t\t\t\t\t\tsetVideoSource(false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\talert(\"실시간 영상이 지원되지 않는 브라우저입니다\");\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\thls.destroy();\r\n\t\t};\r\n\t}, [source]);\r\n\r\n\treturn (\r\n\t\t<video\r\n\t\t\tref={videoRef}\r\n\t\t\tsrc={source}\r\n\t\t\tonClick={handleClick}\r\n\t\t\tmuted\r\n\t\t\tautoPlay\r\n\t\t\tcontrols={isMobile || showControls}\r\n\t\t\tpreload=\"auto\"\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Video;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LaneVehicleRatio.js",["125"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTOverSpeed.js",["126","127"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\DTPCU.js",["128"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\tableCard\\TimeTableCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js",["129"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTAvgSpeed.js",["130"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\DTOverSpeed.js",["131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":16,"column":14,"nodeType":"138","endLine":16,"endColumn":15},{"ruleId":"132","replacedBy":"139"},{"ruleId":"134","replacedBy":"140"},{"ruleId":"136","severity":1,"message":"141","line":18,"column":5,"nodeType":"142","endLine":18,"endColumn":40,"suggestions":"143"},{"ruleId":"136","severity":1,"message":"141","line":29,"column":5,"nodeType":"142","endLine":29,"endColumn":40,"suggestions":"144"},{"ruleId":"136","severity":1,"message":"145","line":15,"column":14,"nodeType":"138","endLine":15,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"146","severity":1,"message":"150","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":13},{"ruleId":"132","replacedBy":"151"},{"ruleId":"134","replacedBy":"152"},{"ruleId":"136","severity":1,"message":"145","line":15,"column":14,"nodeType":"138","endLine":15,"endColumn":18},{"ruleId":"136","severity":1,"message":"141","line":31,"column":5,"nodeType":"142","endLine":31,"endColumn":40,"suggestions":"153"},{"ruleId":"136","severity":1,"message":"154","line":53,"column":5,"nodeType":"142","endLine":53,"endColumn":13,"suggestions":"155"},{"ruleId":"136","severity":1,"message":"156","line":48,"column":5,"nodeType":"142","endLine":48,"endColumn":30,"suggestions":"157"},{"ruleId":"136","severity":1,"message":"156","line":56,"column":5,"nodeType":"142","endLine":56,"endColumn":14,"suggestions":"158"},{"ruleId":"136","severity":1,"message":"159","line":63,"column":5,"nodeType":"142","endLine":63,"endColumn":13,"suggestions":"160"},{"ruleId":"136","severity":1,"message":"141","line":17,"column":5,"nodeType":"142","endLine":17,"endColumn":40,"suggestions":"161"},{"ruleId":"136","severity":1,"message":"141","line":29,"column":5,"nodeType":"142","endLine":29,"endColumn":40,"suggestions":"162"},{"ruleId":"146","severity":1,"message":"163","line":41,"column":5,"nodeType":"148","messageId":"149","endLine":41,"endColumn":26},{"ruleId":"136","severity":1,"message":"141","line":18,"column":5,"nodeType":"142","endLine":18,"endColumn":40,"suggestions":"164"},{"ruleId":"136","severity":1,"message":"165","line":28,"column":5,"nodeType":"142","endLine":28,"endColumn":23,"suggestions":"166"},{"ruleId":"136","severity":1,"message":"141","line":19,"column":5,"nodeType":"142","endLine":19,"endColumn":40,"suggestions":"167"},{"ruleId":"136","severity":1,"message":"141","line":19,"column":5,"nodeType":"142","endLine":19,"endColumn":40,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"react-hooks/exhaustive-deps","Assignments to the 'countCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal",["169"],["170"],"React Hook useEffect has a missing dependency: 'parseTotalData'. Either include it or remove the dependency array.","ArrayExpression",["171"],["172"],"Assignments to the 'FristRow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.",["169"],["170"],["173"],"React Hook useEffect has missing dependencies: 'dayEndTime', 'dayStartDate', 'monthEndTime', 'monthStartDate', 'overSpeedEndTime', 'overSpeedStartDate', 'searchEndTime', 'searchStartDate', 'setTempEndTime', 'setTempStartDate', 'weekEndTime', and 'weekStartDate'. Either include them or remove the dependency array.",["174"],"React Hook useEffect has a missing dependency: 'axiosAsync'. Either include it or remove the dependency array.",["175"],["176"],"React Hook useEffect has a missing dependency: 'setVideoSource'. Either include it or remove the dependency array.",["177"],["178"],["179"],"'totalVehicleSpdVolume' is assigned a value but never used.",["180"],"React Hook useEffect has a missing dependency: 'axiosData'. Either include it or remove the dependency array.",["181"],["182"],["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"desc":"184","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"184","fix":"196"},{"desc":"184","fix":"197"},{"desc":"184","fix":"198"},{"desc":"199","fix":"200"},{"desc":"184","fix":"201"},{"desc":"184","fix":"202"},"Update the dependencies array to be: [trafficTotalData, activeVisualKey, parseTotalData]",{"range":"203","text":"204"},{"range":"205","text":"204"},{"range":"206","text":"204"},"Update the dependencies array to be: [dayEndTime, dayStartDate, monthEndTime, monthStartDate, overSpeedEndTime, overSpeedStartDate, period, searchEndTime, searchStartDate, setTempEndTime, setTempStartDate, weekEndTime, weekStartDate]",{"range":"207","text":"208"},"Update the dependencies array to be: [axiosAsync, cameraCode, currTimeStr]",{"range":"209","text":"210"},"Update the dependencies array to be: [axiosAsync, refresh]",{"range":"211","text":"212"},"Update the dependencies array to be: [setVideoSource, source]",{"range":"213","text":"214"},{"range":"215","text":"204"},{"range":"216","text":"204"},{"range":"217","text":"204"},"Update the dependencies array to be: [axiosData, trafficTotalData]",{"range":"218","text":"219"},{"range":"220","text":"204"},{"range":"221","text":"204"},[439,474],"[trafficTotalData, activeVisualKey, parseTotalData]",[606,641],[673,708],[1489,1497],"[dayEndTime, dayStartDate, monthEndTime, monthStartDate, overSpeedEndTime, overSpeedStartDate, period, searchEndTime, searchStartDate, setTempEndTime, setTempStartDate, weekEndTime, weekStartDate]",[1447,1472],"[axiosAsync, cameraCode, currTimeStr]",[1597,1606],"[axiosAsync, refresh]",[1583,1591],"[setVideoSource, source]",[439,474],[612,647],[462,497],[575,593],"[axiosData, trafficTotalData]",[467,502],[469,504]]