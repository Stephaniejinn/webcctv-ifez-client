[{"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js":"1","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js":"2","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js":"3","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js":"4","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleCnt.js":"5","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js":"6","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js":"7","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js":"8","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js":"9","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js":"10","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js":"11","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\userInfo.js":"12","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js":"13","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js":"14","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js":"15","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js":"16","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js":"17","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js":"18","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StreamingContainer.js":"19","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js":"20","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\LaneTableCard.js":"21","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTVehicleRatio.js":"22","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js":"23","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js":"24","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js":"25","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js":"26","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js":"27","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js":"28","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js":"29","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js":"30","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js":"31","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTPCU.js":"32","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js":"33","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js":"34","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js":"35","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js":"36","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js":"37","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js":"38","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js":"39","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js":"40","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js":"41","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js":"42","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js":"43","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js":"44","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTOverSpeed.js":"45","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js":"46","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\search\\OverspeedPage.js":"47","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js":"48","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\TimeTableCard.js":"49","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js":"50","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\date.js":"51","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js":"52","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTFirstTable.js":"53","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js":"54","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\reportWebVitals.js":"55","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTConcentrationRatio.js":"56","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js":"57","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleRatio.js":"58","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js":"59","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js":"60","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js":"61","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js":"62","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js":"63","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js":"64","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js":"65","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\index.js":"66","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js":"67","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js":"68","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js":"69","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js":"70","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js":"71","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTPCU.js":"72","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\liquidChart\\PeakRatio.js":"73","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\videoContainer\\StreamingContainer.js":"74","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js":"75","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js":"76","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\locationCode.js":"77","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\cascader\\Cascader.js":"78","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\loginCard\\LoginCard.js":"79","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\timeFilter\\TimeFilter.js":"80","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\dashLineChart\\WeekPedestrians.js":"81","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\bidirectionalBar\\DayNight.js":"82","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\App.js":"83","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\search\\SearchPage.js":"84","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js":"85","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js":"86","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\GenAvgSpeed.js":"87","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js":"88","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTOverSpeed.js":"89","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\DTCnt.js":"90","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\videoContainer\\StatContainer.js":"91","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\index.js":"92","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\actions\\index.js":"93","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\WTPHF.js":"94","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LaneVehicleCnt.js":"95","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\sider\\index.js":"96","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js":"97","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js":"98","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\baseURL.js":"99","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js":"100","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js":"101","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js":"102","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js":"103","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\search\\OverspeedPage.js":"104","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js":"105","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js":"106","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LaneVehicleRatio.js":"107","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\WTVehicleRatio.js":"108","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\statisticText\\PeakHourFlowRate.js":"109","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js":"110","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\searchData\\SearchData.js":"111","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js":"112","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js":"113","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\dataVisualization\\TimeDataVisualization.js":"114","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\datePicker\\DatePicker.js":"115","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js":"116","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\tableDescription\\TableDescription.js":"117","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\WTConcentrationRatio.js":"118","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LanePCU.js":"119","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js":"120","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js":"121","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTCnt.js":"122","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\location.js":"123","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTCnt.js":"124","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\statisticText\\PHF.js":"125","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js":"126","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTOverSpeed.js":"127","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\accountForm\\PasswordFrom.js":"128","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\accountForm\\SignupForm.js":"129","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTSecondTable.js":"130","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTPCU.js":"131","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\statisticText\\Peak15.js":"132","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js":"133","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\userInfo.js":"134","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MonthPeakTime.js":"135","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\tableCard\\TimeTableCard.js":"136","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\video\\Video.js":"137","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTAvgSpeed.js":"138","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\account\\PasswordPage.js":"139","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\DTOverSpeed.js":"140","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTAvgSpeed.js":"141","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\gaugeChart\\AvgSpeed.js":"142","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\reportWebVitals.js":"143","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\avatar\\Avatar.js":"144","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js":"145","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\doughnutChart\\VehicleRatio.js":"146","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\dashLineChart\\DayPedestrians.js":"147","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js":"148","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\WMFlowRate.js":"149","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\login\\LoginPage.js":"150","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\DTPCU.js":"151","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\header\\index.js":"152","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTVehicleRatio.js":"153"},{"size":5117,"mtime":1618967791920,"results":"154","hashOfConfig":"155"},{"size":6288,"mtime":1618469228470,"results":"156","hashOfConfig":"155"},{"size":3505,"mtime":1617942423872,"results":"157","hashOfConfig":"155"},{"size":1846,"mtime":1619140625638,"results":"158","hashOfConfig":"155"},{"size":2586,"mtime":1617952242868,"results":"159","hashOfConfig":"155"},{"size":2609,"mtime":1617955556798,"results":"160","hashOfConfig":"155"},{"size":4073,"mtime":1619510189028,"results":"161","hashOfConfig":"155"},{"size":4459,"mtime":1619744443356,"results":"162","hashOfConfig":"155"},{"size":3935,"mtime":1618889043596,"results":"163","hashOfConfig":"155"},{"size":2797,"mtime":1619397588528,"results":"164","hashOfConfig":"155"},{"size":4183,"mtime":1619506827581,"results":"165","hashOfConfig":"155"},{"size":459,"mtime":1617066391537,"results":"166","hashOfConfig":"155"},{"size":2458,"mtime":1617952444674,"results":"167","hashOfConfig":"155"},{"size":2504,"mtime":1617952388594,"results":"168","hashOfConfig":"155"},{"size":3271,"mtime":1619397574507,"results":"169","hashOfConfig":"155"},{"size":2804,"mtime":1619397589891,"results":"170","hashOfConfig":"155"},{"size":588,"mtime":1618474102823,"results":"171","hashOfConfig":"155"},{"size":2875,"mtime":1618880987561,"results":"172","hashOfConfig":"155"},{"size":1537,"mtime":1618820831700,"results":"173","hashOfConfig":"155"},{"size":1240,"mtime":1617695212432,"results":"174","hashOfConfig":"155"},{"size":936,"mtime":1616394535146,"results":"175","hashOfConfig":"155"},{"size":2490,"mtime":1617952452122,"results":"176","hashOfConfig":"155"},{"size":745,"mtime":1617842272800,"results":"177","hashOfConfig":"155"},{"size":997,"mtime":1615964214432,"results":"178","hashOfConfig":"155"},{"size":4462,"mtime":1619403911634,"results":"179","hashOfConfig":"155"},{"size":3626,"mtime":1619403902324,"results":"180","hashOfConfig":"155"},{"size":1622,"mtime":1616400207822,"results":"181","hashOfConfig":"155"},{"size":5698,"mtime":1617942455513,"results":"182","hashOfConfig":"155"},{"size":8065,"mtime":1619417065166,"results":"183","hashOfConfig":"155"},{"size":7419,"mtime":1618453985516,"results":"184","hashOfConfig":"155"},{"size":9759,"mtime":1617942470631,"results":"185","hashOfConfig":"155"},{"size":2525,"mtime":1617952447991,"results":"186","hashOfConfig":"155"},{"size":415,"mtime":1618821981384,"results":"187","hashOfConfig":"155"},{"size":3326,"mtime":1619144283452,"results":"188","hashOfConfig":"155"},{"size":21535,"mtime":1619081167238,"results":"189","hashOfConfig":"155"},{"size":2329,"mtime":1618209865516,"results":"190","hashOfConfig":"155"},{"size":2491,"mtime":1618464202222,"results":"191","hashOfConfig":"155"},{"size":2319,"mtime":1617952421240,"results":"192","hashOfConfig":"155"},{"size":2610,"mtime":1617955639588,"results":"193","hashOfConfig":"155"},{"size":7919,"mtime":1617696349831,"results":"194","hashOfConfig":"155"},{"size":2450,"mtime":1618900404845,"results":"195","hashOfConfig":"155"},{"size":1729,"mtime":1618281941189,"results":"196","hashOfConfig":"155"},{"size":1874,"mtime":1618301947326,"results":"197","hashOfConfig":"155"},{"size":6483,"mtime":1616475606541,"results":"198","hashOfConfig":"155"},{"size":2458,"mtime":1617952402469,"results":"199","hashOfConfig":"155"},{"size":1324,"mtime":1618205775634,"results":"200","hashOfConfig":"155"},{"size":2067,"mtime":1619424097274,"results":"201","hashOfConfig":"155"},{"size":7000,"mtime":1619511025016,"results":"202","hashOfConfig":"155"},{"size":3508,"mtime":1619510549554,"results":"203","hashOfConfig":"155"},{"size":918,"mtime":1619417688911,"results":"204","hashOfConfig":"155"},{"size":1141,"mtime":1619417784648,"results":"205","hashOfConfig":"155"},{"size":5695,"mtime":1619503579688,"results":"206","hashOfConfig":"155"},{"size":9798,"mtime":1619503570043,"results":"207","hashOfConfig":"155"},{"size":2349,"mtime":1619511583793,"results":"208","hashOfConfig":"155"},{"size":362,"mtime":1608013233748,"results":"209","hashOfConfig":"155"},{"size":1970,"mtime":1617952254615,"results":"210","hashOfConfig":"155"},{"size":2651,"mtime":1617955635022,"results":"211","hashOfConfig":"155"},{"size":2800,"mtime":1617952245379,"results":"212","hashOfConfig":"155"},{"size":2436,"mtime":1617952240226,"results":"213","hashOfConfig":"155"},{"size":2693,"mtime":1617676080949,"results":"214","hashOfConfig":"155"},{"size":2683,"mtime":1617952237288,"results":"215","hashOfConfig":"155"},{"size":410,"mtime":1613529006303,"results":"216","hashOfConfig":"155"},{"size":652,"mtime":1616735276373,"results":"217","hashOfConfig":"155"},{"size":654,"mtime":1615877296950,"results":"218","hashOfConfig":"155"},{"size":2521,"mtime":1617952408073,"results":"219","hashOfConfig":"155"},{"size":789,"mtime":1620029818448,"results":"220","hashOfConfig":"221"},{"size":4857,"mtime":1620716720472,"results":"222","hashOfConfig":"221"},{"size":21892,"mtime":1620191019844,"results":"223","hashOfConfig":"221"},{"size":3462,"mtime":1620779532257,"results":"224","hashOfConfig":"221"},{"size":3866,"mtime":1620779543495,"results":"225","hashOfConfig":"221"},{"size":5633,"mtime":1620779520566,"results":"226","hashOfConfig":"221"},{"size":2599,"mtime":1620779449357,"results":"227","hashOfConfig":"221"},{"size":745,"mtime":1620029818398,"results":"228","hashOfConfig":"221"},{"size":630,"mtime":1620779814049,"results":"229","hashOfConfig":"221"},{"size":4193,"mtime":1620809108233,"results":"230","hashOfConfig":"221"},{"size":2251,"mtime":1620202090615,"results":"231","hashOfConfig":"221"},{"size":811,"mtime":1620116176583,"results":"232","hashOfConfig":"221"},{"size":10202,"mtime":1620890312240,"results":"233","hashOfConfig":"221"},{"size":2693,"mtime":1620029818428,"results":"234","hashOfConfig":"221"},{"size":654,"mtime":1620029818420,"results":"235","hashOfConfig":"221"},{"size":2840,"mtime":1620029818388,"results":"236","hashOfConfig":"221"},{"size":2458,"mtime":1620029818387,"results":"237","hashOfConfig":"221"},{"size":4554,"mtime":1620197444827,"results":"238","hashOfConfig":"221"},{"size":1820,"mtime":1620885254633,"results":"239","hashOfConfig":"221"},{"size":2054,"mtime":1620809003669,"results":"240","hashOfConfig":"221"},{"size":9759,"mtime":1620029818409,"results":"241","hashOfConfig":"221"},{"size":2399,"mtime":1620029818382,"results":"242","hashOfConfig":"221"},{"size":5636,"mtime":1620779545737,"results":"243","hashOfConfig":"221"},{"size":2610,"mtime":1620029818396,"results":"244","hashOfConfig":"221"},{"size":2387,"mtime":1620779405889,"results":"245","hashOfConfig":"221"},{"size":410,"mtime":1620029818435,"results":"246","hashOfConfig":"221"},{"size":318,"mtime":1620029818450,"results":"247","hashOfConfig":"221"},{"size":918,"mtime":1620029818449,"results":"248","hashOfConfig":"221"},{"size":1901,"mtime":1620029818386,"results":"249","hashOfConfig":"221"},{"size":2503,"mtime":1620779378712,"results":"250","hashOfConfig":"221"},{"size":4094,"mtime":1620201819060,"results":"251","hashOfConfig":"221"},{"size":8164,"mtime":1620786425823,"results":"252","hashOfConfig":"221"},{"size":4422,"mtime":1620178102622,"results":"253","hashOfConfig":"221"},{"size":600,"mtime":1621496708592,"results":"254","hashOfConfig":"221"},{"size":4646,"mtime":1620177590215,"results":"255","hashOfConfig":"221"},{"size":3958,"mtime":1620177640270,"results":"256","hashOfConfig":"221"},{"size":3578,"mtime":1620176929839,"results":"257","hashOfConfig":"221"},{"size":1061,"mtime":1620885338261,"results":"258","hashOfConfig":"221"},{"size":2101,"mtime":1620190002990,"results":"259","hashOfConfig":"221"},{"size":410,"mtime":1620029818378,"results":"260","hashOfConfig":"221"},{"size":9886,"mtime":1620029818405,"results":"261","hashOfConfig":"221"},{"size":2739,"mtime":1620779381293,"results":"262","hashOfConfig":"221"},{"size":2933,"mtime":1620029818386,"results":"263","hashOfConfig":"221"},{"size":493,"mtime":1620029818401,"results":"264","hashOfConfig":"221"},{"size":3307,"mtime":1620180529315,"results":"265","hashOfConfig":"221"},{"size":7398,"mtime":1620780465355,"results":"266","hashOfConfig":"221"},{"size":2872,"mtime":1620885247363,"results":"267","hashOfConfig":"221"},{"size":2831,"mtime":1620190027992,"results":"268","hashOfConfig":"221"},{"size":6902,"mtime":1620029818414,"results":"269","hashOfConfig":"221"},{"size":4073,"mtime":1620029818380,"results":"270","hashOfConfig":"221"},{"size":588,"mtime":1620029818415,"results":"271","hashOfConfig":"221"},{"size":2397,"mtime":1620197821258,"results":"272","hashOfConfig":"221"},{"size":1970,"mtime":1620029818385,"results":"273","hashOfConfig":"221"},{"size":2384,"mtime":1620779374725,"results":"274","hashOfConfig":"221"},{"size":3414,"mtime":1620029818410,"results":"275","hashOfConfig":"221"},{"size":2319,"mtime":1620029818392,"results":"276","hashOfConfig":"221"},{"size":2608,"mtime":1620029818396,"results":"277","hashOfConfig":"221"},{"size":446,"mtime":1620029818451,"results":"278","hashOfConfig":"221"},{"size":2393,"mtime":1620029818393,"results":"279","hashOfConfig":"221"},{"size":453,"mtime":1620029818400,"results":"280","hashOfConfig":"221"},{"size":1874,"mtime":1620029818408,"results":"281","hashOfConfig":"221"},{"size":2458,"mtime":1620029818394,"results":"282","hashOfConfig":"221"},{"size":6202,"mtime":1620779559435,"results":"283","hashOfConfig":"221"},{"size":7326,"mtime":1620779571546,"results":"284","hashOfConfig":"221"},{"size":3414,"mtime":1620029818404,"results":"285","hashOfConfig":"221"},{"size":2525,"mtime":1620029818394,"results":"286","hashOfConfig":"221"},{"size":486,"mtime":1620029818400,"results":"287","hashOfConfig":"221"},{"size":1324,"mtime":1620029818407,"results":"288","hashOfConfig":"221"},{"size":459,"mtime":1620029818452,"results":"289","hashOfConfig":"221"},{"size":2265,"mtime":1620779426733,"results":"290","hashOfConfig":"221"},{"size":3508,"mtime":1620029818418,"results":"291","hashOfConfig":"221"},{"size":1846,"mtime":1620029818421,"results":"292","hashOfConfig":"221"},{"size":2453,"mtime":1620779418159,"results":"293","hashOfConfig":"221"},{"size":1126,"mtime":1620029818439,"results":"294","hashOfConfig":"221"},{"size":2413,"mtime":1620779408393,"results":"295","hashOfConfig":"221"},{"size":2548,"mtime":1620779442280,"results":"296","hashOfConfig":"221"},{"size":1729,"mtime":1620029818390,"results":"297","hashOfConfig":"221"},{"size":375,"mtime":1620029818453,"results":"298","hashOfConfig":"221"},{"size":2292,"mtime":1620779501516,"results":"299","hashOfConfig":"221"},{"size":2683,"mtime":1620029818382,"results":"300","hashOfConfig":"221"},{"size":2491,"mtime":1620720296471,"results":"301","hashOfConfig":"221"},{"size":2507,"mtime":1620029818387,"results":"302","hashOfConfig":"221"},{"size":1622,"mtime":1620029818414,"results":"303","hashOfConfig":"221"},{"size":1855,"mtime":1620779384815,"results":"304","hashOfConfig":"221"},{"size":943,"mtime":1620029818441,"results":"305","hashOfConfig":"221"},{"size":2479,"mtime":1620779410804,"results":"306","hashOfConfig":"221"},{"size":1393,"mtime":1621496859501,"results":"307","hashOfConfig":"221"},{"size":2439,"mtime":1620779437838,"results":"308","hashOfConfig":"221"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12xqqm0",{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"317"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"321"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"327"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"346"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"353"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"346"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"369"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"327"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"321"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"321"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"317"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"317"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"327"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"448","messages":"449","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"450","messages":"451","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},"1b4szrg",{"filePath":"463","messages":"464","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"469","messages":"470","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"472"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"476"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"476"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"489"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"492"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"495","messages":"496","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"498"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"502"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"506"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"510"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"513","messages":"514","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"472"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"520"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"524"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"527","messages":"528","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"529"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"542","messages":"543","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"529"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"547","messages":"548","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"550"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"556"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"502"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"563"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"566"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"570"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"476"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"576"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"579","messages":"580","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"582"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"520"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"588"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"472"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"588"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"510"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"607","messages":"608","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"609","messages":"610","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"611","messages":"612","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"613","messages":"614","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"502"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"472"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"622"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"476"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"576"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"630","messages":"631","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"632","messages":"633","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"634","messages":"635","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"636"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"588"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"556"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"651","messages":"652","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"556"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"656","messages":"657","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"658","messages":"659","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"664","messages":"665","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"666","messages":"667","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"668","messages":"669","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"671"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"506"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"678","messages":"679","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"680","messages":"681","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"682","messages":"683","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js",["684","685"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js",[],["686","687"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js",["688"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst MTSecondTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tvar TotalData = [];\r\n\r\n\tvar countCol;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentLaneNum === 0) {\r\n\t\t\tcountCol = 0;\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseData();\r\n\t\t}\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"totalDayNightRatio\",\r\n\t\t\t\t\tkey: \"totalNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"totalPHF\",\r\n\t\t\t\t\tkey: \"totalPHF\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"totalPeekHourCnt\",\r\n\t\t\t\t\tkey: \"totalPeekHourCnt\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"집중률\",\r\n\t\t\t\t\tdataIndex: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t\tkey: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"차종별 주야율\",\r\n\t\t\tdataIndex: \"TypeDayNightRatio\",\r\n\t\t\tkey: \"TypeNightRatio\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\t\tdataIndex: \"carDayNightRatio\",\r\n\t\t\t\t\tkey: \"carNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"버스\",\r\n\t\t\t\t\tdataIndex: \"busDayNightRatio\",\r\n\t\t\t\t\tkey: \"busNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\t\tdataIndex: \"truckDayNightRatio\",\r\n\t\t\t\t\tkey: \"truckNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\t\tdataIndex: \"motorDayNightRatio\",\r\n\t\t\t\t\tkey: \"motorNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\tconst parseData = () => {\r\n\t\tconsole.log(\"count table axios\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehicleDayNightRatio,\r\n\t\t\t\ttotalVehiclePeakHourFactor,\r\n\t\t\t\ttotalVehiclePeakHourConcentrationRatio,\r\n\t\t\t\ttotalVehiclePeakHourFlowRate,\r\n\t\t\t\tcarDayNightRatio,\r\n\t\t\t\tmBusDayNightRatio,\r\n\t\t\t\tmTruckDayNightRatio,\r\n\t\t\t\tmotorDayNightRatio,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (countCol < 3) {\r\n\t\t\t\tif (countCol === 0) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"월간전체\";\r\n\t\t\t\t} else if (countCol === 1) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"평일전체\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"주말전체\";\r\n\t\t\t\t}\r\n\t\t\t\tcountCol += 1;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"time\"] = moment(recordDate).format(\"YYYY년 MM월 DD일\");\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalDayNightRatio\"] = totalVehicleDayNightRatio;\r\n\t\t\tdataTemp[\"totalPHF\"] = totalVehiclePeakHourFactor;\r\n\t\t\tdataTemp[\"totalPeekHourCnt\"] = totalVehiclePeakHourFlowRate;\r\n\t\t\tdataTemp[\r\n\t\t\t\t\"totalVehiclePeakHourConcentrationRatio\"\r\n\t\t\t] = totalVehiclePeakHourConcentrationRatio;\r\n\r\n\t\t\tdataTemp[\"carDayNightRatio\"] = carDayNightRatio;\r\n\t\t\tdataTemp[\"busDayNightRatio\"] = mBusDayNightRatio;\r\n\t\t\tdataTemp[\"truckDayNightRatio\"] = mTruckDayNightRatio;\r\n\t\t\tdataTemp[\"motorDayNightRatio\"] = motorDayNightRatio;\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MTSecondTable;\r\n",["689","690"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js",["691"],"/* eslint-disable jsx-a11y/media-has-caption */\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport Hls from \"hls.js\";\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst Video = (props) => {\r\n\tconst { source, showControls = false, setVideoSource } = props;\r\n\tconst videoRef = useRef();\r\n\tconst handleClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\te.target.requestFullscreen();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!videoRef) return;\r\n\r\n\t\tconst hls = new Hls({\r\n\t\t\txhrSetup: (xhr, url) => {\r\n\t\t\t\txhr.setRequestHeader(\r\n\t\t\t\t\t\"authorization\",\r\n\t\t\t\t\t`Bearer ${localStorage.getItem(\"token\")}`\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (videoRef.current.canPlayType(\"application/vnd.apple.mpegurl\")) {\r\n\t\t\tvideoRef.current.src = source;\r\n\t\t\tvideoRef.addEventListener(\"loadedmetadata\", () => {\r\n\t\t\t\tvideoRef.current.play();\r\n\t\t\t});\r\n\t\t} else if (Hls.isSupported()) {\r\n\t\t\thls.attachMedia(videoRef.current);\r\n\t\t\thls.on(Hls.Events.MEDIA_ATTACHED, () => {\r\n\t\t\t\thls.loadSource(source);\r\n\t\t\t\thls.on(Hls.Events.MANIFEST_PARSED, () => {\r\n\t\t\t\t\tsetVideoSource(true);\r\n\t\t\t\t\tvideoRef.current.play();\r\n\t\t\t\t});\r\n\t\t\t\thls.on(Hls.Events.ERROR, (_, data) => {\r\n\t\t\t\t\tif (data.response) {\r\n\t\t\t\t\t\tif (data.response.code === 404) {\r\n\t\t\t\t\t\t\tif (setVideoSource) {\r\n\t\t\t\t\t\t\t\tsetVideoSource(false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (data.response.code === 401) {\r\n\t\t\t\t\t\t\t// jwt가 invalid 할 때\r\n\t\t\t\t\t\t\tif (setVideoSource) {\r\n\t\t\t\t\t\t\t\tsetVideoSource(false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\talert(\"실시간 영상이 지원되지 않는 브라우저입니다\");\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\thls.destroy();\r\n\t\t};\r\n\t}, [source]);\r\n\r\n\treturn (\r\n\t\t<video\r\n\t\t\tref={videoRef}\r\n\t\t\tsrc={source}\r\n\t\t\tonClick={handleClick}\r\n\t\t\tmuted\r\n\t\t\tautoPlay\r\n\t\t\tcontrols={isMobile || showControls}\r\n\t\t\tpreload=\"auto\"\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Video;\r\n",["692","693"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleCnt.js",["694"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js",["695"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTAvgSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 평균속도 그래프 parse\");\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleAvgSpeed;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tseriesField: \"key\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTAvgSpeed;\r\n",["696","697"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js",["698"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js",["699","700"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js",["701"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js",["702","703"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\userInfo.js",[],["704","705"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js",["706"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js",["707"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst DTAvgSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 평균속도 parse\");\r\n\t\tvar avgSpeedTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordTime,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst Time = moment(recordTime).format(\"HH:mm\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleAvgSpeed;\r\n\t\t\ttempTotal[\"category\"] = \"천제\";\r\n\r\n\t\t\tavgSpeedTotalData.push(tempCar);\r\n\t\t\tavgSpeedTotalData.push(tempBus);\r\n\t\t\tavgSpeedTotalData.push(tempTruck);\r\n\t\t\tavgSpeedTotalData.push(tempMotor);\r\n\t\t\tavgSpeedTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(avgSpeedTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default DTAvgSpeed;\r\n",["708","709"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js",["710","711"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js",[],["712","713"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js",["714"],"import React, { useEffect, useState } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport VideoContainer from \"../../organisms/videoContainer/StreamingContainer\";\r\nimport SearchInput from \"../../atoms/cascaderBtn/CascaderBtn\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst RealtimeStreamingPage = (props) => {\r\n\tconst { Content } = Layout;\r\n\tconst { setLoggedIn, isMaster, baseURL } = props;\r\n\tconst [address, setAddress] = useState([]);\r\n\tconst date = moment(new Date()).format(\"YYYY-MM-DD\");\r\n\tconst currentTime = moment(new Date()).format(\"HH:mm:ss\");\r\n\tvar addArr = [];\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}/locations/ICN/28110/2008001/001/cameras`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tres.data.forEach((address) => {\r\n\t\t\t\t\t\taddArr.push(address.httpStreamAddr);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tsetAddress(addArr);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"realtime-streaming-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider setLoggedIn={setLoggedIn} />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"실시간 영상\"]} />\r\n\t\t\t\t\t\t<div className=\"search-input\">\r\n\t\t\t\t\t\t\t<SearchInput />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"video-container-4\">\r\n\t\t\t\t\t\t\t{address[0] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-1 [하행]\"\r\n\t\t\t\t\t\t\t\t\t// httpAddress=\"https://globalbridge.synology.me:4000/m3u8VideoStream.m3u8\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[0]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{address[1] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-2 [하행]\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[1]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{address[2] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-3 [하행]\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[2]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(RealtimeStreamingPage);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StreamingContainer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js",[],["715","716"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\LaneTableCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTVehicleRatio.js",["717"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\n// import axios from \"axios\";\r\n// import { connect } from \"react-redux\";\r\n// import * as actions from \"../../../actions\";\r\n\r\nconst VehicleRatio = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"3\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 차종비율 parse\");\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = parseFloat((carVehicleRatio * 100).toFixed(2));\r\n\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = parseFloat((mBusVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = parseFloat((mTruckVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = parseFloat((motorVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"%\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default VehicleRatio;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js",[],["718","719"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js",["720","721"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js",["722"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\n// import \"../style.less\";\r\n\r\nconst WLFisrtTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar FristRow;\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tFristRow = true;\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"lane\",\r\n\t\t\twidth: 60,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\tconsole.log(\"count 주간 차선별 1차데이블 parse\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (FristRow) {\r\n\t\t\t\tdataTemp[\"lane\"] = \"전체\";\r\n\t\t\t\tFristRow = false;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"lane\"] = `${laneNumber} 차선`;\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WLFisrtTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js",["723"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js",["724","725"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js",["726"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTPCU.js",["727"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst MTPCULine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 PCU parse\");\r\n\t\tvar PCUTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tlet tempTotal = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehiclePassengerCarUnit;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tPCUTotalData.push(tempCar);\r\n\t\t\tPCUTotalData.push(tempBus);\r\n\t\t\tPCUTotalData.push(tempTruck);\r\n\t\t\tPCUTotalData.push(tempMotor);\r\n\t\t\tPCUTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(PCUTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\t// xAxis: { type: \"time\" },\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MTPCULine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js",["728","729"],"import React, { useState, useEffect } from \"react\";\r\nimport { Spin, Typography, message } from \"antd\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LaneTableCard from \"../../../molecules/tableCard/LaneTableCard\";\r\nimport LaneDataVisualization from \"../../../molecules/dataVisualization/LaneDataVisualization\";\r\nimport \"../style.less\";\r\n\r\nconst LaneVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcameraCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\tadditionalFilter,\r\n\t\tsetLoggedIn,\r\n\t} = props;\r\n\tconst { Text } = Typography;\r\n\r\n\tconst [activeVisualKey, setActiveVisualKey] = useState(\"1\");\r\n\r\n\tconst [isLoadingTrafficTotal, setLoadingTrafficTotal] = useState(true);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [trafficTotalData, setTrafficTotalData] = useState([]);\r\n\r\n\tconst periodURL =\r\n\t\tperiod === \"DAY\" ? \"/daily\" : period === \"WEEK\" ? \"/weekly\" : \"/monthly\";\r\n\r\n\tconst currentURL =\r\n\t\tperiod === \"DAY\"\r\n\t\t\t? `${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane`\r\n\t\t\t: `${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane&weekOption=${additionalFilter}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEmptyData(false);\r\n\t\tsetLoadingTrafficTotal(true);\r\n\t\tsetTrafficTotalData([]);\r\n\t\tgetTrafficTotalData();\r\n\t}, [cameraCode, startDate, endTime, additionalFilter]);\r\n\r\n\tconst getTrafficTotalData = () => {\r\n\t\taxios\r\n\t\t\t.get(`${currentURL}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetTrafficTotalData(res.data);\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetLoadingTrafficTotal(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t\tmessage.warning(\"해당 기간 차선 별 데이터가 없습니다\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t} else if (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\"네트워크 문제 혹은 일시적인 오류로 페이지를 불러올 수 없습니다\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmessage.warning(\"해당 기간 차선 별 데이터가 없습니다\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isEmptyData ? (\r\n\t\t\t\tisLoadingTrafficTotal ? (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<LaneDataVisualization\r\n\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\tsetActiveVisualKey={setActiveVisualKey}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<LaneTableCard\r\n\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\ttableKey=\"first\"\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tcamLanes: state.locationCode.camLanes,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(LaneVisualization);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js",["730","731","732","733","734"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js",["735"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js",["736"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst AvgSpeedLine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 차선별 평균속도 parse\");\r\n\t\tvar avgSpeedTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\r\n\t\t\ttempCar[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\tavgSpeedTotalData.push(tempCar);\r\n\t\t\tavgSpeedTotalData.push(tempBus);\r\n\t\t\tavgSpeedTotalData.push(tempTruck);\r\n\t\t\tavgSpeedTotalData.push(tempMotor);\r\n\t\t});\r\n\t\tsetData(avgSpeedTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"lane\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default AvgSpeedLine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js",["737","738"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTOverSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 시간별 과속 parse\");\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = motorSpdVolume;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tseriesField: \"key\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTOverSpeed;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js",["739"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js",["740"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js",["741"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst SearchFisrtTable = (props) => {\r\n\tconst { firstData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData(firstData);\r\n\t}, [firstData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t\tkey: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tkey: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tkey: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tkey: \"bus\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tkey: \"truck\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tkey: \"motor\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"motorpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"보행자\",\r\n\t\t\tkey: \"totalPerson\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"수(명)\",\r\n\t\t\t\t\tdataIndex: \"person\",\r\n\t\t\t\t\tkey: \"person\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"무단횡단(명)\",\r\n\t\t\t\t\tdataIndex: \"jaywalk\",\r\n\t\t\t\t\tkey: \"jaywalk\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\t// const axiosData = () => {\r\n\t// \tconsole.log(\"count table axios\");\r\n\t// \ttrafficTotalData.some((eachData, index) => {\r\n\t// \t\tconst {\r\n\t// \t\t\trecordTime,\r\n\t// \t\t\ttotalVehicleVolume,\r\n\t// \t\t\ttotalVehicleAvgSpeed,\r\n\t// \t\t\ttotalVehiclePassengerCarUnit,\r\n\t// \t\t\ttotalVehicleSpdVolume,\r\n\t// \t\t\tcarVolume,\r\n\t// \t\t\tcarAvgSpeed,\r\n\t// \t\t\tcarPassengerCarUnit,\r\n\t// \t\t\tcarVehicleRatio,\r\n\t// \t\t\tcarSpdVolume,\r\n\t// \t\t\tmBusVolume,\r\n\t// \t\t\tmBusAvgSpeed,\r\n\t// \t\t\tmBusPassengerCarUnit,\r\n\t// \t\t\tmBusVehicleRatio,\r\n\t// \t\t\tmBusSpdVolume,\r\n\t// \t\t\tmTruckVolume,\r\n\t// \t\t\tmTruckAvgSpeed,\r\n\t// \t\t\tmTruckPassengerCarUnit,\r\n\t// \t\t\tmTruckVehicleRatio,\r\n\t// \t\t\tmTruckSpdVolume,\r\n\t// \t\t\tmotorVolume,\r\n\t// \t\t\tmotorAvgSpeed,\r\n\t// \t\t\tmotorPassengerCarUnit,\r\n\t// \t\t\tmotorVehicleRatio,\r\n\t// \t\t\tmotorSpdVolume,\r\n\t// \t\t\tpedestrianVolume,\r\n\t// \t\t\tjaywalkVolume,\r\n\t// \t\t} = eachData;\r\n\t// \t\tif (recordTime === \"ALL\") {\r\n\t// \t\t\treturn false;\r\n\t// \t\t}\r\n\t// \t\tif (countCol === 6) {\r\n\t// \t\t\treturn true;\r\n\t// \t\t}\r\n\t// \t\tcountCol += 1;\r\n\r\n\t// \t\tlet dataTemp = {};\r\n\r\n\t// \t\tdataTemp[\"key\"] = index + 1;\r\n\t// \t\tdataTemp[\"time\"] = moment(recordTime).format(\"YYYY년 MM월 DD일 HH:mm:ss\");\r\n\r\n\t// \t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t// \t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t// \t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t// \t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"carCount\"] = carVolume;\r\n\t// \t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t// \t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t// \t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t// \t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t// \t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t// \t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t// \t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t// \t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t// \t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t// \t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t// \t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t// \t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t// \t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t// \t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t// \t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t// \t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t// \t\tdataTemp[\"person\"] = pedestrianVolume;\r\n\t// \t\tdataTemp[\"jaywalk\"] = jaywalkVolume;\r\n\r\n\t// \t\tTotalData.push(dataTemp);\r\n\t// \t});\r\n\t// \tsetFirstData(TotalData);\r\n\t// \tsetData(TotalData);\r\n\t// \tsetLoading(false);\r\n\t// \tsetLoadingFirst(false);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{Data.length === 0 ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SearchFisrtTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTOverSpeed.js",["742"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\search\\OverspeedPage.js",["743"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\TimeTableCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\date.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js",["744"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTFirstTable.js",["745"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js",["746"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTConcentrationRatio.js",["747"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js",["748"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleRatio.js",["749"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js",["750"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js",["751","752"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js",["753","754"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js",["755"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js",["756"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\index.js",[],["757","758"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js",["759","760","761","762"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js",["763","764","765","766","767"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js",["768"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js",["769"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst SearchFisrtTable = (props) => {\r\n\tconst { firstData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData(firstData);\r\n\t}, [firstData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t\tkey: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tkey: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tkey: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tkey: \"bus\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tkey: \"truck\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tkey: \"motor\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"motorpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"보행자\",\r\n\t\t\tkey: \"totalPerson\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"수(명)\",\r\n\t\t\t\t\tdataIndex: \"person\",\r\n\t\t\t\t\tkey: \"person\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"무단횡단(명)\",\r\n\t\t\t\t\tdataIndex: \"jaywalk\",\r\n\t\t\t\t\tkey: \"jaywalk\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{Data.length === 0 ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SearchFisrtTable;\r\n",["770","771"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js",["772"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst DLFisrtTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar FristRow;\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tFristRow = true;\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"lane\",\r\n\t\t\twidth: 60,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (FristRow) {\r\n\t\t\t\tdataTemp[\"lane\"] = \"전체\";\r\n\t\t\t\tFristRow = false;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"lane\"] = `${laneNumber} 차선`;\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default DLFisrtTable;\r\n",["773","774"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTPCU.js",["775"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTPCU = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tlet tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehiclePassengerCarUnit;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlegend: true,\r\n\t\tseriesField: \"key\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTPCU;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\liquidChart\\PeakRatio.js",[],["776","777"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\videoContainer\\StreamingContainer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js",["778","779","780"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js",[],["781","782"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\locationCode.js",[],["783","784"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\cascader\\Cascader.js",["785"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\loginCard\\LoginCard.js",["786","787"],"import React from \"react\";\r\nimport { Form, Input, Button, message, Card, Typography } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nconst LoginCard = (props) => {\r\n\tconst { baseURL, setLoggedIn } = props;\r\n\tconst { Title } = Typography;\r\n\r\n\tconst login = (values) => {\r\n\t\tconst { username, password } = values;\r\n\t\tconsole.log(username, password);\r\n\r\n\t\taxios\r\n\t\t\t.post(\r\n\t\t\t\t`${baseURL}/auth/tokens`,\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tusername,\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t}),\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tconst { jwt } = res.data;\r\n\t\t\t\twindow.localStorage.setItem(\"token\", jwt);\r\n\t\t\t\twindow.localStorage.setItem(\"username\", username);\r\n\t\t\t\tgetUserInfo();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tmessage.error(\"로그인 실패\");\r\n\t\t\t});\r\n\t};\r\n\tconst getUserInfo = () => {\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}/users/${localStorage.getItem(\"username\")}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\twindow.localStorage.setItem(\"affiliate\", res.data.affiliate);\r\n\t\t\t\tsetLoggedIn(true);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Form\r\n\t\t\t\tname=\"normal_login\"\r\n\t\t\t\tclassName=\"login-form\"\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tremember: true,\r\n\t\t\t\t}}\r\n\t\t\t\tonFinish={login}\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: \"아이디를 입력하세요\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tprefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n\t\t\t\t\t\tplaceholder=\"아이디\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: \"비밀번호를 입력하세요\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tprefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"비밀번호\"\r\n\t\t\t\t\t\tautoComplete=\"true\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\thtmlType=\"submit\"\r\n\t\t\t\t\t\tclassName=\"login-form-button\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t로그인\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(LoginCard);\r\n",["788","789"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\timeFilter\\TimeFilter.js",["790"],"import React, { useState } from \"react\";\r\nimport { Radio, Typography } from \"antd\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst TimeFilter = (props) => {\r\n\tconst { value, setValue } = props;\r\n\tconst { Text } = Typography;\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetValue(e.target.value);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"multi-radio-body\">\r\n\t\t\t<Text strong style={{ marginRight: 10, minWidth: 60 }}>\r\n\t\t\t\t선택사항\r\n\t\t\t</Text>\r\n\t\t\t<Radio.Group onChange={onChange} value={value}>\r\n\t\t\t\t<Radio value=\"ALL\">전체</Radio>\r\n\t\t\t\t<Radio value=\"DAY\">평일</Radio>\r\n\t\t\t\t<Radio value=\"END\">주말</Radio>\r\n\t\t\t</Radio.Group>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TimeFilter;\r\n",["791","792"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\dashLineChart\\WeekPedestrians.js",["793"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst WeekPedestrians = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\tvar DTPedestrians = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"11\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\ttrafficTotalData.slice(3).forEach((pedestrianData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\trecordDate,\r\n\t\t\t\tpedestrianVolume,\r\n\t\t\t\tjaywalkVolume,\r\n\t\t\t} = pedestrianData;\r\n\r\n\t\t\tconst totalTemp = {};\r\n\t\t\tconst personTemp = {};\r\n\t\t\tconst jaywalkTemp = {};\r\n\r\n\t\t\tvar timeTemp;\r\n\t\t\tif (weekOption) {\r\n\t\t\t\ttimeTemp = WeekKey[weekOption];\r\n\t\t\t}\r\n\t\t\tif (recordDate) {\r\n\t\t\t\ttimeTemp = moment(recordDate).format(\"MM-DD\");\r\n\t\t\t}\r\n\t\t\tconst personCnt = pedestrianVolume - jaywalkVolume;\r\n\r\n\t\t\ttotalTemp[\"date\"] = timeTemp;\r\n\t\t\ttotalTemp[\"type\"] = \"총 보행자\";\r\n\t\t\ttotalTemp[\"value\"] = pedestrianVolume;\r\n\r\n\t\t\tpersonTemp[\"date\"] = timeTemp;\r\n\t\t\tpersonTemp[\"type\"] = \"보행자\";\r\n\t\t\tpersonTemp[\"value\"] = personCnt;\r\n\r\n\t\t\tjaywalkTemp[\"date\"] = timeTemp;\r\n\t\t\tjaywalkTemp[\"type\"] = \"무단횡단\";\r\n\t\t\tjaywalkTemp[\"value\"] = jaywalkVolume;\r\n\r\n\t\t\tDTPedestrians.push(personTemp);\r\n\t\t\tDTPedestrians.push(totalTemp);\r\n\t\t\tDTPedestrians.push(jaywalkTemp);\r\n\t\t});\r\n\t\tsetData(DTPedestrians);\r\n\t\tsetLoading(false);\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"date\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"명\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tseriesField: \"type\",\r\n\t\tcolor: function color(_ref) {\r\n\t\t\tvar type = _ref.type;\r\n\t\t\treturn type === \"총 보행자\"\r\n\t\t\t\t? \"#F4664A\"\r\n\t\t\t\t: type === \"보행자\"\r\n\t\t\t\t? \"#30BF78\"\r\n\t\t\t\t: \"#FAAD14\";\r\n\t\t},\r\n\t\tlineStyle: function lineStyle(_ref2) {\r\n\t\t\tvar type = _ref2.type;\r\n\t\t\tif (type === \"총 보행자\") {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlineDash: [4, 4],\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn { opacity: 0.5 };\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WeekPedestrians;\r\n",["794","795"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\bidirectionalBar\\DayNight.js",["796"],"import React, { useState, useEffect } from \"react\";\r\nimport { BidirectionalBar } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst MyBidirectionalBar = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"6\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseTotalData();\r\n\t\t\tconsole.log(trafficTotalData);\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar dataSample = [\r\n\t\t\t{\r\n\t\t\t\t차종: \"승용차\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t차종: \"버스\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t차종: \"화물차\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t차종: \"이륜차\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t];\r\n\t\tvar trafficData = trafficTotalData[0];\r\n\r\n\t\tdataSample[0][\"야간 12시간 교통량\"] = trafficData[\"carNighttimeVolume\"];\r\n\t\tdataSample[1][\"야간 12시간 교통량\"] = trafficData[\"mBusNighttimeVolume\"];\r\n\t\tdataSample[2][\"야간 12시간 교통량\"] = trafficData[\"mTruckNighttimeVolume\"];\r\n\t\tdataSample[3][\"야간 12시간 교통량\"] = trafficData[\"motorNighttimeVolume\"];\r\n\r\n\t\tdataSample[0][\"주간 12시간 교통량\"] = trafficData[\"carDaytimeVolume\"];\r\n\t\tdataSample[1][\"주간 12시간 교통량\"] = trafficData[\"mBusDaytimeVolume\"];\r\n\t\tdataSample[2][\"주간 12시간 교통량\"] = trafficData[\"mTruckDaytimeVolume\"];\r\n\t\tdataSample[3][\"주간 12시간 교통량\"] = trafficData[\"motorDaytimeVolume\"];\r\n\t\tsetData(dataSample);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\twidth: 400,\r\n\t\theight: 400,\r\n\t\txField: \"차종\",\r\n\t\txAxis: { position: \"bottom\" },\r\n\t\tinteractions: [{ type: \"active-region\" }],\r\n\t\tyField: [\"주간 12시간 교통량\", \"야간 12시간 교통량\"],\r\n\t\ttooltip: {\r\n\t\t\tshared: true,\r\n\t\t\tshowMarkers: false,\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<BidirectionalBar {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MyBidirectionalBar;\r\n",["797","798"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\App.js",["799","800"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\search\\SearchPage.js",["801","802"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js",["803"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport \"../style.less\";\r\n\r\nconst WTFirstTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tvar columns;\r\n\tif (currentLaneNum === 0) {\r\n\t\tcolumns = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"시간\",\r\n\t\t\t\tdataIndex: \"time\",\r\n\t\t\t\tkey: \"time\",\r\n\t\t\t\twidth: 67,\r\n\t\t\t\ttextWrap: \"word-break\",\r\n\t\t\t\tellipsis: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"전체\",\r\n\t\t\t\tdataIndex: \"Total\",\r\n\t\t\t\tkey: \"Total\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\tkey: \"car\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"버스\",\r\n\t\t\t\tkey: \"bus\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\tkey: \"truck\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\tkey: \"motor\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"보행자\",\r\n\t\t\t\tkey: \"personTotal\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"수(명)\",\r\n\t\t\t\t\t\tdataIndex: \"person\",\r\n\t\t\t\t\t\tkey: \"person\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"무단횡단(명)\",\r\n\t\t\t\t\t\tdataIndex: \"jaywalk\",\r\n\t\t\t\t\t\tkey: \"jaywalk\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t];\r\n\t} else {\r\n\t\tcolumns = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"시간\",\r\n\t\t\t\tdataIndex: \"time\",\r\n\t\t\t\tkey: \"time\",\r\n\t\t\t\twidth: 70,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"전체\",\r\n\t\t\t\tdataIndex: \"Total\",\r\n\t\t\t\tkey: \"Total\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\tkey: \"car\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"버스\",\r\n\t\t\t\tkey: \"bus\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\tkey: \"truck\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\tkey: \"motor\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t];\r\n\t}\r\n\tconst axiosData = () => {\r\n\t\tconsole.log(\"count table axios\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t\tpedestrianVolume,\r\n\t\t\t\tjaywalkVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tdataTemp[\"time\"] = WeekKey[weekOption];\r\n\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tif (currentLaneNum === 0) {\r\n\t\t\t\tdataTemp[\"person\"] = pedestrianVolume;\r\n\t\t\t\tdataTemp[\"jaywalk\"] = jaywalkVolume;\r\n\t\t\t}\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTFirstTable;\r\n",["804","805"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\GenAvgSpeed.js",["806"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst GeneralOverSpeed = (props) => {\r\n\tconst { trafficData, page } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\tparseTotalData();\r\n\t}, [trafficData]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 시간별 PHF parse\");\r\n\t\tvar TotalData = [\r\n\t\t\t{ type: \"승용차\", value: 0 },\r\n\t\t\t{ type: \"버스\", value: 0 },\r\n\t\t\t{ type: \"화물차\", value: 0 },\r\n\t\t\t{ type: \"오토바이\", value: 0 },\r\n\t\t];\r\n\t\tvar data = {\r\n\t\t\tcarAvgSpeed: 0,\r\n\t\t\tmBusAvgSpeed: 0,\r\n\t\t\tmTruckAvgSpeed: 0,\r\n\t\t\tmotorAvgSpeed: 0,\r\n\t\t};\r\n\t\tif (page === \"REALSTATISTIC\") {\r\n\t\t\ttrafficData.forEach((eachData) => {\r\n\t\t\t\tdata[\"carAvgSpeed\"] += eachData[\"carAvgSpeed\"];\r\n\t\t\t\tdata[\"mBusAvgSpeed\"] += eachData[\"mBusAvgSpeed\"];\r\n\t\t\t\tdata[\"mTruckAvgSpeed\"] += eachData[\"mTruckAvgSpeed\"];\r\n\t\t\t\tdata[\"motorAvgSpeed\"] += eachData[\"motorAvgSpeed\"];\r\n\t\t\t});\r\n\t\t\tlet length = trafficData.length;\r\n\t\t\tdata[\"carAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"carAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t\tdata[\"mBusAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"mBusAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t\tdata[\"mTruckAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"mTruckAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t\tdata[\"motorAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"motorAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tdata = trafficData[0];\r\n\t\t}\r\n\r\n\t\tTotalData[0].value = data[\"carAvgSpeed\"];\r\n\t\tTotalData[1].value = data[\"mBusAvgSpeed\"];\r\n\t\tTotalData[2].value = data[\"mTruckAvgSpeed\"];\r\n\t\tTotalData[3].value = data[\"motorAvgSpeed\"];\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"type\",\r\n\t\tyField: \"value\",\r\n\t\tautoFit: true,\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfill: \"#FFFFFF\",\r\n\t\t\t\topacity: 0.6,\r\n\t\t\t},\r\n\t\t},\r\n\t\tmeta: {\r\n\t\t\ttype: { alias: \"차종\" },\r\n\t\t\tvalue: { alias: \"평균속도\" },\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default GeneralOverSpeed;\r\n",["807","808"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js",["809"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTOverSpeed.js",["810","811"],["812","813"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\DTCnt.js",["814"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\videoContainer\\StatContainer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\actions\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\WTPHF.js",["815"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LaneVehicleCnt.js",["816"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\sider\\index.js",["817"],"import React, { useState } from \"react\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Layout, Menu, Divider, Typography, Alert } from \"antd\";\r\nimport {\r\n\tFundProjectionScreenOutlined,\r\n\tFileTextOutlined,\r\n\tVideoCameraOutlined,\r\n\tBarChartOutlined,\r\n\tPicRightOutlined,\r\n\tFileSearchOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import logo from \"../../../assets/logo/logoBlueWN.png\";\r\n// import logoCollapsed from \"../../../assets/logo/logoBlue.png\";\r\nimport logo from \"../../../assets/logo/logoBlackWN.png\";\r\nimport logoCollapsed from \"../../../assets/logo/logoBlack.png\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst MySider = (props) => {\r\n\tconst { cameraCode } = props;\r\n\tconst { Sider } = Layout;\r\n\tconst { SubMenu } = Menu;\r\n\tconst { Text } = Typography;\r\n\r\n\tconst { pathname: path } = window.location;\r\n\r\n\tconst [siderCollapsed, setSiderCollapsed] = useState(false);\r\n\tconst [openKeys, setOpenKeys] = useState([\"statistic\"]);\r\n\r\n\tconst history = useHistory();\r\n\r\n\t// const [openKeys, setOpenKeys] = useState(() => {\r\n\t// \tif (\r\n\t// \t\tpath === \"/statistic/day\" ||\r\n\t// \t\tpath === \"/statistic/week\" ||\r\n\t// \t\tpath === \"/statistic/month\"\r\n\t// \t) {\r\n\t// \t\treturn [\"statistic\"];\r\n\t// \t} else {\r\n\t// \t\treturn [];\r\n\t// \t}\r\n\t// });\r\n\r\n\tconst handleClick = (e) => {\r\n\t\tif (cameraCode.length === 0) {\r\n\t\t\twindow.alert(\"위치설정 해주세요\");\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\thistory.push(\"/realtime/streaming\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst onCollapse = (collapsed) => {\r\n\t\tsetSiderCollapsed(collapsed);\r\n\t};\r\n\r\n\tconst onOpenChange = (keys) => {\r\n\t\tsetOpenKeys(keys);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Sider\r\n\t\t\tcollapsible\r\n\t\t\tcollapsed={siderCollapsed}\r\n\t\t\tonCollapse={onCollapse}\r\n\t\t\ttheme=\"light\"\r\n\t\t\twidth=\"240\"\r\n\t\t\tstyle={{ paddingLeft: 15, paddingRight: 7 }}\r\n\t\t>\r\n\t\t\t<div className=\"logo-position\">\r\n\t\t\t\t{siderCollapsed ? (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={logoCollapsed}\r\n\t\t\t\t\t\tclassName=\"logo-collapsed\"\r\n\t\t\t\t\t\talt=\"logo collapsed\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<img src={logo} className=\"logo\" alt=\"logo\" />\r\n\t\t\t\t\t\t<Divider type=\"vertical\" />\r\n\t\t\t\t\t\t<Text strong type=\"secondary\">\r\n\t\t\t\t\t\t\t대시보드\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"sider-divider\">\r\n\t\t\t\t<Divider />\r\n\t\t\t</div>\r\n\t\t\t<Menu\r\n\t\t\t\ttheme=\"light\"\r\n\t\t\t\tmode=\"inline\"\r\n\t\t\t\t// onClick={handleClick}\r\n\t\t\t\tdefaultSelectedKeys={[\"/realtime/streaming\"]}\r\n\t\t\t\tselectedKeys={path}\r\n\t\t\t\topenKeys={openKeys}\r\n\t\t\t\tdefaultOpenKeys={[\"statistic\"]}\r\n\t\t\t\tonOpenChange={onOpenChange}\r\n\t\t\t>\r\n\t\t\t\t<Menu.Item key=\"/realtime/streaming\" icon={<VideoCameraOutlined />}>\r\n\t\t\t\t\t<Link to=\"/realtime/streaming\">실시간 영상</Link>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\t\tkey=\"/realtime/statistic\"\r\n\t\t\t\t\ticon={<FundProjectionScreenOutlined />}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Link onClick={handleClick} to=\"/realtime/statistic\">\r\n\t\t\t\t\t\t실시간 데이터\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey=\"statistic\"\r\n\t\t\t\t\ticon={<BarChartOutlined />}\r\n\t\t\t\t\ttitle=\"누적 통계 데이터 분석\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Menu.Item key=\"/statistic/day\" icon={<PicRightOutlined />}>\r\n\t\t\t\t\t\t<Link to=\"/statistic/day\">일간 별</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key=\"/statistic/week\" icon={<PicRightOutlined />}>\r\n\t\t\t\t\t\t<Link to=\"/statistic/week\">주간 별</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key=\"/statistic/month\" icon={<PicRightOutlined />}>\r\n\t\t\t\t\t\t<Link to=\"/statistic/month\">월간 별</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t\t<Menu.Item key=\"/overspeed\" icon={<FileSearchOutlined />}>\r\n\t\t\t\t\t<Link to=\"/overspeed\">과속 데이터 조회</Link>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item key=\"/search\" icon={<FileTextOutlined />}>\r\n\t\t\t\t\t<Link to=\"/search\">데이터 조회 및 다운로드</Link>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t{/* <Menu.Item key=\"/comparison\" icon={<PieChartOutlined />}>\r\n\t\t\t\t\t<Link to=\"/comparison\">통계 비교</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n\t\t\t</Menu>\r\n\t\t</Sider>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(MySider);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js",["818"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js",["819","820"],"import React, { useState, useEffect } from \"react\";\r\nimport { Tabs, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TimeTableCard from \"../../../molecules/tableCard/TimeTableCard\";\r\nimport TimeDataVisualization from \"../../../molecules/dataVisualization/TimeDataVisualization\";\r\nimport \"../style.less\";\r\n\r\nconst TimeVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcameraCode,\r\n\t\tcamLanes,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\tsetLoggedIn,\r\n\t\tassociateIds,\r\n\t} = props;\r\n\tconst { TabPane } = Tabs;\r\n\r\n\tconst [isLoadingTrafficTotal, setLoadingTrafficTotal] = useState(true);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\r\n\tconst [totalLaneArr, setTotalLaneArr] = useState([]);\r\n\tconst [currentLaneNum, setCurrentLaneNum] = useState(\"0\");\r\n\tconst [activeVisualKey, setActiveVisualKey] = useState(\"1\");\r\n\r\n\tconst [trafficTotalData, setTrafficTotalData] = useState([]);\r\n\tconst camCodes =\r\n\t\tassociateIds.length !== 0\r\n\t\t\t? `camCodes=[${[...associateIds, cameraCode]}]`\r\n\t\t\t: `camCode=${cameraCode}`;\r\n\r\n\tconst periodURL =\r\n\t\tperiod === \"DAY\" ? \"/daily\" : period === \"WEEK\" ? \"/weekly\" : \"/monthly\";\r\n\r\n\tconst currentURL =\r\n\t\tperiod === \"DAY\"\r\n\t\t\t? `${baseURL}${trafficURL}${periodURL}?${camCodes}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=time&laneNumber=${currentLaneNum}`\r\n\t\t\t: `${baseURL}${trafficURL}${periodURL}?${camCodes}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=time&laneNumber=${currentLaneNum}&weekOption=ALL`;\r\n\r\n\tuseEffect(() => {\r\n\t\tvar tabLaneNum = [\"구간 전체\"];\r\n\t\tfor (let idx = 1; idx <= camLanes; idx++) {\r\n\t\t\ttabLaneNum.push(`${idx} 차선`);\r\n\t\t}\r\n\t\tsetTotalLaneArr(tabLaneNum);\r\n\t}, [camLanes]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTrafficTotalData([]);\r\n\t\tsetLoadingTrafficTotal(true);\r\n\t\taxiosAsync();\r\n\t}, [cameraCode, startDate, endTime, currentLaneNum]);\r\n\r\n\tconst axiosAsync = () => {\r\n\t\taxios\r\n\t\t\t.get(`${currentURL}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\tsetTrafficTotalData(res.data);\r\n\t\t\t\t\tsetLoadingTrafficTotal(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t\tif (err.response.status === 400) {\r\n\t\t\t\t\tmessage.warning(\"해당 기간 시간 별 데이터가 없습니다\");\r\n\t\t\t\t} else if (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t}\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction callback(key) {\r\n\t\tsetCurrentLaneNum(key);\r\n\t}\r\n\treturn (\r\n\t\t<Tabs defaultActiveKey=\"0\" activeKey={currentLaneNum} onChange={callback}>\r\n\t\t\t{!isLoadingTrafficTotal\r\n\t\t\t\t? totalLaneArr.map((tabName, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TabPane tab={tabName} key={index.toString()}>\r\n\t\t\t\t\t\t\t\t{/* <TabPane tab=\"{tabName}\" key=\"0\"> */}\r\n\t\t\t\t\t\t\t\t<TimeDataVisualization\r\n\t\t\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\t\t\tcurrentLaneNum={currentLaneNum}\r\n\t\t\t\t\t\t\t\t\tsetCurrentLaneNum={setCurrentLaneNum}\r\n\t\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t\t\tsetActiveVisualKey={setActiveVisualKey}\r\n\t\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<TimeTableCard\r\n\t\t\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\t\t\ttableKey=\"first\"\r\n\t\t\t\t\t\t\t\t\tcurrentLaneNum={currentLaneNum}\r\n\t\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{/* <TimeTableCard\r\n\t\t\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\t\t\ttableKey=\"overSpeed\"\r\n\t\t\t\t\t\t\t\t\tcurrentLaneNum={currentLaneNum}\r\n\t\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t\t\t<TimeTableCard\r\n\t\t\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\t\t\ttableKey=\"second\"\r\n\t\t\t\t\t\t\t\t\tcurrentLaneNum={currentLaneNum}\r\n\t\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t  })\r\n\t\t\t\t: null}\r\n\t\t</Tabs>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tcamLanes: state.locationCode.camLanes,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t\tassociateIds: state.locationCode.associateIds,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(TimeVisualization);\r\n",["821","822"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\baseURL.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js",["823","824"],"import React, { useEffect, useState } from \"react\";\r\nimport { Spin, message } from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport VisualizationCard from \"../../molecules/genVisualizationCard/GenVisualizationCard\";\r\nimport VehicleRatio from \"../../charts/doughnutChart/VehicleRatio\";\r\nimport AvgSpeedGauge from \"../../charts/gaugeChart/AvgSpeed\";\r\nimport AvgSpeedBar from \"../../charts/barChart/GenAvgSpeed\";\r\nimport OverSpeedBar from \"../../charts/barChart/GenOverSpeed\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst GeneralVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tpage,\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcurrentTime,\r\n\t\tcameraCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\trefresh,\r\n\t\tsetLoggedIn,\r\n\t\tassociateIds,\r\n\t} = props;\r\n\tconst [isLoadingTraffic, setLoadingTraffic] = useState(true);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [trafficData, setTrafficData] = useState([]);\r\n\tconst [curEndTime, setCurEndTime] = useState(\"\");\r\n\r\n\tvar camCode = cameraCode.length === 0 ? \"0001\" : cameraCode;\r\n\r\n\tconst camCodes =\r\n\t\tassociateIds.length !== 0\r\n\t\t\t? `camCodes=[${[...associateIds, camCode]}]`\r\n\t\t\t: `camCode=${camCode}`;\r\n\r\n\tvar curTime = currentTime ? currentTime : \"23:59:59\";\r\n\tconst periodURL =\r\n\t\tperiod === \"DAY\" ? \"/daily\" : period === \"WEEK\" ? \"/weekly\" : \"/monthly\";\r\n\tconst title = page === \"REALSTATISTIC\" ? `| 00:00 ~ ${curEndTime} ` : \"\";\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEmptyData(false);\r\n\t\tsetLoadingTraffic(true);\r\n\t\tsetTrafficData([]);\r\n\t\tgetTrafficData();\r\n\t}, [camCode, startDate, endTime, currentTime]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (refresh) {\r\n\t\t\tsetEmptyData(false);\r\n\t\t\tsetLoadingTraffic(true);\r\n\t\t\tsetTrafficData([]);\r\n\t\t\tgetTrafficData();\r\n\t\t}\r\n\t}, [refresh]);\r\n\r\n\tconst getTrafficData = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${trafficURL}${periodURL}?${camCodes}&startDate=${startDate}&endTime=${endTime} ${curTime}&axis=time&laneNumber=0`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetTrafficData(res.data);\r\n\t\t\t\t\tsetCurEndTime(\r\n\t\t\t\t\t\tmoment(new Date(res.data[res.data.length - 1].recordTime))\r\n\t\t\t\t\t\t\t.add(15, \"m\")\r\n\t\t\t\t\t\t\t.format(\"HH:mm\")\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetLoadingTraffic(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t\tmessage.warning(\"해당 기간 시간 별 데이터가 없습니다\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t\tif (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\r\n\t\t\t\t\t\t\"네트워크 문제 혹은 일시적인 오류로 페이지를 불러올 수 없습니다\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (err.response.status === 400) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!new Date(endTime).getTime() >=\r\n\t\t\t\t\t\tnew Date(moment(new Date()).format(\"YYYY-MM-DD\")).getTime()\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\tmessage.warning(\"해당 기간 시간 별 데이터가 없습니다\");\r\n\t\t\t\t} else if (err.response.status === 401) {\r\n\t\t\t\t\tmessage.warning(\r\n\t\t\t\t\t\t\"로그인 정보가 유효하지 않습니다. 다시 로그인해주세요\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"general-graph-layout\">\r\n\t\t\t{!isEmptyData ? (\r\n\t\t\t\tisLoadingTraffic ? (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\t\ttitle={`차종별 통행량 ${title}`}\r\n\t\t\t\t\t\t\t\tchart={<VehicleRatio trafficData={trafficData} page={page} />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\t\ttitle={`차종별 과속차량 ${title}`}\r\n\t\t\t\t\t\t\t\tchart={<OverSpeedBar trafficData={trafficData} page={page} />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\t\ttitle={`평균속도 ${title}`}\r\n\t\t\t\t\t\t\t\tchart={<AvgSpeedGauge trafficData={trafficData} page={page} />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\t\ttitle={`차종별 평균속도 ${title}`}\r\n\t\t\t\t\t\t\t\tchart={<AvgSpeedBar trafficData={trafficData} page={page} />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t) : null}\r\n\t\t</div>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t\tassociateIds: state.locationCode.associateIds,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(GeneralVisualization);\r\n",["825","826"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js",["827"],"import React, { useEffect, useState } from \"react\";\r\nimport { Spin, message } from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport VisualizationCard from \"../../molecules/genVisualizationCard/GenVisualizationCard\";\r\nimport VehicleRatio from \"../../charts/doughnutChart/VehicleRatio\";\r\nimport OverSpeedBar from \"../../charts/barChart/GenOverSpeed\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst StreamingGeneralVisualization = (props) => {\r\n\tconst {\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcurrentTime,\r\n\t\trealtimeCamCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\tsetLoggedIn,\r\n\t\tassociateIds,\r\n\t} = props;\r\n\r\n\tconst [isLoadingTraffic, setLoadingTraffic] = useState(true);\r\n\tconst [trafficData, setTrafficData] = useState([]);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [curStartTime, setCurStartTime] = useState(\"\");\r\n\tconst [curEndTime, setCurEndTime] = useState(\"\");\r\n\r\n\tconst camCodes =\r\n\t\tassociateIds.length !== 0\r\n\t\t\t? `camCodes=[${[...associateIds, realtimeCamCode]}]`\r\n\t\t\t: `camCode=${realtimeCamCode}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingTraffic(true);\r\n\t\tsetEmptyData(false);\r\n\t\tsetTrafficData([]);\r\n\t\tgetTrafficData();\r\n\t}, [realtimeCamCode, startDate, endTime, currentTime]);\r\n\r\n\tconst getTrafficData = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${trafficURL}/daily?${camCodes}&startDate=${startDate}&endTime=${endTime} ${currentTime}&axis=time&laneNumber=0`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tconsole.log(\"data\", res.data);\r\n\t\t\t\t\tvar tempStartTime = moment(\r\n\t\t\t\t\t\tres.data[res.data.length - 1].recordTime\r\n\t\t\t\t\t).format(\"HH:mm\");\r\n\t\t\t\t\tvar tempEndTime = moment(\r\n\t\t\t\t\t\tnew Date(res.data[res.data.length - 1].recordTime)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\t.add(15, \"m\")\r\n\t\t\t\t\t\t.format(\"HH:mm\");\r\n\r\n\t\t\t\t\tsetTrafficData(res.data);\r\n\t\t\t\t\tsetCurStartTime(tempStartTime);\r\n\t\t\t\t\tsetCurEndTime(tempEndTime);\r\n\t\t\t\t\tsetLoadingTraffic(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetLoadingTraffic(true);\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t\tif (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\r\n\t\t\t\t\t\t\"네트워크 문제 혹은 일시적인 오류로 페이지를 불러올 수 없습니다\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (err.response.status === 401) {\r\n\t\t\t\t\tmessage.warning(\r\n\t\t\t\t\t\t\"로그인 정보가 유효하지 않습니다. 다시 로그인해주세요\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t}\r\n\t\t\t\tsetLoadingTraffic(true);\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"general-graph-layout\">\r\n\t\t\t{!isEmptyData ? (\r\n\t\t\t\tisLoadingTraffic ? (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\ttitle={`차종별 통행량 | ${curStartTime} ~ ${curEndTime}`}\r\n\t\t\t\t\t\t\tchart={\r\n\t\t\t\t\t\t\t\t<VehicleRatio trafficData={trafficData} page=\"STREAMING\" />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\ttitle={`차종별 과속차량 | ${curStartTime} ~ ${curEndTime}`}\r\n\t\t\t\t\t\t\tchart={\r\n\t\t\t\t\t\t\t\t<OverSpeedBar trafficData={trafficData} page=\"STREAMING\" />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t<VisualizationCard title=\"차종별 통행량\" />\r\n\t\t\t\t\t<VisualizationCard title=\"차종별 과속차량\" />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t\tassociateIds: state.locationCode.associateIds,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(StreamingGeneralVisualization);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js",["828","829"],"import React, { useState, useEffect } from \"react\";\r\nimport { Spin, Typography, message } from \"antd\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LaneTableCard from \"../../../molecules/tableCard/LaneTableCard\";\r\nimport LaneDataVisualization from \"../../../molecules/dataVisualization/LaneDataVisualization\";\r\nimport \"../style.less\";\r\n\r\nconst LaneVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcameraCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\tadditionalFilter,\r\n\t\tsetLoggedIn,\r\n\t\tassociateIds,\r\n\t} = props;\r\n\tconst { Text } = Typography;\r\n\r\n\tconst [activeVisualKey, setActiveVisualKey] = useState(\"1\");\r\n\r\n\tconst [isLoadingTrafficTotal, setLoadingTrafficTotal] = useState(true);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [trafficTotalData, setTrafficTotalData] = useState([]);\r\n\r\n\tconst camCodes =\r\n\t\tassociateIds.length !== 0\r\n\t\t\t? `camCodes=[${[...associateIds, cameraCode]}]`\r\n\t\t\t: `camCode=${cameraCode}`;\r\n\r\n\tconst periodURL =\r\n\t\tperiod === \"DAY\" ? \"/daily\" : period === \"WEEK\" ? \"/weekly\" : \"/monthly\";\r\n\r\n\tconst currentURL =\r\n\t\tperiod === \"DAY\"\r\n\t\t\t? `${baseURL}${trafficURL}${periodURL}?${camCodes}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane`\r\n\t\t\t: `${baseURL}${trafficURL}${periodURL}?${camCodes}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane&weekOption=${additionalFilter}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEmptyData(false);\r\n\t\tsetLoadingTrafficTotal(true);\r\n\t\tsetTrafficTotalData([]);\r\n\t\tgetTrafficTotalData();\r\n\t}, [cameraCode, startDate, endTime, additionalFilter]);\r\n\r\n\tconst getTrafficTotalData = () => {\r\n\t\taxios\r\n\t\t\t.get(`${currentURL}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetTrafficTotalData(res.data);\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetLoadingTrafficTotal(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t\tmessage.warning(\"해당 기간 차선 별 데이터가 없습니다\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t} else if (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\r\n\t\t\t\t\t\t\"네트워크 문제 혹은 일시적인 오류로 페이지를 불러올 수 없습니다\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmessage.warning(\"해당 기간 차선 별 데이터가 없습니다\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isEmptyData ? (\r\n\t\t\t\tisLoadingTrafficTotal ? (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<LaneDataVisualization\r\n\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\tsetActiveVisualKey={setActiveVisualKey}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<LaneTableCard\r\n\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\ttableKey=\"first\"\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tcamLanes: state.locationCode.camLanes,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t\tassociateIds: state.locationCode.associateIds,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(LaneVisualization);\r\n",["830","831"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js",[],["832","833"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\search\\OverspeedPage.js",["834"],"import React, { useState } from \"react\";\r\nimport { Layout, Typography } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport OverspeedTable from \"../../molecules/StatisticsTable/OverSpeedTable\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst OverspeedPage = (props) => {\r\n\tconst { camera } = props;\r\n\r\n\tconst { setLoggedIn, isMaster } = props;\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [count, setCount] = useState(false);\r\n\r\n\tconst { Content } = Layout;\r\n\tconst { Title } = Typography;\r\n\r\n\treturn (\r\n\t\t<div className=\"page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"과속 데이터 조회\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"OVERSPEED\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\tfirstFilter={firstFilter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Title level={5} style={{ marginBottom: 15 }}>\r\n\t\t\t\t\t\t\t\t\t{camera}\r\n\t\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t\t\t<OverspeedTable\r\n\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcamera: state.location.camera,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(OverspeedPage);\r\n",["835","836"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js",["837"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst MTFirstTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar countCol;\r\n\r\n\tuseEffect(() => {\r\n\t\tcountCol = 0;\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tvar columns;\r\n\tif (currentLaneNum === 0) {\r\n\t\tcolumns = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"시간\",\r\n\t\t\t\tdataIndex: \"time\",\r\n\t\t\t\tkey: \"time\",\r\n\t\t\t\twidth: 120,\r\n\t\t\t\ttextWrap: \"word-break\",\r\n\t\t\t\tellipsis: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"전체\",\r\n\t\t\t\tdataIndex: \"Total\",\r\n\t\t\t\tkey: \"Total\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\tkey: \"car\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"버스\",\r\n\t\t\t\tkey: \"bus\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\tkey: \"truck\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\tkey: \"motor\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"보행자\",\r\n\t\t\t\tkey: \"personTotal\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"수(명)\",\r\n\t\t\t\t\t\tdataIndex: \"person\",\r\n\t\t\t\t\t\tkey: \"person\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"무단횡단(명)\",\r\n\t\t\t\t\t\tdataIndex: \"jaywalk\",\r\n\t\t\t\t\t\tkey: \"jaywalk\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t];\r\n\t} else {\r\n\t\tcolumns = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"시간\",\r\n\t\t\t\tdataIndex: \"time\",\r\n\t\t\t\tkey: \"time\",\r\n\t\t\t\twidth: 70,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"전체\",\r\n\t\t\t\tdataIndex: \"Total\",\r\n\t\t\t\tkey: \"Total\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\tkey: \"car\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"버스\",\r\n\t\t\t\tkey: \"bus\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\tkey: \"truck\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\tkey: \"motor\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t];\r\n\t}\r\n\tconst axiosData = () => {\r\n\t\tvar TotalData = [];\r\n\t\tconsole.log(\"count table axios\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t\tpedestrianVolume,\r\n\t\t\t\tjaywalkVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (countCol < 3) {\r\n\t\t\t\tif (countCol === 0) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"월간전체\";\r\n\t\t\t\t} else if (countCol === 1) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"평일전체\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"주말전체\";\r\n\t\t\t\t}\r\n\t\t\t\tcountCol += 1;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"time\"] = moment(recordDate).format(\"YYYY년 MM월 DD일\");\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tif (currentLaneNum === 0) {\r\n\t\t\t\tdataTemp[\"person\"] = pedestrianVolume;\r\n\t\t\t\tdataTemp[\"jaywalk\"] = jaywalkVolume;\r\n\t\t\t}\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MTFirstTable;\r\n",["838","839"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LaneVehicleRatio.js",["840"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\WTVehicleRatio.js",["841"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst VehicleRatio = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"3\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count count parse\");\r\n\t\tvar carRatio = [];\r\n\t\tvar busRatio = [];\r\n\t\tvar truckRatio = [];\r\n\t\tvar motorRatio = [];\r\n\t\tvar RatioTotalData = [];\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\r\n\t\t\ttempCar[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempCar[\"value\"] = parseFloat((carVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempBus[\"value\"] = parseFloat((mBusVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempTruck[\"value\"] = parseFloat((mTruckVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempMotor[\"value\"] = parseFloat((motorVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\r\n\t\t\tcarRatio.push(tempCar);\r\n\t\t\tbusRatio.push(tempBus);\r\n\t\t\ttruckRatio.push(tempTruck);\r\n\t\t\tmotorRatio.push(tempMotor);\r\n\t\t});\r\n\t\tRatioTotalData = carRatio.concat(\r\n\t\t\tbusRatio.concat(truckRatio.concat(motorRatio))\r\n\t\t);\r\n\t\tsetData(RatioTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"%\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default VehicleRatio;\r\n",["842","843"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\statisticText\\PeakHourFlowRate.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js",["844","845"],"import React, { useState, useEffect } from \"react\";\r\nimport { Layout, Spin } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport GeneralVisualization from \"../../organisms/generalVisualization/GeneralVisualization\";\r\nimport TimeStatistic from \"../../organisms/visualStatistic/timeStat/TimeStat\";\r\nimport LaneStatistic from \"../../organisms/visualStatistic/laneStat/LaneStat\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst DayStatPage = (props) => {\r\n\tconst { setLoggedIn, isMaster } = props;\r\n\tconst { Content } = Layout;\r\n\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [count, setCount] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className=\"statistic-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"통계 분석\", \"일간 별\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\tfirstFilter={firstFilter}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\tcount ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{/* <div className=\"statistic-general-visualization\"> */}\r\n\t\t\t\t\t\t\t\t\t<GeneralVisualization\r\n\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\tpage=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\trefresh={false}\r\n\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t\t\t\t\t\t{timeClassification ? (\r\n\t\t\t\t\t\t\t\t\t\t<TimeStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<LaneStatistic\r\n\t\t\t\t\t\t\t\t\t\t\tperiod=\"DAY\"\r\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcity: state.location.city,\r\n\t\tdistrict: state.location.district,\r\n\t\troad: state.location.road,\r\n\t\tspot: state.location.spot,\r\n\t\tcamera: state.location.camera,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationInfo: () => {\r\n\t\t\tdispatch(actions.getLocation());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DayStatPage);\r\n",["846","847"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\searchData\\SearchData.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\dataVisualization\\TimeDataVisualization.js",["848"],"import React, { useState } from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport DayCntLineChart from \"../../charts/lineChart/DTCnt\";\r\nimport DayPCULineChart from \"../../charts/lineChart/DTPCU\";\r\nimport DayVehicleRatio from \"../../charts/lineChart/DTVehicleRatio\";\r\nimport DayAvgSpeed from \"../../charts/lineChart/DTAvgSpeed\";\r\nimport DayOverSpeed from \"../../charts/lineChart/DTOverSpeed\";\r\nimport Peak15 from \"../../charts/statisticText/Peak15\";\r\nimport PeakHourFlowRate from \"../../charts/statisticText/PeakHourFlowRate\";\r\nimport DayPHF from \"../../charts/statisticText/PHF\";\r\nimport DayConcentrationRatio from \"../../charts/liquidChart/PeakRatio\";\r\nimport BidirectionalBar from \"../../charts/bidirectionalBar/DayNight\";\r\nimport PedestriansDashLine from \"../../charts/dashLineChart/DayPedestrians\";\r\n\r\nimport WeekCnt from \"../../charts/lineChart/WTCnt\";\r\nimport WeekPCU from \"../../charts/lineChart/WTPCU\";\r\nimport WeekAvgSpeed from \"../../charts/lineChart/WTAvgSpeed\";\r\nimport WeekOverSpeed from \"../../charts/lineChart/WTOverSpeed\";\r\nimport WeekVehicleRatio from \"../../charts/barChart/WTVehicleRatio\";\r\nimport WeekPeakTime from \"../../charts/lineChart/WeekPeakTime\";\r\n\r\nimport WeekMonthFlowRate from \"../../charts/barChart/WMFlowRate\";\r\nimport WeekMonthPHF from \"../../charts/barChart/WTPHF\";\r\nimport WeekMonthConcentrationRatio from \"../../charts/barChart/WTConcentrationRatio\";\r\nimport WeekMonthPedstrians from \"../../charts/dashLineChart/WeekPedestrians\";\r\n\r\nimport MonthCnt from \"../../charts/lineChart/MTCnt\";\r\nimport MonthPCU from \"../../charts/lineChart/MTPCU\";\r\nimport MonthVehicleRatio from \"../../charts/lineChart/MTVehicleRatio\";\r\nimport MonthAvgSpeed from \"../../charts/lineChart/MTAvgSpeed\";\r\nimport MonthOverSpeed from \"../../charts/lineChart/MTOverSpeed\";\r\nimport MonthPeakTime from \"../../charts/lineChart/MonthPeakTime\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst TimeDataVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tcurrentLaneNum,\r\n\t\tactiveVisualKey,\r\n\t\tsetActiveVisualKey,\r\n\t\ttrafficTotalData,\r\n\t} = props;\r\n\r\n\tconst { TabPane } = Tabs;\r\n\r\n\tconst callback = (key) => {\r\n\t\tsetActiveVisualKey(key);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Tabs\r\n\t\t\tdefaultActiveKey=\"1\"\r\n\t\t\tactiveKey={activeVisualKey}\r\n\t\t\tonChange={callback}\r\n\t\t\ttabPosition=\"right\"\r\n\t\t>\r\n\t\t\t<TabPane tab=\"교통량\" key=\"1\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayCntLineChart\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekCnt\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthCnt\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"PCU\" key=\"2\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayPCULineChart\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekPCU\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthPCU\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"차종비율\" key=\"3\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayVehicleRatio\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekVehicleRatio\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthVehicleRatio\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"평균속도\" key=\"4\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayAvgSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekAvgSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthAvgSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"과속차량\" key=\"5\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayOverSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekOverSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthOverSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t{parseInt(currentLaneNum) === 0 ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<TabPane tab=\"주야율\" key=\"6\">\r\n\t\t\t\t\t\t<BidirectionalBar\r\n\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"첨두시간\" key=\"7\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<Peak15\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t\t\t<WeekPeakTime\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<MonthPeakTime\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"첨두유율\" key=\"8\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<PeakHourFlowRate\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthFlowRate\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"PHF\" key=\"9\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<DayPHF\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthPHF\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"집중률\" key=\"10\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<DayConcentrationRatio\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthConcentrationRatio\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"무단횡단\" key=\"11\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<PedestriansDashLine\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthPedstrians\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\tsetActiveVisualKey(\"1\")\r\n\t\t\t)}\r\n\t\t</Tabs>\r\n\t);\r\n};\r\n\r\nexport default TimeDataVisualization;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\datePicker\\DatePicker.js",["849"],"import React, { useState, useEffect } from \"react\";\r\nimport { DatePicker, ConfigProvider, Typography } from \"antd\";\r\n// import locale from \"antd/lib/locale/ko_KR\";\r\nimport locale from \"antd/es/locale/ko_KR\";\r\nimport \"moment/locale/ko\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst MyDatePicker = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tsetTempStartDate,\r\n\t\tsetTempEndTime,\r\n\t\tdayStartDate,\r\n\t\tdayEndTime,\r\n\t\tweekStartDate,\r\n\t\tweekEndTime,\r\n\t\tmonthStartDate,\r\n\t\tmonthEndTime,\r\n\t\tsearchStartDate,\r\n\t\tsearchEndTime,\r\n\t\toverSpeedStartDate,\r\n\t\toverSpeedEndTime,\r\n\t} = props;\r\n\tconst { RangePicker } = DatePicker;\r\n\tconst { Text } = Typography;\r\n\tconst [week, setWeek] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (period === \"WEEK\" && weekStartDate) {\r\n\t\t\tsetTempStartDate(weekStartDate);\r\n\t\t\tsetTempEndTime(weekEndTime);\r\n\t\t} else if (period === \"MONTH\" && monthStartDate) {\r\n\t\t\tsetTempStartDate(monthStartDate);\r\n\t\t\tsetTempEndTime(monthEndTime);\r\n\t\t} else if (period === \"SEARCH\" && searchStartDate) {\r\n\t\t\tsetTempStartDate(searchStartDate);\r\n\t\t\tsetTempEndTime(searchEndTime);\r\n\t\t} else if (period === \"DAY\" && dayStartDate) {\r\n\t\t\tsetTempStartDate(dayStartDate);\r\n\t\t\tsetTempEndTime(dayEndTime);\r\n\t\t} else if (period === \"OVERSPEED\" && overSpeedStartDate) {\r\n\t\t\tsetTempStartDate(overSpeedStartDate);\r\n\t\t\tsetTempEndTime(overSpeedEndTime);\r\n\t\t} else {\r\n\t\t\treturn () => {\r\n\t\t\t\tsetTempStartDate(\"\");\r\n\t\t\t\tsetTempEndTime(\"\");\r\n\t\t\t};\r\n\t\t}\r\n\t}, [period]);\r\n\r\n\tvar defaultDay = dayStartDate && moment(dayStartDate);\r\n\tvar defaultWeek = weekStartDate && moment(weekStartDate);\r\n\tvar defaultMonth = monthStartDate && moment(monthStartDate, \"YYYY-MM\");\r\n\tvar defaultOverSpeed = overSpeedStartDate && moment(overSpeedStartDate);\r\n\tvar defaultSearch =\r\n\t\tsearchStartDate || searchEndTime\r\n\t\t\t? [moment(searchStartDate), moment(searchEndTime)]\r\n\t\t\t: null;\r\n\r\n\tmoment.locale(\"ko\", {\r\n\t\tweek: {\r\n\t\t\tdow: 7,\r\n\t\t},\r\n\t});\r\n\r\n\tconst onChange = (date, dateString) => {\r\n\t\tvar startDate = \"\";\r\n\t\tvar endDate = \"\";\r\n\t\tif (period === \"WEEK\") {\r\n\t\t\tstartDate = moment(date).startOf(\"week\").format(\"YYYY-MM-DD\");\r\n\t\t\tendDate = moment(date).endOf(\"week\").format(\"YYYY-MM-DD\");\r\n\t\t\tsetWeek([startDate, endDate]);\r\n\t\t} else if (period === \"MONTH\") {\r\n\t\t\tstartDate = moment(date).startOf(\"month\").format(\"YYYY-MM-DD\");\r\n\t\t\tendDate = moment(date).endOf(\"month\").format(\"YYYY-MM-DD\");\r\n\t\t} else if (period === \"SEARCH\") {\r\n\t\t\tstartDate = dateString[0];\r\n\t\t\tendDate = dateString[1];\r\n\t\t} else {\r\n\t\t\tstartDate = endDate = dateString;\r\n\t\t}\r\n\t\tsetTempStartDate(startDate);\r\n\t\tsetTempEndTime(endDate);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ConfigProvider locale={locale}>\r\n\t\t\t{period === \"WEEK\" ? (\r\n\t\t\t\t<div className=\"week-description\">\r\n\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tpicker=\"week\"\r\n\t\t\t\t\t\tplaceholder=\"주 선택\"\r\n\t\t\t\t\t\tdefaultValue={defaultWeek}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{week[1] && (\r\n\t\t\t\t\t\t<Text type=\"secondary\" style={{ marginLeft: 10, marginTop: 5 }}>\r\n\t\t\t\t\t\t\t{week[0]} ~ {week[1]}\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t) : period === \"MONTH\" ? (\r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tpicker=\"month\"\r\n\t\t\t\t\tplaceholder=\"월 선택\"\r\n\t\t\t\t\tdefaultValue={defaultMonth}\r\n\t\t\t\t/>\r\n\t\t\t) : period === \"SEARCH\" ? (\r\n\t\t\t\t<RangePicker onChange={onChange} defaultValue={defaultSearch} />\r\n\t\t\t) : (\r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tplaceholder=\"날짜 선택\"\r\n\t\t\t\t\tdefaultValue={period === \"DAY\" ? defaultDay : defaultOverSpeed}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</ConfigProvider>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdayStartDate: state.date.dayStartDate,\r\n\t\tdayEndTime: state.date.dayEndTime,\r\n\t\tweekStartDate: state.date.weekStartDate,\r\n\t\tweekEndTime: state.date.weekEndTime,\r\n\t\tmonthStartDate: state.date.monthStartDate,\r\n\t\tmonthEndTime: state.date.monthEndTime,\r\n\t\tsearchStartDate: state.date.searchStartDate,\r\n\t\tsearchEndTime: state.date.searchEndTime,\r\n\t\toverSpeedStartDate: state.date.overSpeedStartDate,\r\n\t\toverSpeedEndTime: state.date.overSpeedEndTime,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(MyDatePicker);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\tableDescription\\TableDescription.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\WTConcentrationRatio.js",["850"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LanePCU.js",["851"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js",["852"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js",["853"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTCnt.js",["854"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"1\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 통행량 그래프 parse\");\r\n\t\tvar cntTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carVolume;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusVolume;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckVolume;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorVolume;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleVolume;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tcntTotalData.push(tempCar);\r\n\t\t\tcntTotalData.push(tempBus);\r\n\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\tcntTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlegend: true,\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTCnt;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\location.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTCnt.js",["855"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\statisticText\\PHF.js",[],["856","857"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTOverSpeed.js",["858"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport moment from \"moment\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst OverSpeedCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 과속 parse\");\r\n\t\tvar cntTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleSpdVolume;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tcntTotalData.push(tempCar);\r\n\t\t\tcntTotalData.push(tempBus);\r\n\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\tcntTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default OverSpeedCnt;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\accountForm\\PasswordFrom.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\accountForm\\SignupForm.js",["859","860"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTSecondTable.js",["861"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTPCU.js",["862"],["863","864"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\statisticText\\Peak15.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\userInfo.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MonthPeakTime.js",["865"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\tableCard\\TimeTableCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\video\\Video.js",["866"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTAvgSpeed.js",["867"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\account\\PasswordPage.js",["868"],"import React, { useState } from \"react\";\r\nimport { Layout, Typography, Divider } from \"antd\";\r\n\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport PasswordForm from \"../../organisms/accountForm/PasswordFrom\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst PasswordPage = (props) => {\r\n\tconst { setLoggedIn, isMaster } = props;\r\n\tconst { Content } = Layout;\r\n\tconst { Title } = Typography;\r\n\treturn (\r\n\t\t<div className=\"account-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb\r\n\t\t\t\t\t\t\tpageHierarchy={[\"대시보드\", \"개인정보\", \"비밀번호 변경\"]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Title level={3} style={{ minWidth: 160 }}>\r\n\t\t\t\t\t\t\t비밀번호 변경\r\n\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t<PasswordForm isMaster={isMaster} setLoggedIn={setLoggedIn} />\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PasswordPage;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\DTOverSpeed.js",["869"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTAvgSpeed.js",["870"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\gaugeChart\\AvgSpeed.js",["871"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\avatar\\Avatar.js",["872"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js",["873","874"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\doughnutChart\\VehicleRatio.js",["875"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\dashLineChart\\DayPedestrians.js",["876","877"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\nimport { unstable_batchedUpdates } from \"react-dom\";\r\n\r\nconst Pedestrians = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar DTPedestrians = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"11\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\ttrafficTotalData.slice(1).forEach((pedestrianData) => {\r\n\t\t\tconst { recordTime, pedestrianVolume, jaywalkVolume } = pedestrianData;\r\n\r\n\t\t\tconst totalTemp = {};\r\n\t\t\tconst personTemp = {};\r\n\t\t\tconst jaywalkTemp = {};\r\n\r\n\t\t\tconst timeTemp = moment(recordTime).format(\"HH:mm\");\r\n\t\t\tconst personCnt = pedestrianVolume - jaywalkVolume;\r\n\r\n\t\t\ttotalTemp[\"date\"] = timeTemp;\r\n\t\t\ttotalTemp[\"type\"] = \"총 보행자\";\r\n\t\t\ttotalTemp[\"value\"] = pedestrianVolume;\r\n\r\n\t\t\tpersonTemp[\"date\"] = timeTemp;\r\n\t\t\tpersonTemp[\"type\"] = \"보행자\";\r\n\t\t\tpersonTemp[\"value\"] = personCnt;\r\n\r\n\t\t\tjaywalkTemp[\"date\"] = timeTemp;\r\n\t\t\tjaywalkTemp[\"type\"] = \"무단횡단\";\r\n\t\t\tjaywalkTemp[\"value\"] = jaywalkVolume;\r\n\r\n\t\t\tDTPedestrians.push(personTemp);\r\n\t\t\tDTPedestrians.push(totalTemp);\r\n\t\t\tDTPedestrians.push(jaywalkTemp);\r\n\t\t});\r\n\t\tsetData(DTPedestrians);\r\n\t\tsetLoading(false);\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"date\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"명\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tseriesField: \"type\",\r\n\t\tcolor: function color(_ref) {\r\n\t\t\tvar type = _ref.type;\r\n\t\t\treturn type === \"총 보행자\"\r\n\t\t\t\t? \"#F4664A\"\r\n\t\t\t\t: type === \"보행자\"\r\n\t\t\t\t? \"#30BF78\"\r\n\t\t\t\t: \"#FAAD14\";\r\n\t\t},\r\n\t\tlineStyle: function lineStyle(_ref2) {\r\n\t\t\tvar type = _ref2.type;\r\n\t\t\tif (type === \"총 보행자\") {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlineDash: [4, 4],\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn { opacity: 0.5 };\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default Pedestrians;\r\n",["878","879"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\WMFlowRate.js",["880"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\login\\LoginPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\DTPCU.js",["881"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\header\\index.js",["882"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTVehicleRatio.js",["883"],{"ruleId":"884","severity":1,"message":"885","line":81,"column":5,"nodeType":"886","endLine":81,"endColumn":27,"suggestions":"887"},{"ruleId":"884","severity":1,"message":"888","line":89,"column":5,"nodeType":"886","endLine":89,"endColumn":14,"suggestions":"889"},{"ruleId":"890","replacedBy":"891"},{"ruleId":"892","replacedBy":"893"},{"ruleId":"884","severity":1,"message":"894","line":18,"column":15,"nodeType":"895","endLine":18,"endColumn":16},{"ruleId":"890","replacedBy":"896"},{"ruleId":"892","replacedBy":"897"},{"ruleId":"884","severity":1,"message":"898","line":63,"column":5,"nodeType":"886","endLine":63,"endColumn":13,"suggestions":"899"},{"ruleId":"890","replacedBy":"900"},{"ruleId":"892","replacedBy":"901"},{"ruleId":"884","severity":1,"message":"902","line":18,"column":5,"nodeType":"886","endLine":18,"endColumn":40,"suggestions":"903"},{"ruleId":"884","severity":1,"message":"902","line":29,"column":5,"nodeType":"886","endLine":29,"endColumn":40,"suggestions":"904"},{"ruleId":"890","replacedBy":"905"},{"ruleId":"892","replacedBy":"906"},{"ruleId":"884","severity":1,"message":"907","line":53,"column":5,"nodeType":"886","endLine":53,"endColumn":13,"suggestions":"908"},{"ruleId":"884","severity":1,"message":"909","line":45,"column":5,"nodeType":"886","endLine":45,"endColumn":47,"suggestions":"910"},{"ruleId":"884","severity":1,"message":"909","line":54,"column":5,"nodeType":"886","endLine":54,"endColumn":14,"suggestions":"911"},{"ruleId":"884","severity":1,"message":"909","line":36,"column":5,"nodeType":"886","endLine":36,"endColumn":55,"suggestions":"912"},{"ruleId":"913","severity":1,"message":"914","line":24,"column":9,"nodeType":"915","messageId":"916","endLine":24,"endColumn":20},{"ruleId":"884","severity":1,"message":"888","line":52,"column":5,"nodeType":"886","endLine":52,"endColumn":53,"suggestions":"917"},{"ruleId":"890","replacedBy":"918"},{"ruleId":"892","replacedBy":"919"},{"ruleId":"884","severity":1,"message":"902","line":19,"column":5,"nodeType":"886","endLine":19,"endColumn":40,"suggestions":"920"},{"ruleId":"884","severity":1,"message":"902","line":19,"column":5,"nodeType":"886","endLine":19,"endColumn":40,"suggestions":"921"},{"ruleId":"890","replacedBy":"922"},{"ruleId":"892","replacedBy":"923"},{"ruleId":"913","severity":1,"message":"924","line":1,"column":27,"nodeType":"915","messageId":"916","endLine":1,"endColumn":36},{"ruleId":"913","severity":1,"message":"925","line":3,"column":8,"nodeType":"915","messageId":"916","endLine":3,"endColumn":13},{"ruleId":"890","replacedBy":"926"},{"ruleId":"892","replacedBy":"927"},{"ruleId":"884","severity":1,"message":"928","line":42,"column":5,"nodeType":"886","endLine":42,"endColumn":7,"suggestions":"929"},{"ruleId":"890","replacedBy":"930"},{"ruleId":"892","replacedBy":"931"},{"ruleId":"884","severity":1,"message":"902","line":24,"column":5,"nodeType":"886","endLine":24,"endColumn":40,"suggestions":"932"},{"ruleId":"890","replacedBy":"933"},{"ruleId":"892","replacedBy":"934"},{"ruleId":"884","severity":1,"message":"935","line":27,"column":5,"nodeType":"886","endLine":27,"endColumn":39,"suggestions":"936"},{"ruleId":"884","severity":1,"message":"937","line":27,"column":6,"nodeType":"938","endLine":27,"endColumn":38},{"ruleId":"884","severity":1,"message":"939","line":15,"column":14,"nodeType":"895","endLine":15,"endColumn":18},{"ruleId":"884","severity":1,"message":"940","line":46,"column":5,"nodeType":"886","endLine":46,"endColumn":37,"suggestions":"941"},{"ruleId":"913","severity":1,"message":"942","line":2,"column":23,"nodeType":"915","messageId":"916","endLine":2,"endColumn":31},{"ruleId":"913","severity":1,"message":"943","line":46,"column":9,"nodeType":"915","messageId":"916","endLine":46,"endColumn":18},{"ruleId":"884","severity":1,"message":"940","line":28,"column":5,"nodeType":"886","endLine":28,"endColumn":23,"suggestions":"944"},{"ruleId":"884","severity":1,"message":"902","line":18,"column":5,"nodeType":"886","endLine":18,"endColumn":40,"suggestions":"945"},{"ruleId":"913","severity":1,"message":"946","line":22,"column":10,"nodeType":"915","messageId":"916","endLine":22,"endColumn":14},{"ruleId":"884","severity":1,"message":"947","line":43,"column":5,"nodeType":"886","endLine":43,"endColumn":55,"suggestions":"948"},{"ruleId":"884","severity":1,"message":"949","line":109,"column":19,"nodeType":"895","endLine":109,"endColumn":20},{"ruleId":"884","severity":1,"message":"950","line":110,"column":20,"nodeType":"895","endLine":110,"endColumn":21},{"ruleId":"884","severity":1,"message":"951","line":111,"column":23,"nodeType":"895","endLine":111,"endColumn":24},{"ruleId":"952","severity":1,"message":"953","line":242,"column":38,"nodeType":"954","messageId":"955","endLine":242,"endColumn":40},{"ruleId":"952","severity":1,"message":"956","line":475,"column":38,"nodeType":"954","messageId":"957","endLine":475,"endColumn":40},{"ruleId":"884","severity":1,"message":"958","line":14,"column":5,"nodeType":"886","endLine":14,"endColumn":18,"suggestions":"959"},{"ruleId":"884","severity":1,"message":"902","line":18,"column":5,"nodeType":"886","endLine":18,"endColumn":40,"suggestions":"960"},{"ruleId":"884","severity":1,"message":"902","line":29,"column":5,"nodeType":"886","endLine":29,"endColumn":40,"suggestions":"961"},{"ruleId":"913","severity":1,"message":"962","line":42,"column":5,"nodeType":"915","messageId":"916","endLine":42,"endColumn":26},{"ruleId":"884","severity":1,"message":"963","line":41,"column":5,"nodeType":"886","endLine":41,"endColumn":7,"suggestions":"964"},{"ruleId":"884","severity":1,"message":"965","line":16,"column":5,"nodeType":"886","endLine":16,"endColumn":18,"suggestions":"966"},{"ruleId":"913","severity":1,"message":"967","line":3,"column":8,"nodeType":"915","messageId":"916","endLine":3,"endColumn":14},{"ruleId":"884","severity":1,"message":"902","line":19,"column":5,"nodeType":"886","endLine":19,"endColumn":40,"suggestions":"968"},{"ruleId":"913","severity":1,"message":"969","line":21,"column":9,"nodeType":"915","messageId":"916","endLine":21,"endColumn":14},{"ruleId":"884","severity":1,"message":"939","line":15,"column":14,"nodeType":"895","endLine":15,"endColumn":18},{"ruleId":"884","severity":1,"message":"939","line":20,"column":14,"nodeType":"895","endLine":20,"endColumn":18},{"ruleId":"913","severity":1,"message":"970","line":10,"column":13,"nodeType":"915","messageId":"916","endLine":10,"endColumn":20},{"ruleId":"884","severity":1,"message":"902","line":30,"column":5,"nodeType":"886","endLine":30,"endColumn":40,"suggestions":"971"},{"ruleId":"884","severity":1,"message":"902","line":29,"column":5,"nodeType":"886","endLine":29,"endColumn":40,"suggestions":"972"},{"ruleId":"884","severity":1,"message":"902","line":17,"column":5,"nodeType":"886","endLine":17,"endColumn":40,"suggestions":"973"},{"ruleId":"884","severity":1,"message":"902","line":18,"column":5,"nodeType":"886","endLine":18,"endColumn":40,"suggestions":"974"},{"ruleId":"913","severity":1,"message":"970","line":6,"column":13,"nodeType":"915","messageId":"916","endLine":6,"endColumn":20},{"ruleId":"913","severity":1,"message":"975","line":10,"column":10,"nodeType":"915","messageId":"916","endLine":10,"endColumn":15},{"ruleId":"913","severity":1,"message":"976","line":4,"column":10,"nodeType":"915","messageId":"916","endLine":4,"endColumn":13},{"ruleId":"884","severity":1,"message":"902","line":19,"column":5,"nodeType":"886","endLine":19,"endColumn":40,"suggestions":"977"},{"ruleId":"913","severity":1,"message":"978","line":1,"column":17,"nodeType":"915","messageId":"916","endLine":1,"endColumn":25},{"ruleId":"884","severity":1,"message":"902","line":18,"column":5,"nodeType":"886","endLine":18,"endColumn":40,"suggestions":"979"},{"ruleId":"890","replacedBy":"980"},{"ruleId":"892","replacedBy":"981"},{"ruleId":"913","severity":1,"message":"982","line":35,"column":9,"nodeType":"915","messageId":"916","endLine":35,"endColumn":22},{"ruleId":"913","severity":1,"message":"983","line":35,"column":24,"nodeType":"915","messageId":"916","endLine":35,"endColumn":40},{"ruleId":"884","severity":1,"message":"888","line":77,"column":5,"nodeType":"886","endLine":77,"endColumn":30,"suggestions":"984"},{"ruleId":"884","severity":1,"message":"888","line":85,"column":5,"nodeType":"886","endLine":85,"endColumn":14,"suggestions":"985"},{"ruleId":"884","severity":1,"message":"949","line":116,"column":19,"nodeType":"895","endLine":116,"endColumn":20},{"ruleId":"884","severity":1,"message":"950","line":117,"column":20,"nodeType":"895","endLine":117,"endColumn":21},{"ruleId":"884","severity":1,"message":"951","line":118,"column":23,"nodeType":"895","endLine":118,"endColumn":24},{"ruleId":"952","severity":1,"message":"953","line":249,"column":38,"nodeType":"954","messageId":"955","endLine":249,"endColumn":40},{"ruleId":"952","severity":1,"message":"956","line":486,"column":38,"nodeType":"954","messageId":"957","endLine":486,"endColumn":40},{"ruleId":"884","severity":1,"message":"894","line":18,"column":15,"nodeType":"895","endLine":18,"endColumn":16},{"ruleId":"913","severity":1,"message":"967","line":3,"column":8,"nodeType":"915","messageId":"916","endLine":3,"endColumn":14},{"ruleId":"890","replacedBy":"986"},{"ruleId":"892","replacedBy":"987"},{"ruleId":"884","severity":1,"message":"939","line":15,"column":14,"nodeType":"895","endLine":15,"endColumn":18},{"ruleId":"890","replacedBy":"988"},{"ruleId":"892","replacedBy":"989"},{"ruleId":"884","severity":1,"message":"902","line":29,"column":5,"nodeType":"886","endLine":29,"endColumn":40,"suggestions":"990"},{"ruleId":"890","replacedBy":"991"},{"ruleId":"892","replacedBy":"992"},{"ruleId":"913","severity":1,"message":"925","line":4,"column":8,"nodeType":"915","messageId":"916","endLine":4,"endColumn":13},{"ruleId":"913","severity":1,"message":"993","line":17,"column":33,"nodeType":"915","messageId":"916","endLine":17,"endColumn":40},{"ruleId":"884","severity":1,"message":"994","line":58,"column":5,"nodeType":"886","endLine":58,"endColumn":23,"suggestions":"995"},{"ruleId":"890","replacedBy":"996"},{"ruleId":"892","replacedBy":"997"},{"ruleId":"890","replacedBy":"998"},{"ruleId":"892","replacedBy":"999"},{"ruleId":"884","severity":1,"message":"963","line":51,"column":5,"nodeType":"886","endLine":51,"endColumn":7,"suggestions":"1000"},{"ruleId":"913","severity":1,"message":"970","line":6,"column":13,"nodeType":"915","messageId":"916","endLine":6,"endColumn":20},{"ruleId":"913","severity":1,"message":"975","line":10,"column":10,"nodeType":"915","messageId":"916","endLine":10,"endColumn":15},{"ruleId":"890","replacedBy":"1001"},{"ruleId":"892","replacedBy":"1002"},{"ruleId":"913","severity":1,"message":"978","line":1,"column":17,"nodeType":"915","messageId":"916","endLine":1,"endColumn":25},{"ruleId":"890","replacedBy":"1003"},{"ruleId":"892","replacedBy":"1004"},{"ruleId":"884","severity":1,"message":"902","line":31,"column":5,"nodeType":"886","endLine":31,"endColumn":40,"suggestions":"1005"},{"ruleId":"890","replacedBy":"1006"},{"ruleId":"892","replacedBy":"1007"},{"ruleId":"884","severity":1,"message":"902","line":17,"column":5,"nodeType":"886","endLine":17,"endColumn":40,"suggestions":"1008"},{"ruleId":"890","replacedBy":"1009"},{"ruleId":"892","replacedBy":"1010"},{"ruleId":"884","severity":1,"message":"935","line":27,"column":5,"nodeType":"886","endLine":27,"endColumn":39,"suggestions":"1011"},{"ruleId":"884","severity":1,"message":"937","line":27,"column":6,"nodeType":"938","endLine":27,"endColumn":38},{"ruleId":"913","severity":1,"message":"1012","line":2,"column":18,"nodeType":"915","messageId":"916","endLine":2,"endColumn":22},{"ruleId":"913","severity":1,"message":"969","line":18,"column":9,"nodeType":"915","messageId":"916","endLine":18,"endColumn":14},{"ruleId":"884","severity":1,"message":"940","line":28,"column":5,"nodeType":"886","endLine":28,"endColumn":23,"suggestions":"1013"},{"ruleId":"890","replacedBy":"1014"},{"ruleId":"892","replacedBy":"1015"},{"ruleId":"884","severity":1,"message":"902","line":15,"column":5,"nodeType":"886","endLine":15,"endColumn":18,"suggestions":"1016"},{"ruleId":"890","replacedBy":"1017"},{"ruleId":"892","replacedBy":"1018"},{"ruleId":"884","severity":1,"message":"939","line":15,"column":14,"nodeType":"895","endLine":15,"endColumn":18},{"ruleId":"884","severity":1,"message":"902","line":29,"column":5,"nodeType":"886","endLine":29,"endColumn":40,"suggestions":"1019"},{"ruleId":"913","severity":1,"message":"962","line":42,"column":5,"nodeType":"915","messageId":"916","endLine":42,"endColumn":26},{"ruleId":"890","replacedBy":"1020"},{"ruleId":"892","replacedBy":"1021"},{"ruleId":"884","severity":1,"message":"902","line":19,"column":5,"nodeType":"886","endLine":19,"endColumn":40,"suggestions":"1022"},{"ruleId":"884","severity":1,"message":"902","line":31,"column":5,"nodeType":"886","endLine":31,"endColumn":40,"suggestions":"1023"},{"ruleId":"884","severity":1,"message":"902","line":18,"column":5,"nodeType":"886","endLine":18,"endColumn":40,"suggestions":"1024"},{"ruleId":"913","severity":1,"message":"1025","line":4,"column":45,"nodeType":"915","messageId":"916","endLine":4,"endColumn":50},{"ruleId":"884","severity":1,"message":"940","line":53,"column":5,"nodeType":"886","endLine":53,"endColumn":37,"suggestions":"1026"},{"ruleId":"913","severity":1,"message":"914","line":25,"column":9,"nodeType":"915","messageId":"916","endLine":25,"endColumn":20},{"ruleId":"884","severity":1,"message":"888","line":57,"column":5,"nodeType":"886","endLine":57,"endColumn":53,"suggestions":"1027"},{"ruleId":"890","replacedBy":"1028"},{"ruleId":"892","replacedBy":"1029"},{"ruleId":"884","severity":1,"message":"909","line":51,"column":5,"nodeType":"886","endLine":51,"endColumn":47,"suggestions":"1030"},{"ruleId":"884","severity":1,"message":"909","line":60,"column":5,"nodeType":"886","endLine":60,"endColumn":14,"suggestions":"1031"},{"ruleId":"890","replacedBy":"1032"},{"ruleId":"892","replacedBy":"1033"},{"ruleId":"884","severity":1,"message":"909","line":41,"column":5,"nodeType":"886","endLine":41,"endColumn":55,"suggestions":"1034"},{"ruleId":"913","severity":1,"message":"946","line":23,"column":10,"nodeType":"915","messageId":"916","endLine":23,"endColumn":14},{"ruleId":"884","severity":1,"message":"947","line":49,"column":5,"nodeType":"886","endLine":49,"endColumn":55,"suggestions":"1035"},{"ruleId":"890","replacedBy":"1036"},{"ruleId":"892","replacedBy":"1037"},{"ruleId":"890","replacedBy":"1038"},{"ruleId":"892","replacedBy":"1039"},{"ruleId":"913","severity":1,"message":"969","line":21,"column":9,"nodeType":"915","messageId":"916","endLine":21,"endColumn":14},{"ruleId":"890","replacedBy":"1040"},{"ruleId":"892","replacedBy":"1041"},{"ruleId":"884","severity":1,"message":"894","line":16,"column":14,"nodeType":"895","endLine":16,"endColumn":15},{"ruleId":"890","replacedBy":"1042"},{"ruleId":"892","replacedBy":"1043"},{"ruleId":"884","severity":1,"message":"902","line":17,"column":5,"nodeType":"886","endLine":17,"endColumn":40,"suggestions":"1044"},{"ruleId":"884","severity":1,"message":"902","line":29,"column":5,"nodeType":"886","endLine":29,"endColumn":40,"suggestions":"1045"},{"ruleId":"890","replacedBy":"1046"},{"ruleId":"892","replacedBy":"1047"},{"ruleId":"913","severity":1,"message":"924","line":1,"column":27,"nodeType":"915","messageId":"916","endLine":1,"endColumn":36},{"ruleId":"913","severity":1,"message":"925","line":3,"column":8,"nodeType":"915","messageId":"916","endLine":3,"endColumn":13},{"ruleId":"890","replacedBy":"1048"},{"ruleId":"892","replacedBy":"1049"},{"ruleId":"913","severity":1,"message":"978","line":1,"column":17,"nodeType":"915","messageId":"916","endLine":1,"endColumn":25},{"ruleId":"884","severity":1,"message":"907","line":53,"column":5,"nodeType":"886","endLine":53,"endColumn":13,"suggestions":"1050"},{"ruleId":"884","severity":1,"message":"902","line":30,"column":5,"nodeType":"886","endLine":30,"endColumn":40,"suggestions":"1051"},{"ruleId":"884","severity":1,"message":"902","line":18,"column":5,"nodeType":"886","endLine":18,"endColumn":40,"suggestions":"1052"},{"ruleId":"884","severity":1,"message":"1053","line":31,"column":5,"nodeType":"886","endLine":31,"endColumn":23,"suggestions":"1054"},{"ruleId":"884","severity":1,"message":"902","line":18,"column":5,"nodeType":"886","endLine":18,"endColumn":40,"suggestions":"1055"},{"ruleId":"884","severity":1,"message":"902","line":29,"column":5,"nodeType":"886","endLine":29,"endColumn":40,"suggestions":"1056"},{"ruleId":"884","severity":1,"message":"902","line":19,"column":5,"nodeType":"886","endLine":19,"endColumn":40,"suggestions":"1057"},{"ruleId":"890","replacedBy":"1058"},{"ruleId":"892","replacedBy":"1059"},{"ruleId":"884","severity":1,"message":"902","line":19,"column":5,"nodeType":"886","endLine":19,"endColumn":40,"suggestions":"1060"},{"ruleId":"913","severity":1,"message":"942","line":2,"column":23,"nodeType":"915","messageId":"916","endLine":2,"endColumn":31},{"ruleId":"913","severity":1,"message":"943","line":46,"column":9,"nodeType":"915","messageId":"916","endLine":46,"endColumn":18},{"ruleId":"884","severity":1,"message":"1053","line":17,"column":5,"nodeType":"886","endLine":17,"endColumn":23,"suggestions":"1061"},{"ruleId":"884","severity":1,"message":"902","line":18,"column":5,"nodeType":"886","endLine":18,"endColumn":40,"suggestions":"1062"},{"ruleId":"890","replacedBy":"1063"},{"ruleId":"892","replacedBy":"1064"},{"ruleId":"884","severity":1,"message":"902","line":19,"column":5,"nodeType":"886","endLine":19,"endColumn":40,"suggestions":"1065"},{"ruleId":"884","severity":1,"message":"898","line":63,"column":5,"nodeType":"886","endLine":63,"endColumn":13,"suggestions":"1066"},{"ruleId":"884","severity":1,"message":"902","line":19,"column":5,"nodeType":"886","endLine":19,"endColumn":40,"suggestions":"1067"},{"ruleId":"913","severity":1,"message":"978","line":1,"column":17,"nodeType":"915","messageId":"916","endLine":1,"endColumn":25},{"ruleId":"884","severity":1,"message":"902","line":19,"column":5,"nodeType":"886","endLine":19,"endColumn":40,"suggestions":"1068"},{"ruleId":"884","severity":1,"message":"902","line":29,"column":5,"nodeType":"886","endLine":29,"endColumn":40,"suggestions":"1069"},{"ruleId":"884","severity":1,"message":"965","line":16,"column":5,"nodeType":"886","endLine":16,"endColumn":18,"suggestions":"1070"},{"ruleId":"913","severity":1,"message":"970","line":10,"column":13,"nodeType":"915","messageId":"916","endLine":10,"endColumn":20},{"ruleId":"913","severity":1,"message":"976","line":4,"column":10,"nodeType":"915","messageId":"916","endLine":4,"endColumn":13},{"ruleId":"884","severity":1,"message":"902","line":19,"column":5,"nodeType":"886","endLine":19,"endColumn":40,"suggestions":"1071"},{"ruleId":"884","severity":1,"message":"958","line":14,"column":5,"nodeType":"886","endLine":14,"endColumn":18,"suggestions":"1072"},{"ruleId":"913","severity":1,"message":"1073","line":6,"column":10,"nodeType":"915","messageId":"916","endLine":6,"endColumn":33},{"ruleId":"884","severity":1,"message":"902","line":21,"column":5,"nodeType":"886","endLine":21,"endColumn":40,"suggestions":"1074"},{"ruleId":"890","replacedBy":"1075"},{"ruleId":"892","replacedBy":"1076"},{"ruleId":"884","severity":1,"message":"902","line":31,"column":5,"nodeType":"886","endLine":31,"endColumn":40,"suggestions":"1077"},{"ruleId":"884","severity":1,"message":"902","line":18,"column":5,"nodeType":"886","endLine":18,"endColumn":40,"suggestions":"1078"},{"ruleId":"913","severity":1,"message":"1079","line":2,"column":22,"nodeType":"915","messageId":"916","endLine":2,"endColumn":26},{"ruleId":"884","severity":1,"message":"902","line":24,"column":5,"nodeType":"886","endLine":24,"endColumn":40,"suggestions":"1080"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosAsync', 'baseURL', 'camAddress', 'camera.length', and 'setLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["1081"],"React Hook useEffect has a missing dependency: 'axiosAsync'. Either include it or remove the dependency array.",["1082"],"no-native-reassign",["1083"],"no-negated-in-lhs",["1084"],"Assignments to the 'countCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal",["1083"],["1084"],"React Hook useEffect has a missing dependency: 'setVideoSource'. Either include it or remove the dependency array.",["1085"],["1083"],["1084"],"React Hook useEffect has a missing dependency: 'parseTotalData'. Either include it or remove the dependency array.",["1086"],["1087"],["1083"],["1084"],"React Hook useEffect has missing dependencies: 'dayEndTime', 'dayStartDate', 'monthEndTime', 'monthStartDate', 'overSpeedEndTime', 'overSpeedStartDate', 'searchEndTime', 'searchStartDate', 'setTempEndTime', 'setTempStartDate', 'weekEndTime', and 'weekStartDate'. Either include them or remove the dependency array.",["1088"],"React Hook useEffect has a missing dependency: 'getTrafficData'. Either include it or remove the dependency array.",["1089"],["1090"],["1091"],"no-unused-vars","'isEmptyData' is assigned a value but never used.","Identifier","unusedVar",["1092"],["1083"],["1084"],["1093"],["1094"],["1083"],["1084"],"'useEffect' is defined but never used.","'axios' is defined but never used.",["1083"],["1084"],"React Hook useEffect has missing dependencies: 'addArr' and 'baseURL'. Either include them or remove the dependency array.",["1095"],["1083"],["1084"],["1096"],["1083"],["1084"],"React Hook useEffect has a missing dependency: 'loginStatus'. Either include it or remove the dependency array.",["1097"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","Assignments to the 'FristRow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'axiosData'. Either include it or remove the dependency array.",["1098"],"'Checkbox' is defined but never used.","'clipboard' is assigned a value but never used.",["1099"],["1100"],"'Text' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTrafficTotalData'. Either include it or remove the dependency array.",["1101"],"Assignments to the 'countFirstCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'countSecondCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'countOverSpeedCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","array-callback-return","Array.prototype.some() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.some() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'parseTraffic'. Either include it or remove the dependency array.",["1102"],["1103"],["1104"],"'totalVehicleSpdVolume' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOptions'. Either include it or remove the dependency array.",["1105"],"React Hook useEffect has a missing dependency: 'parseData'. Either include it or remove the dependency array.",["1106"],"'moment' is defined but never used.",["1107"],"'count' is assigned a value but never used.","'actions' is defined but never used.",["1108"],["1109"],["1110"],["1111"],"'Title' is assigned a value but never used.","'act' is defined but never used.",["1112"],"'useState' is defined but never used.",["1113"],["1083"],["1084"],"'cameraAddress' is assigned a value but never used.","'setCameraAddress' is assigned a value but never used.",["1114"],["1115"],["1083"],["1084"],["1083"],["1084"],["1116"],["1083"],["1084"],"'baseURL' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'spinTimer'. Either include it or remove the dependency array.",["1117"],["1083"],["1084"],["1083"],["1084"],["1118"],["1083"],["1084"],["1083"],["1084"],["1119"],["1083"],["1084"],["1120"],["1083"],["1084"],["1121"],"'Spin' is defined but never used.",["1122"],["1083"],["1084"],["1123"],["1083"],["1084"],["1124"],["1083"],["1084"],["1125"],["1126"],["1127"],"'Alert' is defined but never used.",["1128"],["1129"],["1083"],["1084"],["1130"],["1131"],["1083"],["1084"],["1132"],["1133"],["1083"],["1084"],["1083"],["1084"],["1083"],["1084"],["1083"],["1084"],["1134"],["1135"],["1083"],["1084"],["1083"],["1084"],["1136"],["1137"],["1138"],"React Hook useEffect has missing dependencies: 'currentLaneNum' and 'parseData'. Either include them or remove the dependency array.",["1139"],["1140"],["1141"],["1142"],["1083"],["1084"],["1143"],["1144"],["1145"],["1083"],["1084"],["1146"],["1147"],["1148"],["1149"],["1150"],["1151"],["1152"],["1153"],"'unstable_batchedUpdates' is defined but never used.",["1154"],["1083"],["1084"],["1155"],["1156"],"'Link' is defined but never used.",["1157"],{"desc":"1158","fix":"1159"},{"desc":"1160","fix":"1161"},"no-global-assign","no-unsafe-negation",{"desc":"1162","fix":"1163"},{"desc":"1164","fix":"1165"},{"desc":"1164","fix":"1166"},{"desc":"1167","fix":"1168"},{"desc":"1169","fix":"1170"},{"desc":"1171","fix":"1172"},{"desc":"1173","fix":"1174"},{"desc":"1175","fix":"1176"},{"desc":"1164","fix":"1177"},{"desc":"1164","fix":"1178"},{"desc":"1179","fix":"1180"},{"desc":"1164","fix":"1181"},{"desc":"1182","fix":"1183"},{"desc":"1184","fix":"1185"},{"desc":"1186","fix":"1187"},{"desc":"1164","fix":"1188"},{"desc":"1189","fix":"1190"},{"desc":"1191","fix":"1192"},{"desc":"1164","fix":"1193"},{"desc":"1164","fix":"1194"},{"desc":"1195","fix":"1196"},{"desc":"1197","fix":"1198"},{"desc":"1164","fix":"1199"},{"desc":"1164","fix":"1200"},{"desc":"1164","fix":"1201"},{"desc":"1164","fix":"1202"},{"desc":"1164","fix":"1203"},{"desc":"1164","fix":"1204"},{"desc":"1164","fix":"1205"},{"desc":"1206","fix":"1207"},{"desc":"1160","fix":"1208"},{"desc":"1164","fix":"1209"},{"desc":"1210","fix":"1211"},{"desc":"1195","fix":"1212"},{"desc":"1164","fix":"1213"},{"desc":"1164","fix":"1214"},{"desc":"1182","fix":"1215"},{"desc":"1186","fix":"1216"},{"desc":"1217","fix":"1218"},{"desc":"1164","fix":"1219"},{"desc":"1164","fix":"1220"},{"desc":"1164","fix":"1221"},{"desc":"1164","fix":"1222"},{"desc":"1184","fix":"1223"},{"desc":"1175","fix":"1224"},{"desc":"1169","fix":"1225"},{"desc":"1171","fix":"1226"},{"desc":"1173","fix":"1227"},{"desc":"1189","fix":"1228"},{"desc":"1164","fix":"1229"},{"desc":"1164","fix":"1230"},{"desc":"1167","fix":"1231"},{"desc":"1164","fix":"1232"},{"desc":"1164","fix":"1233"},{"desc":"1234","fix":"1235"},{"desc":"1164","fix":"1236"},{"desc":"1164","fix":"1237"},{"desc":"1164","fix":"1238"},{"desc":"1164","fix":"1239"},{"desc":"1234","fix":"1240"},{"desc":"1164","fix":"1241"},{"desc":"1164","fix":"1242"},{"desc":"1162","fix":"1243"},{"desc":"1164","fix":"1244"},{"desc":"1164","fix":"1245"},{"desc":"1164","fix":"1246"},{"desc":"1197","fix":"1247"},{"desc":"1164","fix":"1248"},{"desc":"1191","fix":"1249"},{"desc":"1164","fix":"1250"},{"desc":"1164","fix":"1251"},{"desc":"1164","fix":"1252"},{"desc":"1164","fix":"1253"},"Update the dependencies array to be: [axiosAsync, baseURL, camAddress, camCode, camera.length, currTimeStr, setLoggedIn]",{"range":"1254","text":"1255"},"Update the dependencies array to be: [axiosAsync, refresh]",{"range":"1256","text":"1257"},"Update the dependencies array to be: [setVideoSource, source]",{"range":"1258","text":"1259"},"Update the dependencies array to be: [trafficTotalData, activeVisualKey, parseTotalData]",{"range":"1260","text":"1261"},{"range":"1262","text":"1261"},"Update the dependencies array to be: [dayEndTime, dayStartDate, monthEndTime, monthStartDate, overSpeedEndTime, overSpeedStartDate, period, searchEndTime, searchStartDate, setTempEndTime, setTempStartDate, weekEndTime, weekStartDate]",{"range":"1263","text":"1264"},"Update the dependencies array to be: [camCode, startDate, endTime, currentTime, getTrafficData]",{"range":"1265","text":"1266"},"Update the dependencies array to be: [getTrafficData, refresh]",{"range":"1267","text":"1268"},"Update the dependencies array to be: [realtimeCamCode, startDate, endTime, currentTime, getTrafficData]",{"range":"1269","text":"1270"},"Update the dependencies array to be: [cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",{"range":"1271","text":"1272"},{"range":"1273","text":"1261"},{"range":"1274","text":"1261"},"Update the dependencies array to be: [addArr, baseURL]",{"range":"1275","text":"1276"},{"range":"1277","text":"1261"},"Update the dependencies array to be: [loginStatus]",{"range":"1278","text":"1279"},"Update the dependencies array to be: [startDate, endTime, cameraCode, axiosData]",{"range":"1280","text":"1281"},"Update the dependencies array to be: [axiosData, trafficTotalData]",{"range":"1282","text":"1283"},{"range":"1284","text":"1261"},"Update the dependencies array to be: [cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",{"range":"1285","text":"1286"},"Update the dependencies array to be: [parseTraffic, trafficData]",{"range":"1287","text":"1288"},{"range":"1289","text":"1261"},{"range":"1290","text":"1261"},"Update the dependencies array to be: [getOptions]",{"range":"1291","text":"1292"},"Update the dependencies array to be: [parseData, trafficData]",{"range":"1293","text":"1294"},{"range":"1295","text":"1261"},{"range":"1296","text":"1261"},{"range":"1297","text":"1261"},{"range":"1298","text":"1261"},{"range":"1299","text":"1261"},{"range":"1300","text":"1261"},{"range":"1301","text":"1261"},"Update the dependencies array to be: [axiosAsync, cameraCode, currTimeStr]",{"range":"1302","text":"1303"},{"range":"1304","text":"1257"},{"range":"1305","text":"1261"},"Update the dependencies array to be: [isLoadingNameAdd, spinTimer]",{"range":"1306","text":"1307"},{"range":"1308","text":"1292"},{"range":"1309","text":"1261"},{"range":"1310","text":"1261"},{"range":"1311","text":"1279"},{"range":"1312","text":"1283"},"Update the dependencies array to be: [parseTotalData, trafficData]",{"range":"1313","text":"1314"},{"range":"1315","text":"1261"},{"range":"1316","text":"1261"},{"range":"1317","text":"1261"},{"range":"1318","text":"1261"},{"range":"1319","text":"1281"},{"range":"1320","text":"1272"},{"range":"1321","text":"1266"},{"range":"1322","text":"1268"},{"range":"1323","text":"1270"},{"range":"1324","text":"1286"},{"range":"1325","text":"1261"},{"range":"1326","text":"1261"},{"range":"1327","text":"1264"},{"range":"1328","text":"1261"},{"range":"1329","text":"1261"},"Update the dependencies array to be: [currentLaneNum, parseData, trafficTotalData]",{"range":"1330","text":"1331"},{"range":"1332","text":"1261"},{"range":"1333","text":"1261"},{"range":"1334","text":"1261"},{"range":"1335","text":"1261"},{"range":"1336","text":"1331"},{"range":"1337","text":"1261"},{"range":"1338","text":"1261"},{"range":"1339","text":"1259"},{"range":"1340","text":"1261"},{"range":"1341","text":"1261"},{"range":"1342","text":"1261"},{"range":"1343","text":"1294"},{"range":"1344","text":"1261"},{"range":"1345","text":"1288"},{"range":"1346","text":"1261"},{"range":"1347","text":"1261"},{"range":"1348","text":"1261"},{"range":"1349","text":"1261"},[2420,2442],"[axiosAsync, baseURL, camAddress, camCode, camera.length, currTimeStr, setLoggedIn]",[2567,2576],"[axiosAsync, refresh]",[1583,1591],"[setVideoSource, source]",[439,474],"[trafficTotalData, activeVisualKey, parseTotalData]",[611,646],[1489,1497],"[dayEndTime, dayStartDate, monthEndTime, monthStartDate, overSpeedEndTime, overSpeedStartDate, period, searchEndTime, searchStartDate, setTempEndTime, setTempStartDate, weekEndTime, weekStartDate]",[1411,1453],"[camCode, startDate, endTime, currentTime, getTrafficData]",[1606,1615],"[getTrafficData, refresh]",[1082,1132],"[realtimeCamCode, startDate, endTime, currentTime, getTrafficData]",[1700,1748],"[cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",[469,504],[467,502],[1285,1287],"[addArr, baseURL]",[596,631],[1324,1358],"[loginStatus]",[1107,1139],"[startDate, endTime, cameraCode, axiosData]",[575,593],"[axiosData, trafficTotalData]",[464,499],[1408,1458],"[cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",[386,399],"[parseTraffic, trafficData]",[439,474],[612,647],[955,957],"[getOptions]",[390,403],"[parseData, trafficData]",[469,504],[654,689],[606,641],[439,474],[432,467],[515,550],[462,497],[2319,2344],"[axiosAsync, cameraCode, currTimeStr]",[2469,2478],[606,641],[1726,1744],"[isLoadingNameAdd, spinTimer]",[1293,1295],[673,708],[488,523],[1350,1384],[575,593],[385,398],"[parseTotalData, trafficData]",[612,647],[464,499],[640,675],[439,474],[1219,1251],[1828,1876],[1555,1597],[1750,1759],[1190,1240],[1538,1588],[439,474],[615,650],[1489,1497],[654,689],[432,467],[617,635],"[currentLaneNum, parseData, trafficTotalData]",[439,474],[606,641],[462,497],[469,504],[417,435],[464,499],[470,505],[1583,1591],[467,502],[469,504],[611,646],[390,403],[515,550],[386,399],[549,584],[645,680],[462,497],[596,631]]