[{"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js":"1","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js":"2","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js":"3","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js":"4","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleCnt.js":"5","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js":"6","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js":"7","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js":"8","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js":"9","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js":"10","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js":"11","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\userInfo.js":"12","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js":"13","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js":"14","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js":"15","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js":"16","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js":"17","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js":"18","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StreamingContainer.js":"19","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js":"20","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\LaneTableCard.js":"21","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTVehicleRatio.js":"22","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js":"23","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js":"24","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js":"25","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js":"26","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js":"27","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js":"28","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js":"29","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js":"30","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js":"31","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTPCU.js":"32","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js":"33","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js":"34","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js":"35","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js":"36","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js":"37","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js":"38","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js":"39","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js":"40","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js":"41","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js":"42","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js":"43","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js":"44","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTOverSpeed.js":"45","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js":"46","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\search\\OverspeedPage.js":"47","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js":"48","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\TimeTableCard.js":"49","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js":"50","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\date.js":"51","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js":"52","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTFirstTable.js":"53","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js":"54","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\reportWebVitals.js":"55","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTConcentrationRatio.js":"56","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js":"57","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleRatio.js":"58","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js":"59","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js":"60","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js":"61","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js":"62","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js":"63","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js":"64","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js":"65","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\index.js":"66","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js":"67","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js":"68","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js":"69","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js":"70","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js":"71","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTPCU.js":"72","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\liquidChart\\PeakRatio.js":"73","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\videoContainer\\StreamingContainer.js":"74","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js":"75","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js":"76","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\locationCode.js":"77","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\cascader\\Cascader.js":"78","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\loginCard\\LoginCard.js":"79","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\timeFilter\\TimeFilter.js":"80","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\dashLineChart\\WeekPedestrians.js":"81","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\bidirectionalBar\\DayNight.js":"82","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\App.js":"83","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\search\\SearchPage.js":"84","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js":"85","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js":"86","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\GenAvgSpeed.js":"87","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js":"88","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTOverSpeed.js":"89","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\DTCnt.js":"90","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\videoContainer\\StatContainer.js":"91","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\index.js":"92","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\actions\\index.js":"93","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\WTPHF.js":"94","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LaneVehicleCnt.js":"95","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\sider\\index.js":"96","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js":"97","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js":"98","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\baseURL.js":"99","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js":"100","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js":"101","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js":"102","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js":"103","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\search\\OverspeedPage.js":"104","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js":"105","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js":"106","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LaneVehicleRatio.js":"107","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\WTVehicleRatio.js":"108","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\statisticText\\PeakHourFlowRate.js":"109","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js":"110","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\searchData\\SearchData.js":"111","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js":"112","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js":"113","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\dataVisualization\\TimeDataVisualization.js":"114","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\datePicker\\DatePicker.js":"115","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js":"116","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\tableDescription\\TableDescription.js":"117","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\WTConcentrationRatio.js":"118","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LanePCU.js":"119","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js":"120","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js":"121","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTCnt.js":"122","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\location.js":"123","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTCnt.js":"124","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\statisticText\\PHF.js":"125","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js":"126","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTOverSpeed.js":"127","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\accountForm\\PasswordFrom.js":"128","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\accountForm\\SignupForm.js":"129","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTSecondTable.js":"130","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTPCU.js":"131","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\statisticText\\Peak15.js":"132","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js":"133","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\userInfo.js":"134","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MonthPeakTime.js":"135"},{"size":5117,"mtime":1618967791920,"results":"136","hashOfConfig":"137"},{"size":6288,"mtime":1618469228470,"results":"138","hashOfConfig":"137"},{"size":3505,"mtime":1617942423872,"results":"139","hashOfConfig":"137"},{"size":1846,"mtime":1619140625638,"results":"140","hashOfConfig":"137"},{"size":2586,"mtime":1617952242868,"results":"141","hashOfConfig":"137"},{"size":2609,"mtime":1617955556798,"results":"142","hashOfConfig":"137"},{"size":4073,"mtime":1619510189028,"results":"143","hashOfConfig":"137"},{"size":4459,"mtime":1619744443356,"results":"144","hashOfConfig":"137"},{"size":3935,"mtime":1618889043596,"results":"145","hashOfConfig":"137"},{"size":2797,"mtime":1619397588528,"results":"146","hashOfConfig":"137"},{"size":4183,"mtime":1619506827581,"results":"147","hashOfConfig":"137"},{"size":459,"mtime":1617066391537,"results":"148","hashOfConfig":"137"},{"size":2458,"mtime":1617952444674,"results":"149","hashOfConfig":"137"},{"size":2504,"mtime":1617952388594,"results":"150","hashOfConfig":"137"},{"size":3271,"mtime":1619397574507,"results":"151","hashOfConfig":"137"},{"size":2804,"mtime":1619397589891,"results":"152","hashOfConfig":"137"},{"size":588,"mtime":1618474102823,"results":"153","hashOfConfig":"137"},{"size":2875,"mtime":1618880987561,"results":"154","hashOfConfig":"137"},{"size":1537,"mtime":1618820831700,"results":"155","hashOfConfig":"137"},{"size":1240,"mtime":1617695212432,"results":"156","hashOfConfig":"137"},{"size":936,"mtime":1616394535146,"results":"157","hashOfConfig":"137"},{"size":2490,"mtime":1617952452122,"results":"158","hashOfConfig":"137"},{"size":745,"mtime":1617842272800,"results":"159","hashOfConfig":"137"},{"size":997,"mtime":1615964214432,"results":"160","hashOfConfig":"137"},{"size":4462,"mtime":1619403911634,"results":"161","hashOfConfig":"137"},{"size":3626,"mtime":1619403902324,"results":"162","hashOfConfig":"137"},{"size":1622,"mtime":1616400207822,"results":"163","hashOfConfig":"137"},{"size":5698,"mtime":1617942455513,"results":"164","hashOfConfig":"137"},{"size":8065,"mtime":1619417065166,"results":"165","hashOfConfig":"137"},{"size":7419,"mtime":1618453985516,"results":"166","hashOfConfig":"137"},{"size":9759,"mtime":1617942470631,"results":"167","hashOfConfig":"137"},{"size":2525,"mtime":1617952447991,"results":"168","hashOfConfig":"137"},{"size":415,"mtime":1618821981384,"results":"169","hashOfConfig":"137"},{"size":3326,"mtime":1619144283452,"results":"170","hashOfConfig":"137"},{"size":21535,"mtime":1619081167238,"results":"171","hashOfConfig":"137"},{"size":2329,"mtime":1618209865516,"results":"172","hashOfConfig":"137"},{"size":2491,"mtime":1618464202222,"results":"173","hashOfConfig":"137"},{"size":2319,"mtime":1617952421240,"results":"174","hashOfConfig":"137"},{"size":2610,"mtime":1617955639588,"results":"175","hashOfConfig":"137"},{"size":7919,"mtime":1617696349831,"results":"176","hashOfConfig":"137"},{"size":2450,"mtime":1618900404845,"results":"177","hashOfConfig":"137"},{"size":1729,"mtime":1618281941189,"results":"178","hashOfConfig":"137"},{"size":1874,"mtime":1618301947326,"results":"179","hashOfConfig":"137"},{"size":6483,"mtime":1616475606541,"results":"180","hashOfConfig":"137"},{"size":2458,"mtime":1617952402469,"results":"181","hashOfConfig":"137"},{"size":1324,"mtime":1618205775634,"results":"182","hashOfConfig":"137"},{"size":2067,"mtime":1619424097274,"results":"183","hashOfConfig":"137"},{"size":7000,"mtime":1619511025016,"results":"184","hashOfConfig":"137"},{"size":3508,"mtime":1619510549554,"results":"185","hashOfConfig":"137"},{"size":918,"mtime":1619417688911,"results":"186","hashOfConfig":"137"},{"size":1141,"mtime":1619417784648,"results":"187","hashOfConfig":"137"},{"size":5695,"mtime":1619503579688,"results":"188","hashOfConfig":"137"},{"size":9798,"mtime":1619503570043,"results":"189","hashOfConfig":"137"},{"size":2349,"mtime":1619511583793,"results":"190","hashOfConfig":"137"},{"size":362,"mtime":1608013233748,"results":"191","hashOfConfig":"137"},{"size":1970,"mtime":1617952254615,"results":"192","hashOfConfig":"137"},{"size":2651,"mtime":1617955635022,"results":"193","hashOfConfig":"137"},{"size":2800,"mtime":1617952245379,"results":"194","hashOfConfig":"137"},{"size":2436,"mtime":1617952240226,"results":"195","hashOfConfig":"137"},{"size":2693,"mtime":1617676080949,"results":"196","hashOfConfig":"137"},{"size":2683,"mtime":1617952237288,"results":"197","hashOfConfig":"137"},{"size":410,"mtime":1613529006303,"results":"198","hashOfConfig":"137"},{"size":652,"mtime":1616735276373,"results":"199","hashOfConfig":"137"},{"size":654,"mtime":1615877296950,"results":"200","hashOfConfig":"137"},{"size":2521,"mtime":1617952408073,"results":"201","hashOfConfig":"137"},{"size":789,"mtime":1620029818448,"results":"202","hashOfConfig":"203"},{"size":4756,"mtime":1620197798040,"results":"204","hashOfConfig":"203"},{"size":21892,"mtime":1620191019844,"results":"205","hashOfConfig":"203"},{"size":3505,"mtime":1620029818406,"results":"206","hashOfConfig":"203"},{"size":6483,"mtime":1620029818407,"results":"207","hashOfConfig":"203"},{"size":5695,"mtime":1620029818403,"results":"208","hashOfConfig":"203"},{"size":2651,"mtime":1620029818397,"results":"209","hashOfConfig":"203"},{"size":745,"mtime":1620029818398,"results":"210","hashOfConfig":"203"},{"size":722,"mtime":1620107718240,"results":"211","hashOfConfig":"203"},{"size":3436,"mtime":1620276436044,"results":"212","hashOfConfig":"203"},{"size":2251,"mtime":1620202090615,"results":"213","hashOfConfig":"203"},{"size":811,"mtime":1620116176583,"results":"214","hashOfConfig":"203"},{"size":8949,"mtime":1620200793663,"results":"215","hashOfConfig":"203"},{"size":2693,"mtime":1620029818428,"results":"216","hashOfConfig":"203"},{"size":654,"mtime":1620029818420,"results":"217","hashOfConfig":"203"},{"size":2840,"mtime":1620029818388,"results":"218","hashOfConfig":"203"},{"size":2458,"mtime":1620029818387,"results":"219","hashOfConfig":"203"},{"size":4554,"mtime":1620197444827,"results":"220","hashOfConfig":"203"},{"size":1786,"mtime":1620190017006,"results":"221","hashOfConfig":"203"},{"size":1927,"mtime":1620200762042,"results":"222","hashOfConfig":"203"},{"size":9759,"mtime":1620029818409,"results":"223","hashOfConfig":"203"},{"size":2399,"mtime":1620029818382,"results":"224","hashOfConfig":"203"},{"size":5698,"mtime":1620029818409,"results":"225","hashOfConfig":"203"},{"size":2610,"mtime":1620029818396,"results":"226","hashOfConfig":"203"},{"size":2428,"mtime":1620029818391,"results":"227","hashOfConfig":"203"},{"size":410,"mtime":1620029818435,"results":"228","hashOfConfig":"203"},{"size":318,"mtime":1620029818450,"results":"229","hashOfConfig":"203"},{"size":918,"mtime":1620029818449,"results":"230","hashOfConfig":"203"},{"size":1901,"mtime":1620029818386,"results":"231","hashOfConfig":"203"},{"size":2586,"mtime":1620029818383,"results":"232","hashOfConfig":"203"},{"size":4094,"mtime":1620201819060,"results":"233","hashOfConfig":"203"},{"size":8161,"mtime":1620190472681,"results":"234","hashOfConfig":"203"},{"size":4422,"mtime":1620178102622,"results":"235","hashOfConfig":"203"},{"size":463,"mtime":1620289705980,"results":"236","hashOfConfig":"203"},{"size":4646,"mtime":1620177590215,"results":"237","hashOfConfig":"203"},{"size":3958,"mtime":1620177640270,"results":"238","hashOfConfig":"203"},{"size":3578,"mtime":1620176929839,"results":"239","hashOfConfig":"203"},{"size":997,"mtime":1620029818416,"results":"240","hashOfConfig":"203"},{"size":2101,"mtime":1620190002990,"results":"241","hashOfConfig":"203"},{"size":410,"mtime":1620029818378,"results":"242","hashOfConfig":"203"},{"size":9886,"mtime":1620029818405,"results":"243","hashOfConfig":"203"},{"size":2800,"mtime":1620029818384,"results":"244","hashOfConfig":"203"},{"size":2933,"mtime":1620029818386,"results":"245","hashOfConfig":"203"},{"size":493,"mtime":1620029818401,"results":"246","hashOfConfig":"203"},{"size":3307,"mtime":1620180529315,"results":"247","hashOfConfig":"203"},{"size":7404,"mtime":1620202916191,"results":"248","hashOfConfig":"203"},{"size":2838,"mtime":1620190023645,"results":"249","hashOfConfig":"203"},{"size":2831,"mtime":1620190027992,"results":"250","hashOfConfig":"203"},{"size":6902,"mtime":1620029818414,"results":"251","hashOfConfig":"203"},{"size":4073,"mtime":1620029818380,"results":"252","hashOfConfig":"203"},{"size":588,"mtime":1620029818415,"results":"253","hashOfConfig":"203"},{"size":2397,"mtime":1620197821258,"results":"254","hashOfConfig":"203"},{"size":1970,"mtime":1620029818385,"results":"255","hashOfConfig":"203"},{"size":2436,"mtime":1620029818383,"results":"256","hashOfConfig":"203"},{"size":3414,"mtime":1620029818410,"results":"257","hashOfConfig":"203"},{"size":2319,"mtime":1620029818392,"results":"258","hashOfConfig":"203"},{"size":2608,"mtime":1620029818396,"results":"259","hashOfConfig":"203"},{"size":446,"mtime":1620029818451,"results":"260","hashOfConfig":"203"},{"size":2393,"mtime":1620029818393,"results":"261","hashOfConfig":"203"},{"size":453,"mtime":1620029818400,"results":"262","hashOfConfig":"203"},{"size":1874,"mtime":1620029818408,"results":"263","hashOfConfig":"203"},{"size":2458,"mtime":1620029818394,"results":"264","hashOfConfig":"203"},{"size":6288,"mtime":1620029818423,"results":"265","hashOfConfig":"203"},{"size":7419,"mtime":1620029818423,"results":"266","hashOfConfig":"203"},{"size":3414,"mtime":1620029818404,"results":"267","hashOfConfig":"203"},{"size":2525,"mtime":1620029818394,"results":"268","hashOfConfig":"203"},{"size":486,"mtime":1620029818400,"results":"269","hashOfConfig":"203"},{"size":1324,"mtime":1620029818407,"results":"270","hashOfConfig":"203"},{"size":459,"mtime":1620029818452,"results":"271","hashOfConfig":"203"},{"size":2292,"mtime":1620029818395,"results":"272","hashOfConfig":"203"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12xqqm0",{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"291"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"310"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"317"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"310"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"291"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"285"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"285"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"281"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"281"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"291"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"414","messages":"415","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"426"},"1b4szrg",{"filePath":"427","messages":"428","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"435"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"439"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"455"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"459"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"459"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"466"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"466"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"472","messages":"473","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"475"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"482"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"486"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"426"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"475"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"494"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"494"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"475"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"455"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"455"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"532","messages":"533","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"534","messages":"535","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"494"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"478"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"466"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"475"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"565","messages":"566","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"478"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"455"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"529"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"435"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"583","messages":"584","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"585","messages":"586","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js",["595","596"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\PasswordFrom.js",[],["597","598"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js",["599"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst MTSecondTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tvar TotalData = [];\r\n\r\n\tvar countCol;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentLaneNum === 0) {\r\n\t\t\tcountCol = 0;\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseData();\r\n\t\t}\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"주야율\",\r\n\t\t\t\t\tdataIndex: \"totalDayNightRatio\",\r\n\t\t\t\t\tkey: \"totalNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PHF\",\r\n\t\t\t\t\tdataIndex: \"totalPHF\",\r\n\t\t\t\t\tkey: \"totalPHF\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"첨두유율\",\r\n\t\t\t\t\tdataIndex: \"totalPeekHourCnt\",\r\n\t\t\t\t\tkey: \"totalPeekHourCnt\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"집중률\",\r\n\t\t\t\t\tdataIndex: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t\tkey: \"totalVehiclePeakHourConcentrationRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"차종별 주야율\",\r\n\t\t\tdataIndex: \"TypeDayNightRatio\",\r\n\t\t\tkey: \"TypeNightRatio\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\t\tdataIndex: \"carDayNightRatio\",\r\n\t\t\t\t\tkey: \"carNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"버스\",\r\n\t\t\t\t\tdataIndex: \"busDayNightRatio\",\r\n\t\t\t\t\tkey: \"busNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\t\tdataIndex: \"truckDayNightRatio\",\r\n\t\t\t\t\tkey: \"truckNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\t\tdataIndex: \"motorDayNightRatio\",\r\n\t\t\t\t\tkey: \"motorNightRatio\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\tconst parseData = () => {\r\n\t\tconsole.log(\"count table axios\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehicleDayNightRatio,\r\n\t\t\t\ttotalVehiclePeakHourFactor,\r\n\t\t\t\ttotalVehiclePeakHourConcentrationRatio,\r\n\t\t\t\ttotalVehiclePeakHourFlowRate,\r\n\t\t\t\tcarDayNightRatio,\r\n\t\t\t\tmBusDayNightRatio,\r\n\t\t\t\tmTruckDayNightRatio,\r\n\t\t\t\tmotorDayNightRatio,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (countCol < 3) {\r\n\t\t\t\tif (countCol === 0) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"월간전체\";\r\n\t\t\t\t} else if (countCol === 1) {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"평일전체\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataTemp[\"time\"] = \"주말전체\";\r\n\t\t\t\t}\r\n\t\t\t\tcountCol += 1;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"time\"] = moment(recordDate).format(\"YYYY년 MM월 DD일\");\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalDayNightRatio\"] = totalVehicleDayNightRatio;\r\n\t\t\tdataTemp[\"totalPHF\"] = totalVehiclePeakHourFactor;\r\n\t\t\tdataTemp[\"totalPeekHourCnt\"] = totalVehiclePeakHourFlowRate;\r\n\t\t\tdataTemp[\r\n\t\t\t\t\"totalVehiclePeakHourConcentrationRatio\"\r\n\t\t\t] = totalVehiclePeakHourConcentrationRatio;\r\n\r\n\t\t\tdataTemp[\"carDayNightRatio\"] = carDayNightRatio;\r\n\t\t\tdataTemp[\"busDayNightRatio\"] = mBusDayNightRatio;\r\n\t\t\tdataTemp[\"truckDayNightRatio\"] = mTruckDayNightRatio;\r\n\t\t\tdataTemp[\"motorDayNightRatio\"] = motorDayNightRatio;\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default MTSecondTable;\r\n",["600","601"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\video\\Video.js",["602"],"/* eslint-disable jsx-a11y/media-has-caption */\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport Hls from \"hls.js\";\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst Video = (props) => {\r\n\tconst { source, showControls = false, setVideoSource } = props;\r\n\tconst videoRef = useRef();\r\n\tconst handleClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\te.target.requestFullscreen();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!videoRef) return;\r\n\r\n\t\tconst hls = new Hls({\r\n\t\t\txhrSetup: (xhr, url) => {\r\n\t\t\t\txhr.setRequestHeader(\r\n\t\t\t\t\t\"authorization\",\r\n\t\t\t\t\t`Bearer ${localStorage.getItem(\"token\")}`\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (videoRef.current.canPlayType(\"application/vnd.apple.mpegurl\")) {\r\n\t\t\tvideoRef.current.src = source;\r\n\t\t\tvideoRef.addEventListener(\"loadedmetadata\", () => {\r\n\t\t\t\tvideoRef.current.play();\r\n\t\t\t});\r\n\t\t} else if (Hls.isSupported()) {\r\n\t\t\thls.attachMedia(videoRef.current);\r\n\t\t\thls.on(Hls.Events.MEDIA_ATTACHED, () => {\r\n\t\t\t\thls.loadSource(source);\r\n\t\t\t\thls.on(Hls.Events.MANIFEST_PARSED, () => {\r\n\t\t\t\t\tsetVideoSource(true);\r\n\t\t\t\t\tvideoRef.current.play();\r\n\t\t\t\t});\r\n\t\t\t\thls.on(Hls.Events.ERROR, (_, data) => {\r\n\t\t\t\t\tif (data.response) {\r\n\t\t\t\t\t\tif (data.response.code === 404) {\r\n\t\t\t\t\t\t\tif (setVideoSource) {\r\n\t\t\t\t\t\t\t\tsetVideoSource(false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (data.response.code === 401) {\r\n\t\t\t\t\t\t\t// jwt가 invalid 할 때\r\n\t\t\t\t\t\t\tif (setVideoSource) {\r\n\t\t\t\t\t\t\t\tsetVideoSource(false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\talert(\"실시간 영상이 지원되지 않는 브라우저입니다\");\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\thls.destroy();\r\n\t\t};\r\n\t}, [source]);\r\n\r\n\treturn (\r\n\t\t<video\r\n\t\t\tref={videoRef}\r\n\t\t\tsrc={source}\r\n\t\t\tonClick={handleClick}\r\n\t\t\tmuted\r\n\t\t\tautoPlay\r\n\t\t\tcontrols={isMobile || showControls}\r\n\t\t\tpreload=\"auto\"\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Video;\r\n",["603","604"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleCnt.js",["605"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTAvgSpeed.js",["606"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTAvgSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 평균속도 그래프 parse\");\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleAvgSpeed;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tseriesField: \"key\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTAvgSpeed;\r\n",["607","608"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\datePicker\\DatePicker.js",["609"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js",["610","611"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js",["612"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js",["613","614"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\userInfo.js",[],["615","616"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTOverSpeed.js",["617"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTAvgSpeed.js",["618"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst DTAvgSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 평균속도 parse\");\r\n\t\tvar avgSpeedTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordTime,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst Time = moment(recordTime).format(\"HH:mm\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleAvgSpeed;\r\n\t\t\ttempTotal[\"category\"] = \"천제\";\r\n\r\n\t\t\tavgSpeedTotalData.push(tempCar);\r\n\t\t\tavgSpeedTotalData.push(tempBus);\r\n\t\t\tavgSpeedTotalData.push(tempTruck);\r\n\t\t\tavgSpeedTotalData.push(tempMotor);\r\n\t\t\tavgSpeedTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(avgSpeedTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default DTAvgSpeed;\r\n",["619","620"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js",["621","622"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js",[],["623","624"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js",["625"],"import React, { useEffect, useState } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport VideoContainer from \"../../organisms/videoContainer/StreamingContainer\";\r\nimport SearchInput from \"../../atoms/cascaderBtn/CascaderBtn\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst RealtimeStreamingPage = (props) => {\r\n\tconst { Content } = Layout;\r\n\tconst { setLoggedIn, isMaster, baseURL } = props;\r\n\tconst [address, setAddress] = useState([]);\r\n\tconst date = moment(new Date()).format(\"YYYY-MM-DD\");\r\n\tconst currentTime = moment(new Date()).format(\"HH:mm:ss\");\r\n\tvar addArr = [];\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}/locations/ICN/28110/2008001/001/cameras`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tres.data.forEach((address) => {\r\n\t\t\t\t\t\taddArr.push(address.httpStreamAddr);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tsetAddress(addArr);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"realtime-streaming-page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider setLoggedIn={setLoggedIn} />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"실시간 영상\"]} />\r\n\t\t\t\t\t\t<div className=\"search-input\">\r\n\t\t\t\t\t\t\t<SearchInput />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"video-container-4\">\r\n\t\t\t\t\t\t\t{address[0] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-1 [하행]\"\r\n\t\t\t\t\t\t\t\t\t// httpAddress=\"https://globalbridge.synology.me:4000/m3u8VideoStream.m3u8\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[0]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{address[1] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-2 [하행]\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[1]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{address[2] && (\r\n\t\t\t\t\t\t\t\t<VideoContainer\r\n\t\t\t\t\t\t\t\t\tcamName=\"수인사거리-3 [하행]\"\r\n\t\t\t\t\t\t\t\t\thttpAddress={address[2]}\r\n\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\tcurrentTime={currentTime}\r\n\t\t\t\t\t\t\t\t\trealtimeCamCode=\"0001\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(RealtimeStreamingPage);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\videoContainer\\StreamingContainer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\account\\SignupPage.js",[],["626","627"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\LaneTableCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTVehicleRatio.js",["628"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\n// import axios from \"axios\";\r\n// import { connect } from \"react-redux\";\r\n// import * as actions from \"../../../actions\";\r\n\r\nconst VehicleRatio = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"3\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 차종비율 parse\");\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = parseFloat((carVehicleRatio * 100).toFixed(2));\r\n\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = parseFloat((mBusVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = parseFloat((mTruckVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = parseFloat((motorVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"%\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default VehicleRatio;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\liquidChart\\PeakRatio.js",[],["629","630"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\App.js",["631","632"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\sider\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\dataVisualization\\LaneDataVisualization.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js",["633"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\n// import \"../style.less\";\r\n\r\nconst WLFisrtTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar FristRow;\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tFristRow = true;\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"lane\",\r\n\t\t\twidth: 60,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\tconsole.log(\"count 주간 차선별 1차데이블 parse\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (FristRow) {\r\n\t\t\t\tdataTemp[\"lane\"] = \"전체\";\r\n\t\t\t\tFristRow = false;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"lane\"] = `${laneNumber} 차선`;\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WLFisrtTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js",["634"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\accountForm\\SignupForm.js",["635","636"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js",["637"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\MTPCU.js",["638"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst MTPCULine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 PCU parse\");\r\n\t\tvar PCUTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tlet tempTotal = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehiclePassengerCarUnit;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tPCUTotalData.push(tempCar);\r\n\t\t\tPCUTotalData.push(tempBus);\r\n\t\t\tPCUTotalData.push(tempTruck);\r\n\t\t\tPCUTotalData.push(tempMotor);\r\n\t\t\tPCUTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(PCUTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\t// xAxis: { type: \"time\" },\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MTPCULine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\baseURL.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js",["639","640"],"import React, { useState, useEffect } from \"react\";\r\nimport { Spin, Typography, message } from \"antd\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LaneTableCard from \"../../../molecules/tableCard/LaneTableCard\";\r\nimport LaneDataVisualization from \"../../../molecules/dataVisualization/LaneDataVisualization\";\r\nimport \"../style.less\";\r\n\r\nconst LaneVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcameraCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\tadditionalFilter,\r\n\t\tsetLoggedIn,\r\n\t} = props;\r\n\tconst { Text } = Typography;\r\n\r\n\tconst [activeVisualKey, setActiveVisualKey] = useState(\"1\");\r\n\r\n\tconst [isLoadingTrafficTotal, setLoadingTrafficTotal] = useState(true);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [trafficTotalData, setTrafficTotalData] = useState([]);\r\n\r\n\tconst periodURL =\r\n\t\tperiod === \"DAY\" ? \"/daily\" : period === \"WEEK\" ? \"/weekly\" : \"/monthly\";\r\n\r\n\tconst currentURL =\r\n\t\tperiod === \"DAY\"\r\n\t\t\t? `${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane`\r\n\t\t\t: `${baseURL}${trafficURL}${periodURL}?camCode=${cameraCode}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane&weekOption=${additionalFilter}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEmptyData(false);\r\n\t\tsetLoadingTrafficTotal(true);\r\n\t\tsetTrafficTotalData([]);\r\n\t\tgetTrafficTotalData();\r\n\t}, [cameraCode, startDate, endTime, additionalFilter]);\r\n\r\n\tconst getTrafficTotalData = () => {\r\n\t\taxios\r\n\t\t\t.get(`${currentURL}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetTrafficTotalData(res.data);\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetLoadingTrafficTotal(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t\tmessage.warning(\"해당 기간 차선 별 데이터가 없습니다\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t} else if (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\"네트워크 문제 혹은 일시적인 오류로 페이지를 불러올 수 없습니다\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmessage.warning(\"해당 기간 차선 별 데이터가 없습니다\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isEmptyData ? (\r\n\t\t\t\tisLoadingTrafficTotal ? (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<LaneDataVisualization\r\n\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\tsetActiveVisualKey={setActiveVisualKey}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<LaneTableCard\r\n\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\ttableKey=\"first\"\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tcamLanes: state.locationCode.camLanes,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(LaneVisualization);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js",["641","642","643","644","645"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\doughnutChart\\VehicleRatio.js",["646"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js",["647"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst AvgSpeedLine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"4\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 차선별 평균속도 parse\");\r\n\t\tvar avgSpeedTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t} = TrafficData;\r\n\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\r\n\t\t\ttempCar[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carAvgSpeed;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusAvgSpeed;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckAvgSpeed;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"lane\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorAvgSpeed;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\tavgSpeedTotalData.push(tempCar);\r\n\t\t\tavgSpeedTotalData.push(tempBus);\r\n\t\t\tavgSpeedTotalData.push(tempTruck);\r\n\t\t\tavgSpeedTotalData.push(tempMotor);\r\n\t\t});\r\n\t\tsetData(avgSpeedTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"lane\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default AvgSpeedLine;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTOverSpeed.js",["648","649"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTOverSpeed = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 시간별 과속 parse\");\r\n\t\tvar TotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"key\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"key\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"key\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"key\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = motorSpdVolume;\r\n\t\t\ttempTotal[\"key\"] = \"전체\";\r\n\r\n\t\t\tTotalData.push(tempCar);\r\n\t\t\tTotalData.push(tempBus);\r\n\t\t\tTotalData.push(tempTruck);\r\n\t\t\tTotalData.push(tempMotor);\r\n\t\t\tTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v\r\n\t\t\t\t\t\t.concat(\"km/h\")\r\n\t\t\t\t\t\t.replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tseriesField: \"key\",\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTOverSpeed;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\cascader\\Cascader.js",["650"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableDescription\\TableDescription.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\gaugeChart\\AvgSpeed.js",["651"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js",["652"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst SearchFisrtTable = (props) => {\r\n\tconst { firstData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData(firstData);\r\n\t}, [firstData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t\tkey: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tkey: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tkey: \"car\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tkey: \"bus\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tkey: \"truck\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tkey: \"motor\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"motorpcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"보행자\",\r\n\t\t\tkey: \"totalPerson\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"수(명)\",\r\n\t\t\t\t\tdataIndex: \"person\",\r\n\t\t\t\t\tkey: \"person\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"무단횡단(명)\",\r\n\t\t\t\t\tdataIndex: \"jaywalk\",\r\n\t\t\t\t\tkey: \"jaywalk\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\t// const axiosData = () => {\r\n\t// \tconsole.log(\"count table axios\");\r\n\t// \ttrafficTotalData.some((eachData, index) => {\r\n\t// \t\tconst {\r\n\t// \t\t\trecordTime,\r\n\t// \t\t\ttotalVehicleVolume,\r\n\t// \t\t\ttotalVehicleAvgSpeed,\r\n\t// \t\t\ttotalVehiclePassengerCarUnit,\r\n\t// \t\t\ttotalVehicleSpdVolume,\r\n\t// \t\t\tcarVolume,\r\n\t// \t\t\tcarAvgSpeed,\r\n\t// \t\t\tcarPassengerCarUnit,\r\n\t// \t\t\tcarVehicleRatio,\r\n\t// \t\t\tcarSpdVolume,\r\n\t// \t\t\tmBusVolume,\r\n\t// \t\t\tmBusAvgSpeed,\r\n\t// \t\t\tmBusPassengerCarUnit,\r\n\t// \t\t\tmBusVehicleRatio,\r\n\t// \t\t\tmBusSpdVolume,\r\n\t// \t\t\tmTruckVolume,\r\n\t// \t\t\tmTruckAvgSpeed,\r\n\t// \t\t\tmTruckPassengerCarUnit,\r\n\t// \t\t\tmTruckVehicleRatio,\r\n\t// \t\t\tmTruckSpdVolume,\r\n\t// \t\t\tmotorVolume,\r\n\t// \t\t\tmotorAvgSpeed,\r\n\t// \t\t\tmotorPassengerCarUnit,\r\n\t// \t\t\tmotorVehicleRatio,\r\n\t// \t\t\tmotorSpdVolume,\r\n\t// \t\t\tpedestrianVolume,\r\n\t// \t\t\tjaywalkVolume,\r\n\t// \t\t} = eachData;\r\n\t// \t\tif (recordTime === \"ALL\") {\r\n\t// \t\t\treturn false;\r\n\t// \t\t}\r\n\t// \t\tif (countCol === 6) {\r\n\t// \t\t\treturn true;\r\n\t// \t\t}\r\n\t// \t\tcountCol += 1;\r\n\r\n\t// \t\tlet dataTemp = {};\r\n\r\n\t// \t\tdataTemp[\"key\"] = index + 1;\r\n\t// \t\tdataTemp[\"time\"] = moment(recordTime).format(\"YYYY년 MM월 DD일 HH:mm:ss\");\r\n\r\n\t// \t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t// \t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t// \t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t// \t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"carCount\"] = carVolume;\r\n\t// \t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t// \t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t// \t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t// \t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t// \t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t// \t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t// \t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t// \t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t// \t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t// \t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t// \t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t// \t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t// \t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t// \t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t// \t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t// \t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t// \t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t// \t\tdataTemp[\"person\"] = pedestrianVolume;\r\n\t// \t\tdataTemp[\"jaywalk\"] = jaywalkVolume;\r\n\r\n\t// \t\tTotalData.push(dataTemp);\r\n\t// \t});\r\n\t// \tsetFirstData(TotalData);\r\n\t// \tsetData(TotalData);\r\n\t// \tsetLoading(false);\r\n\t// \tsetLoadingFirst(false);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{Data.length === 0 ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SearchFisrtTable;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTOverSpeed.js",["653"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\pages\\search\\OverspeedPage.js",["654"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\searchData\\SearchData.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\tableCard\\TimeTableCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\actions\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\date.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js",["655"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTFirstTable.js",["656"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\avatar\\Avatar.js",["657"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\WTConcentrationRatio.js",["658"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\WTPCU.js",["659"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneVehicleRatio.js",["660"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LanePCU.js",["661"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\organisms\\loginCard\\LoginCard.js",["662","663"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\barChart\\LaneOverSpeedCnt.js",["664","665"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\redux\\reducers\\locationCode.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\molecules\\timeFilter\\TimeFilter.js",["666"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-client100\\src\\components\\charts\\lineChart\\DTPCU.js",["667"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\index.js",[],["668","669"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\realtimeStatistic\\RealtimeStatisticPage.js",["670","671"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\searchCollapsedTable\\SearchCollapsedTable.js",["672","673","674","675","676"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTSecondTable.js",["677"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchFirstTable.js",["678"],["679","680"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\dayTable\\DLFirstTable.js",["681"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\n\r\nimport \"../style.less\";\r\n\r\nconst DLFisrtTable = (props) => {\r\n\tconst { trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tvar FristRow;\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tFristRow = true;\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"lane\",\r\n\t\t\twidth: 60,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"전체\",\r\n\t\t\tdataIndex: \"Total\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\tkey: \"count\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"승용차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"버스\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"화물차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이륜차\",\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\tkey: \"avgSpeed\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\tdataIndex: \"motorpcu\",\r\n\t\t\t\t\tkey: \"pcu\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\tkey: \"ratio\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\tkey: \"overSpeed\",\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\tconsole.log(\"count 일간 차선별 1차데이블 parse\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tif (FristRow) {\r\n\t\t\t\tdataTemp[\"lane\"] = \"전체\";\r\n\t\t\t\tFristRow = false;\r\n\t\t\t} else {\r\n\t\t\t\tdataTemp[\"lane\"] = `${laneNumber} 차선`;\r\n\t\t\t}\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default DLFisrtTable;\r\n",["682","683"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTPCU.js",["684"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\liquidChart\\PeakRatio.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\videoContainer\\StreamingContainer.js",["685"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\realtimeStreaming\\RealtimeStreamingPage.js",["686","687","688","689","690"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\realtimeStatUpper\\RealtimeStatUpper.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\locationCode.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\cascader\\Cascader.js",["691"],"import React, { useState, useEffect } from \"react\";\r\nimport { Cascader } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nconst MyCascader = (props) => {\r\n\tconst {\r\n\t\tsize,\r\n\t\tsetSelectedLocation,\r\n\t\tsetSelectedLocationCode,\r\n\t\tdisplayLocation = true,\r\n\t\tsetLocationChange,\r\n\t\tbaseURL,\r\n\t\tisDisabled,\r\n\t\tplaceholdertxt,\r\n\t} = props;\r\n\r\n\tconst [parsedOptions, setParsedOptions] = useState([]);\r\n\tconst [camAddress, setCamAddress] = useState({});\r\n\tconst [camLanes, setCamLanes] = useState({});\r\n\tconst [camAssociateIds, setCamAssociateIds] = useState({});\r\n\tconst [camOCR, setCamOCR] = useState({});\r\n\tconst [camDirection, setCamDirection] = useState({});\r\n\r\n\tconst currentURL = \"/locations\";\r\n\tvar locationOptionsParse = [];\r\n\tvar cameraAddress = {};\r\n\tvar cameraLanes = {};\r\n\tvar cameraAssociateIds = {};\r\n\tvar cameraOCR = {};\r\n\tvar cameraDirection = {};\r\n\t// var totalAddres = new Set();\r\n\t// var totalCameraName = new Set();\r\n\tif (props.city === \"\" || displayLocation === false) {\r\n\t\tvar defaultOption = [];\r\n\t} else {\r\n\t\tdefaultOption = [\r\n\t\t\tprops.city,\r\n\t\t\tprops.district,\r\n\t\t\tprops.road,\r\n\t\t\tprops.spot,\r\n\t\t\tprops.camera,\r\n\t\t];\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tgetOptions();\r\n\t}, []);\r\n\r\n\tconst getOptions = () => {\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}${currentURL}/cities`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tres.data.forEach((cityInfo) => {\r\n\t\t\t\t\tconst { cityCode, cityName } = cityInfo;\r\n\t\t\t\t\tconst cityTemp = {};\r\n\t\t\t\t\tcityTemp[\"value\"] = cityCode;\r\n\t\t\t\t\tcityTemp[\"label\"] = cityName;\r\n\t\t\t\t\tcityTemp[\"children\"] = [];\r\n\t\t\t\t\tlocationOptionsParse.push(cityTemp);\r\n\t\t\t\t\tgetDisricts(cityCode);\r\n\t\t\t\t\tsetParsedOptions(locationOptionsParse);\r\n\t\t\t\t\tsetCamAddress(cameraAddress);\r\n\t\t\t\t\tsetCamLanes(cameraLanes);\r\n\t\t\t\t\tsetCamOCR(cameraOCR);\r\n\t\t\t\t\tsetCamAssociateIds(cameraAssociateIds);\r\n\t\t\t\t\tsetCamDirection(cameraDirection);\r\n\t\t\t\t\t// setAddress(totalAddres);\r\n\t\t\t\t\t// setCameraName(totalCameraName);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\tconst getDisricts = (cityCode) => {\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}${currentURL}/${cityCode}/districts`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tres.data.forEach((districtInfo) => {\r\n\t\t\t\t\tconst districtTemp = {};\r\n\r\n\t\t\t\t\tconst { districtCode, districtName } = districtInfo;\r\n\t\t\t\t\tdistrictTemp[\"value\"] = districtCode;\r\n\t\t\t\t\tdistrictTemp[\"label\"] = districtName;\r\n\t\t\t\t\tdistrictTemp[\"children\"] = [];\r\n\t\t\t\t\tconst lastCityIdx = locationOptionsParse.length - 1;\r\n\t\t\t\t\tlocationOptionsParse[lastCityIdx][\"children\"].push(districtTemp);\r\n\t\t\t\t\tconst lastDistrictIdx =\r\n\t\t\t\t\t\tlocationOptionsParse[lastCityIdx][\"children\"].length - 1;\r\n\t\t\t\t\tconst currentRoads = [];\r\n\t\t\t\t\tgetRoads(\r\n\t\t\t\t\t\tcityCode,\r\n\t\t\t\t\t\tdistrictCode,\r\n\t\t\t\t\t\tlastCityIdx,\r\n\t\t\t\t\t\tlastDistrictIdx,\r\n\t\t\t\t\t\tdistrictTemp,\r\n\t\t\t\t\t\tcurrentRoads\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\tconst getRoads = (cityCode, districtCode, lastCityIdx, lastDistrictIdx) => {\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}${currentURL}/${cityCode}/${districtCode}/roads`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tres.data.forEach((roadInfo) => {\r\n\t\t\t\t\tconst { roadCode, roadName } = roadInfo;\r\n\t\t\t\t\tconst roadTemp = {};\r\n\t\t\t\t\troadTemp[\"value\"] = roadCode;\r\n\t\t\t\t\troadTemp[\"label\"] = roadName;\r\n\t\t\t\t\troadTemp[\"children\"] = [];\r\n\t\t\t\t\tlocationOptionsParse[lastCityIdx][\"children\"][lastDistrictIdx][\r\n\t\t\t\t\t\t\"children\"\r\n\t\t\t\t\t].push(roadTemp);\r\n\t\t\t\t\tconst lastRoadIdx =\r\n\t\t\t\t\t\tlocationOptionsParse[lastCityIdx][\"children\"][lastDistrictIdx][\r\n\t\t\t\t\t\t\t\"children\"\r\n\t\t\t\t\t\t].length - 1;\r\n\t\t\t\t\tconst currentSpots = [];\r\n\r\n\t\t\t\t\tgetSpots(\r\n\t\t\t\t\t\tcityCode,\r\n\t\t\t\t\t\tdistrictCode,\r\n\t\t\t\t\t\troadCode,\r\n\t\t\t\t\t\tlastCityIdx,\r\n\t\t\t\t\t\tlastDistrictIdx,\r\n\t\t\t\t\t\tlastRoadIdx,\r\n\t\t\t\t\t\tcurrentSpots\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\tconst getSpots = (\r\n\t\tcityCode,\r\n\t\tdistrictCode,\r\n\t\troadCode,\r\n\t\tlastCityIdx,\r\n\t\tlastDistrictIdx,\r\n\t\tlastRoadIdx\r\n\t) => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${currentURL}/${cityCode}/${districtCode}/${roadCode}/spots`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tres.data.forEach((spotInfo) => {\r\n\t\t\t\t\tconst { spotCode, spotName } = spotInfo;\r\n\t\t\t\t\tconst spotTemp = {};\r\n\t\t\t\t\tspotTemp[\"value\"] = spotCode;\r\n\t\t\t\t\tspotTemp[\"label\"] = spotName;\r\n\t\t\t\t\tspotTemp[\"children\"] = [];\r\n\r\n\t\t\t\t\tlocationOptionsParse[lastCityIdx][\"children\"][lastDistrictIdx][\r\n\t\t\t\t\t\t\"children\"\r\n\t\t\t\t\t][lastRoadIdx][\"children\"].push(spotTemp);\r\n\t\t\t\t\tconst lastSpotIdx =\r\n\t\t\t\t\t\tlocationOptionsParse[lastCityIdx][\"children\"][lastDistrictIdx][\r\n\t\t\t\t\t\t\t\"children\"\r\n\t\t\t\t\t\t][lastRoadIdx][\"children\"].length - 1;\r\n\t\t\t\t\tconst currentCameras = [];\r\n\t\t\t\t\tgetCameras(\r\n\t\t\t\t\t\tcityCode,\r\n\t\t\t\t\t\tdistrictCode,\r\n\t\t\t\t\t\troadCode,\r\n\t\t\t\t\t\tspotCode,\r\n\t\t\t\t\t\tcurrentCameras\r\n\t\t\t\t\t);\r\n\t\t\t\t\tlocationOptionsParse[lastCityIdx][\"children\"][lastDistrictIdx][\r\n\t\t\t\t\t\t\"children\"\r\n\t\t\t\t\t][lastRoadIdx][\"children\"][lastSpotIdx][\"children\"] = currentCameras;\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\tconst getCameras = (\r\n\t\tcityCode,\r\n\t\tdistrictCode,\r\n\t\troadCode,\r\n\t\tspotCode,\r\n\t\tcurrentCameras\r\n\t) => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${currentURL}/${cityCode}/${districtCode}/${roadCode}/${spotCode}/cameras`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tres.data.forEach((cameraInfo) => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tcamCode,\r\n\t\t\t\t\t\tcamName,\r\n\t\t\t\t\t\tupboundFlag,\r\n\t\t\t\t\t\thttpStreamAddr,\r\n\t\t\t\t\t\tlanesTotal,\r\n\t\t\t\t\t\tassociateIds,\r\n\t\t\t\t\t\tocrFlag,\r\n\t\t\t\t\t} = cameraInfo;\r\n\t\t\t\t\tconst cameraTemp = {};\r\n\t\t\t\t\tcameraTemp[\"value\"] = camCode;\r\n\t\t\t\t\tupboundFlag\r\n\t\t\t\t\t\t? (cameraTemp[\"label\"] = camName + \" [상행]\")\r\n\t\t\t\t\t\t: (cameraTemp[\"label\"] = camName + \" [하행]\");\r\n\r\n\t\t\t\t\tcurrentCameras.push(cameraTemp);\r\n\t\t\t\t\tcameraAddress[camCode] = httpStreamAddr;\r\n\t\t\t\t\tcameraLanes[camCode] = lanesTotal;\r\n\t\t\t\t\tcameraOCR[camCode] = ocrFlag;\r\n\t\t\t\t\tif (associateIds) {\r\n\t\t\t\t\t\tcameraAssociateIds[camCode] = associateIds\r\n\t\t\t\t\t\t\t.slice(1, associateIds.length - 1)\r\n\t\t\t\t\t\t\t.split(\",\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcameraAssociateIds[camCode] = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcameraDirection[camCode] = upboundFlag;\r\n\t\t\t\t\t// totalCameraName.add(camName);\r\n\t\t\t\t\t// totalAddres.add(httpStreamAddr);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst onChange = (value, selectedOptions) => {\r\n\t\tconsole.log(value, selectedOptions);\r\n\t\tconst optionVals = selectedOptions.map((item) => item.label);\r\n\t\tconst optionKeys = [\"city\", \"district\", \"road\", \"spot\", \"camera\"];\r\n\t\tconst selectedLocation = optionVals.reduce((obj, item, idx) => {\r\n\t\t\tobj[optionKeys[idx]] = item;\r\n\t\t\treturn obj;\r\n\t\t}, {});\r\n\r\n\t\tconst codeKeys = [\r\n\t\t\t\"cityCode\",\r\n\t\t\t\"districtCode\",\r\n\t\t\t\"roadCode\",\r\n\t\t\t\"spotCode\",\r\n\t\t\t\"cameraCode\",\r\n\t\t];\r\n\t\tconst selectedLocationCode = value.reduce((obj, item, idx) => {\r\n\t\t\tobj[codeKeys[idx]] = item;\r\n\t\t\treturn obj;\r\n\t\t}, {});\r\n\t\tselectedLocationCode[\"camAddress\"] = camAddress[value[4]];\r\n\t\tselectedLocationCode[\"camLanes\"] = camLanes[value[4]];\r\n\t\tselectedLocationCode[\"ocrFlag\"] = camOCR[value[4]];\r\n\t\tselectedLocationCode[\"associateIds\"] = camAssociateIds[value[4]];\r\n\t\tselectedLocationCode[\"upboundFlag\"] = camDirection[value[4]];\r\n\r\n\t\tsetSelectedLocation(selectedLocation);\r\n\t\tsetSelectedLocationCode(selectedLocationCode);\r\n\t\tif (setLocationChange) {\r\n\t\t\tsetLocationChange(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst filter = (inputValue, path) => {\r\n\t\treturn path.some(\r\n\t\t\t(option) =>\r\n\t\t\t\toption.label.toLowerCase().indexOf(inputValue.toLowerCase()) > -1\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Cascader\r\n\t\t\t\tsize={size}\r\n\t\t\t\texpandTrigger=\"hover\"\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tplaceholder={placeholdertxt ? placeholdertxt : \"위치 선택\"}\r\n\t\t\t\tshowSearch={{ filter }}\r\n\t\t\t\t// onPopupVisibleChange={getOptions}\r\n\t\t\t\toptions={parsedOptions}\r\n\t\t\t\tdefaultValue={defaultOption}\r\n\t\t\t\tdisabled={isDisabled && isDisabled}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcity: state.location.city,\r\n\t\tdistrict: state.location.district,\r\n\t\troad: state.location.road,\r\n\t\tspot: state.location.spot,\r\n\t\tcamera: state.location.camera,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetLocationInfo: () => {\r\n\t\t\tdispatch(actions.getLocation());\r\n\t\t},\r\n\t\tgetBaseURL: () => {\r\n\t\t\tdispatch(actions.getURL());\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCascader);\r\n",["692","693"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\loginCard\\LoginCard.js",["694","695"],"import React from \"react\";\r\nimport { Form, Input, Button, message, Card, Typography } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\n\r\nconst LoginCard = (props) => {\r\n\tconst { baseURL, setLoggedIn } = props;\r\n\tconst { Title } = Typography;\r\n\r\n\tconst login = (values) => {\r\n\t\tconst { username, password } = values;\r\n\t\tconsole.log(username, password);\r\n\r\n\t\taxios\r\n\t\t\t.post(\r\n\t\t\t\t`${baseURL}/auth/tokens`,\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tusername,\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t}),\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tconst { jwt } = res.data;\r\n\t\t\t\twindow.localStorage.setItem(\"token\", jwt);\r\n\t\t\t\twindow.localStorage.setItem(\"username\", username);\r\n\t\t\t\tgetUserInfo();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tmessage.error(\"로그인 실패\");\r\n\t\t\t});\r\n\t};\r\n\tconst getUserInfo = () => {\r\n\t\taxios\r\n\t\t\t.get(`${baseURL}/users/${localStorage.getItem(\"username\")}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\twindow.localStorage.setItem(\"affiliate\", res.data.affiliate);\r\n\t\t\t\tsetLoggedIn(true);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Form\r\n\t\t\t\tname=\"normal_login\"\r\n\t\t\t\tclassName=\"login-form\"\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tremember: true,\r\n\t\t\t\t}}\r\n\t\t\t\tonFinish={login}\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: \"아이디를 입력하세요\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tprefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n\t\t\t\t\t\tplaceholder=\"아이디\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: \"비밀번호를 입력하세요\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tprefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"비밀번호\"\r\n\t\t\t\t\t\tautoComplete=\"true\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\thtmlType=\"submit\"\r\n\t\t\t\t\t\tclassName=\"login-form-button\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t로그인\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(LoginCard);\r\n",["696","697"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\timeFilter\\TimeFilter.js",["698"],"import React, { useState } from \"react\";\r\nimport { Radio, Typography } from \"antd\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst TimeFilter = (props) => {\r\n\tconst { value, setValue } = props;\r\n\tconst { Text } = Typography;\r\n\r\n\tconst onChange = (e) => {\r\n\t\tsetValue(e.target.value);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"multi-radio-body\">\r\n\t\t\t<Text strong style={{ marginRight: 10, minWidth: 60 }}>\r\n\t\t\t\t선택사항\r\n\t\t\t</Text>\r\n\t\t\t<Radio.Group onChange={onChange} value={value}>\r\n\t\t\t\t<Radio value=\"ALL\">전체</Radio>\r\n\t\t\t\t<Radio value=\"DAY\">평일</Radio>\r\n\t\t\t\t<Radio value=\"END\">주말</Radio>\r\n\t\t\t</Radio.Group>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TimeFilter;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\dashLineChart\\WeekPedestrians.js",["699"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst WeekPedestrians = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\tvar DTPedestrians = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"11\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\ttrafficTotalData.slice(3).forEach((pedestrianData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\trecordDate,\r\n\t\t\t\tpedestrianVolume,\r\n\t\t\t\tjaywalkVolume,\r\n\t\t\t} = pedestrianData;\r\n\r\n\t\t\tconst totalTemp = {};\r\n\t\t\tconst personTemp = {};\r\n\t\t\tconst jaywalkTemp = {};\r\n\r\n\t\t\tvar timeTemp;\r\n\t\t\tif (weekOption) {\r\n\t\t\t\ttimeTemp = WeekKey[weekOption];\r\n\t\t\t}\r\n\t\t\tif (recordDate) {\r\n\t\t\t\ttimeTemp = moment(recordDate).format(\"MM-DD\");\r\n\t\t\t}\r\n\t\t\tconst personCnt = pedestrianVolume - jaywalkVolume;\r\n\r\n\t\t\ttotalTemp[\"date\"] = timeTemp;\r\n\t\t\ttotalTemp[\"type\"] = \"총 보행자\";\r\n\t\t\ttotalTemp[\"value\"] = pedestrianVolume;\r\n\r\n\t\t\tpersonTemp[\"date\"] = timeTemp;\r\n\t\t\tpersonTemp[\"type\"] = \"보행자\";\r\n\t\t\tpersonTemp[\"value\"] = personCnt;\r\n\r\n\t\t\tjaywalkTemp[\"date\"] = timeTemp;\r\n\t\t\tjaywalkTemp[\"type\"] = \"무단횡단\";\r\n\t\t\tjaywalkTemp[\"value\"] = jaywalkVolume;\r\n\r\n\t\t\tDTPedestrians.push(personTemp);\r\n\t\t\tDTPedestrians.push(totalTemp);\r\n\t\t\tDTPedestrians.push(jaywalkTemp);\r\n\t\t});\r\n\t\tsetData(DTPedestrians);\r\n\t\tsetLoading(false);\r\n\t};\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"date\",\r\n\t\tyField: \"value\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"명\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tseriesField: \"type\",\r\n\t\tcolor: function color(_ref) {\r\n\t\t\tvar type = _ref.type;\r\n\t\t\treturn type === \"총 보행자\"\r\n\t\t\t\t? \"#F4664A\"\r\n\t\t\t\t: type === \"보행자\"\r\n\t\t\t\t? \"#30BF78\"\r\n\t\t\t\t: \"#FAAD14\";\r\n\t\t},\r\n\t\tlineStyle: function lineStyle(_ref2) {\r\n\t\t\tvar type = _ref2.type;\r\n\t\t\tif (type === \"총 보행자\") {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlineDash: [4, 4],\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn { opacity: 0.5 };\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WeekPedestrians;\r\n",["700","701"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\bidirectionalBar\\DayNight.js",["702"],"import React, { useState, useEffect } from \"react\";\r\nimport { BidirectionalBar } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst MyBidirectionalBar = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"6\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\t\t\tparseTotalData();\r\n\t\t\tconsole.log(trafficTotalData);\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tvar dataSample = [\r\n\t\t\t{\r\n\t\t\t\t차종: \"승용차\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t차종: \"버스\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t차종: \"화물차\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t차종: \"이륜차\",\r\n\t\t\t\t\"주간 12시간 교통량\": 0,\r\n\t\t\t\t\"야간 12시간 교통량\": 0,\r\n\t\t\t},\r\n\t\t];\r\n\t\tvar trafficData = trafficTotalData[0];\r\n\r\n\t\tdataSample[0][\"야간 12시간 교통량\"] = trafficData[\"carNighttimeVolume\"];\r\n\t\tdataSample[1][\"야간 12시간 교통량\"] = trafficData[\"mBusNighttimeVolume\"];\r\n\t\tdataSample[2][\"야간 12시간 교통량\"] = trafficData[\"mTruckNighttimeVolume\"];\r\n\t\tdataSample[3][\"야간 12시간 교통량\"] = trafficData[\"motorNighttimeVolume\"];\r\n\r\n\t\tdataSample[0][\"주간 12시간 교통량\"] = trafficData[\"carDaytimeVolume\"];\r\n\t\tdataSample[1][\"주간 12시간 교통량\"] = trafficData[\"mBusDaytimeVolume\"];\r\n\t\tdataSample[2][\"주간 12시간 교통량\"] = trafficData[\"mTruckDaytimeVolume\"];\r\n\t\tdataSample[3][\"주간 12시간 교통량\"] = trafficData[\"motorDaytimeVolume\"];\r\n\t\tsetData(dataSample);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\twidth: 400,\r\n\t\theight: 400,\r\n\t\txField: \"차종\",\r\n\t\txAxis: { position: \"bottom\" },\r\n\t\tinteractions: [{ type: \"active-region\" }],\r\n\t\tyField: [\"주간 12시간 교통량\", \"야간 12시간 교통량\"],\r\n\t\ttooltip: {\r\n\t\t\tshared: true,\r\n\t\t\tshowMarkers: false,\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<BidirectionalBar {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MyBidirectionalBar;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\App.js",["703","704"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\search\\SearchPage.js",["705","706"],"import React, { useState } from \"react\";\r\nimport { Layout, Spin } from \"antd\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport SearchCollapsedTable from \"../../organisms/searchCollapsedTable/SearchCollapsedTable\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst SearchDownloadPage = (props) => {\r\n\tconst { setLoggedIn, isMaster } = props;\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [count, setCount] = useState(false);\r\n\r\n\tconst { Content } = Layout;\r\n\r\n\treturn (\r\n\t\t<div className=\"page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"기간 별 데이터 조회\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"SEARCH\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\tfirstFilter={firstFilter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\t<SearchCollapsedTable\r\n\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchDownloadPage;\r\n",["707","708"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\cascaderBtn\\CascaderBtn.js",[],["709","710"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTFirstTable.js",["711"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Spin } from \"antd\";\r\nimport \"../style.less\";\r\n\r\nconst WTFirstTable = (props) => {\r\n\tconst { currentLaneNum, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [trafficTotalData]);\r\n\r\n\tvar columns;\r\n\tif (currentLaneNum === 0) {\r\n\t\tcolumns = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"시간\",\r\n\t\t\t\tdataIndex: \"time\",\r\n\t\t\t\tkey: \"time\",\r\n\t\t\t\twidth: 67,\r\n\t\t\t\ttextWrap: \"word-break\",\r\n\t\t\t\tellipsis: true,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"전체\",\r\n\t\t\t\tdataIndex: \"Total\",\r\n\t\t\t\tkey: \"Total\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\tkey: \"car\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"버스\",\r\n\t\t\t\tkey: \"bus\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\tkey: \"truck\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\tkey: \"motor\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"보행자\",\r\n\t\t\t\tkey: \"personTotal\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"수(명)\",\r\n\t\t\t\t\t\tdataIndex: \"person\",\r\n\t\t\t\t\t\tkey: \"person\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"무단횡단(명)\",\r\n\t\t\t\t\t\tdataIndex: \"jaywalk\",\r\n\t\t\t\t\t\tkey: \"jaywalk\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t];\r\n\t} else {\r\n\t\tcolumns = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"시간\",\r\n\t\t\t\tdataIndex: \"time\",\r\n\t\t\t\tkey: \"time\",\r\n\t\t\t\twidth: 70,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"전체\",\r\n\t\t\t\tdataIndex: \"Total\",\r\n\t\t\t\tkey: \"Total\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalCount\",\r\n\t\t\t\t\t\tkey: \"totalCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"totalAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"totalAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"totalpcu\",\r\n\t\t\t\t\t\tkey: \"totalpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"totalOverSpeed\",\r\n\t\t\t\t\t\tkey: \"totalOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"승용차\",\r\n\t\t\t\tkey: \"car\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carCount\",\r\n\t\t\t\t\t\tkey: \"carCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"carAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"carAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"carpcu\",\r\n\t\t\t\t\t\tkey: \"carpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"carRatio\",\r\n\t\t\t\t\t\tkey: \"carRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"carOverSpeed\",\r\n\t\t\t\t\t\tkey: \"carOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"버스\",\r\n\t\t\t\tkey: \"bus\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busCount\",\r\n\t\t\t\t\t\tkey: \"busCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"busAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"busAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"buspcu\",\r\n\t\t\t\t\t\tkey: \"buspcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"busRatio\",\r\n\t\t\t\t\t\tkey: \"busRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"busOverSpeed\",\r\n\t\t\t\t\t\tkey: \"busOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"화물차\",\r\n\t\t\t\tkey: \"truck\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckCount\",\r\n\t\t\t\t\t\tkey: \"truckCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"truckAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"truckAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"truckpcu\",\r\n\t\t\t\t\t\tkey: \"truckpcu\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"truckRatio\",\r\n\t\t\t\t\t\tkey: \"truckRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"truckOverSpeed\",\r\n\t\t\t\t\t\tkey: \"truckOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: \"이륜차\",\r\n\t\t\t\tkey: \"motor\",\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"통행량(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorCount\",\r\n\t\t\t\t\t\tkey: \"motorCount\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"평균속도(km/h)\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"PCU\",\r\n\t\t\t\t\t\tdataIndex: \"motorAvgSpeed\",\r\n\t\t\t\t\t\tkey: \"motorAvgSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"비율(%)\",\r\n\t\t\t\t\t\tdataIndex: \"motorRatio\",\r\n\t\t\t\t\t\tkey: \"motorRatio\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"과속(대)\",\r\n\t\t\t\t\t\tdataIndex: \"motorOverSpeed\",\r\n\t\t\t\t\t\tkey: \"motorOverSpeed\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t];\r\n\t}\r\n\tconst axiosData = () => {\r\n\t\tconsole.log(\"count table axios\");\r\n\t\ttrafficTotalData.forEach((eachData, index) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t\ttotalVehicleAvgSpeed,\r\n\t\t\t\ttotalVehiclePassengerCarUnit,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tcarAvgSpeed,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmBusAvgSpeed,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmTruckAvgSpeed,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\tmotorAvgSpeed,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t\tpedestrianVolume,\r\n\t\t\t\tjaywalkVolume,\r\n\t\t\t} = eachData;\r\n\t\t\tlet dataTemp = {};\r\n\r\n\t\t\tdataTemp[\"key\"] = index + 1;\r\n\t\t\tdataTemp[\"time\"] = WeekKey[weekOption];\r\n\r\n\t\t\tdataTemp[\"totalCount\"] = totalVehicleVolume;\r\n\t\t\tdataTemp[\"totalAvgSpeed\"] = totalVehicleAvgSpeed;\r\n\t\t\tdataTemp[\"totalpcu\"] = totalVehiclePassengerCarUnit;\r\n\t\t\tdataTemp[\"totalOverSpeed\"] = totalVehicleSpdVolume;\r\n\r\n\t\t\tdataTemp[\"carCount\"] = carVolume;\r\n\t\t\tdataTemp[\"carAvgSpeed\"] = carAvgSpeed;\r\n\t\t\tdataTemp[\"carpcu\"] = carPassengerCarUnit;\r\n\t\t\tdataTemp[\"carRatio\"] = carVehicleRatio;\r\n\t\t\tdataTemp[\"carOverSpeed\"] = carSpdVolume;\r\n\r\n\t\t\tdataTemp[\"busCount\"] = mBusVolume;\r\n\t\t\tdataTemp[\"busAvgSpeed\"] = mBusAvgSpeed;\r\n\t\t\tdataTemp[\"buspcu\"] = mBusPassengerCarUnit;\r\n\t\t\tdataTemp[\"busRatio\"] = mBusVehicleRatio;\r\n\t\t\tdataTemp[\"busOverSpeed\"] = mBusSpdVolume;\r\n\r\n\t\t\tdataTemp[\"truckCount\"] = mTruckVolume;\r\n\t\t\tdataTemp[\"truckAvgSpeed\"] = mTruckAvgSpeed;\r\n\t\t\tdataTemp[\"truckpcu\"] = mTruckPassengerCarUnit;\r\n\t\t\tdataTemp[\"truckRatio\"] = mTruckVehicleRatio;\r\n\t\t\tdataTemp[\"truckOverSpeed\"] = mTruckSpdVolume;\r\n\r\n\t\t\tdataTemp[\"motorCount\"] = motorVolume;\r\n\t\t\tdataTemp[\"motorAvgSpeed\"] = motorAvgSpeed;\r\n\t\t\tdataTemp[\"motorpcu\"] = motorPassengerCarUnit;\r\n\t\t\tdataTemp[\"motorRatio\"] = motorVehicleRatio;\r\n\t\t\tdataTemp[\"motorOverSpeed\"] = motorSpdVolume;\r\n\t\t\tif (currentLaneNum === 0) {\r\n\t\t\t\tdataTemp[\"person\"] = pedestrianVolume;\r\n\t\t\t\tdataTemp[\"jaywalk\"] = jaywalkVolume;\r\n\t\t\t}\r\n\r\n\t\t\tTotalData.push(dataTemp);\r\n\t\t});\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table columns={columns} dataSource={Data} size=\"small\" bordered />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTFirstTable;\r\n",["712","713"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\GenAvgSpeed.js",["714"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst GeneralOverSpeed = (props) => {\r\n\tconst { trafficData, page } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tsetData([]);\r\n\t\tparseTotalData();\r\n\t}, [trafficData]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 시간별 PHF parse\");\r\n\t\tvar TotalData = [\r\n\t\t\t{ type: \"승용차\", value: 0 },\r\n\t\t\t{ type: \"버스\", value: 0 },\r\n\t\t\t{ type: \"화물차\", value: 0 },\r\n\t\t\t{ type: \"오토바이\", value: 0 },\r\n\t\t];\r\n\t\tvar data = {\r\n\t\t\tcarAvgSpeed: 0,\r\n\t\t\tmBusAvgSpeed: 0,\r\n\t\t\tmTruckAvgSpeed: 0,\r\n\t\t\tmotorAvgSpeed: 0,\r\n\t\t};\r\n\t\tif (page === \"REALSTATISTIC\") {\r\n\t\t\ttrafficData.forEach((eachData) => {\r\n\t\t\t\tdata[\"carAvgSpeed\"] += eachData[\"carAvgSpeed\"];\r\n\t\t\t\tdata[\"mBusAvgSpeed\"] += eachData[\"mBusAvgSpeed\"];\r\n\t\t\t\tdata[\"mTruckAvgSpeed\"] += eachData[\"mTruckAvgSpeed\"];\r\n\t\t\t\tdata[\"motorAvgSpeed\"] += eachData[\"motorAvgSpeed\"];\r\n\t\t\t});\r\n\t\t\tlet length = trafficData.length;\r\n\t\t\tdata[\"carAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"carAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t\tdata[\"mBusAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"mBusAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t\tdata[\"mTruckAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"mTruckAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t\tdata[\"motorAvgSpeed\"] = parseFloat(\r\n\t\t\t\t(data[\"motorAvgSpeed\"] / length).toFixed(2)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tdata = trafficData[0];\r\n\t\t}\r\n\r\n\t\tTotalData[0].value = data[\"carAvgSpeed\"];\r\n\t\tTotalData[1].value = data[\"mBusAvgSpeed\"];\r\n\t\tTotalData[2].value = data[\"mTruckAvgSpeed\"];\r\n\t\tTotalData[3].value = data[\"motorAvgSpeed\"];\r\n\t\tsetData(TotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"type\",\r\n\t\tyField: \"value\",\r\n\t\tautoFit: true,\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfill: \"#FFFFFF\",\r\n\t\t\t\topacity: 0.6,\r\n\t\t\t},\r\n\t\t},\r\n\t\tmeta: {\r\n\t\t\ttype: { alias: \"차종\" },\r\n\t\t\tvalue: { alias: \"평균속도\" },\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default GeneralOverSpeed;\r\n",["715","716"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WLFirstTable.js",["717"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTOverSpeed.js",["718","719"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\DTCnt.js",["720"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nimport moment from \"moment\";\r\n\r\nconst CntLine = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"1\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 통행량 parse\");\r\n\t\tvar cntTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordTime,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst Time = moment(recordTime).format(\"HH:mm\");\r\n\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carVolume;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusVolume;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckVolume;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorVolume;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleVolume;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\t\t\tcntTotalData.push(tempCar);\r\n\t\t\tcntTotalData.push(tempBus);\r\n\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\tcntTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\t// xAxis: { type: \"time\" },\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default CntLine;\r\n",["721","722"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\videoContainer\\StatContainer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\actions\\index.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\WTPHF.js",["723"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LaneVehicleCnt.js",["724"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\sider\\index.js",["725"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\OverSpeedTable.js",["726"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n\tTable,\r\n\tSpin,\r\n\tButton,\r\n\tModal,\r\n\tDescriptions,\r\n\tTypography,\r\n\tmessage,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Video from \"../../molecules/video/Video\";\r\nimport \"./style.less\";\r\n\r\nconst OverSpeedTable = (props) => {\r\n\tconst {\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcameraCode,\r\n\t\tassociateIds,\r\n\t\tbaseURL,\r\n\t\tcamera,\r\n\t\toverSpeedVideoURL,\r\n\t\tsetLoggedIn,\r\n\t\tocrFlag,\r\n\t} = props;\r\n\tconst { Text } = Typography;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoadingData, setLoadingData] = useState(true);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [isImgModalVisible, setImgModalVisible] = useState(false);\r\n\tconst [isVideoModalVisible, setVideoModalVisible] = useState(false);\r\n\tconst [shownKey, setShownKey] = useState(\"\");\r\n\tconst [isVideoSource, setVideoSource] = useState(true);\r\n\r\n\tconst camCodes =\r\n\t\tassociateIds.length !== 0\r\n\t\t\t? `camCodes=[${[...associateIds, cameraCode]}]`\r\n\t\t\t: `camCode=${cameraCode}`;\r\n\r\n\tvar TotalData = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingData(true);\r\n\t\tsetEmptyData(false);\r\n\t\tsetData([]);\r\n\t\taxiosData();\r\n\t}, [startDate, endTime, cameraCode]);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: \"시간\",\r\n\t\t\tdataIndex: \"time\",\r\n\t\t\tkey: \"time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"차량번호\",\r\n\t\t\tdataIndex: \"licenseNumber\",\r\n\t\t\tkey: \"licenseNumber\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"위반속도\",\r\n\t\t\tdataIndex: \"speed\",\r\n\t\t\tkey: \"speed\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"차선\",\r\n\t\t\tdataIndex: \"laneNumber\",\r\n\t\t\tkey: \"laneNumber\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"차종\",\r\n\t\t\tdataIndex: \"vehicleType\",\r\n\t\t\tkey: \"vehicleType\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"이미지\",\r\n\t\t\tdataIndex: \"imageLink\",\r\n\t\t\tkey: \"imageLink\",\r\n\t\t\trender: (imgInfo) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"link\"\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={() => setImgModalVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t이미지 보기\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{shownKey === imgInfo[0] % 10 && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\ttitle=\"과속차량 이미지\"\r\n\t\t\t\t\t\t\t\tcentered\r\n\t\t\t\t\t\t\t\tmaskStyle={{ backgroundColor: \"transparent\" }}\r\n\t\t\t\t\t\t\t\tbodyStyle={{ width: 630 }}\r\n\t\t\t\t\t\t\t\tstyle={{ width: 630 }}\r\n\t\t\t\t\t\t\t\tvisible={isImgModalVisible}\r\n\t\t\t\t\t\t\t\tonOk={() => setImgModalVisible(false)}\r\n\t\t\t\t\t\t\t\tonCancel={() => setImgModalVisible(false)}\r\n\t\t\t\t\t\t\t\tfooter={[\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tkey=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setImgModalVisible(false)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t확인\r\n\t\t\t\t\t\t\t\t\t</Button>,\r\n\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Descriptions bordered size=\"small\">\r\n\t\t\t\t\t\t\t\t\t<Descriptions.Item label=\"위반차량\" span={2}>\r\n\t\t\t\t\t\t\t\t\t\t{imgInfo[5]}\r\n\t\t\t\t\t\t\t\t\t</Descriptions.Item>\r\n\t\t\t\t\t\t\t\t\t<Descriptions.Item label=\"과속영상\" span={1}>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tghost\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setVideoModalVisible(true)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t영상 보기\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"과속차량 영상\"\r\n\t\t\t\t\t\t\t\t\t\t\tvisible={isVideoModalVisible}\r\n\t\t\t\t\t\t\t\t\t\t\tonOk={() => setVideoModalVisible(false)}\r\n\t\t\t\t\t\t\t\t\t\t\tonCancel={() => setVideoModalVisible(false)}\r\n\t\t\t\t\t\t\t\t\t\t\tfooter={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setVideoModalVisible(false)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t확인\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>,\r\n\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{isVideoSource ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Video\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsource={`${overSpeedVideoURL}/${cameraCode}/clip?record_time=${imgInfo[6]}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowControls={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetVideoSource={setVideoSource}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Text>해당 과속차량 영상이 없습니다</Text>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t\t\t</Descriptions.Item>\r\n\t\t\t\t\t\t\t\t\t<Descriptions.Item label=\"시간\" span={2}>\r\n\t\t\t\t\t\t\t\t\t\t{imgInfo[2]}\r\n\t\t\t\t\t\t\t\t\t</Descriptions.Item>\r\n\t\t\t\t\t\t\t\t\t<Descriptions.Item label=\"위반속도\">\r\n\t\t\t\t\t\t\t\t\t\t{imgInfo[3]}km/h\r\n\t\t\t\t\t\t\t\t\t</Descriptions.Item>\r\n\t\t\t\t\t\t\t\t\t<Descriptions.Item label=\"위치\" span={2}>\r\n\t\t\t\t\t\t\t\t\t\t{camera}\r\n\t\t\t\t\t\t\t\t\t</Descriptions.Item>\r\n\t\t\t\t\t\t\t\t\t<Descriptions.Item label=\"위반차로\">\r\n\t\t\t\t\t\t\t\t\t\t{imgInfo[4]}\r\n\t\t\t\t\t\t\t\t\t</Descriptions.Item>\r\n\t\t\t\t\t\t\t\t</Descriptions>\r\n\t\t\t\t\t\t\t\t{imgInfo[1] ? (\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginTop: 15 }}\r\n\t\t\t\t\t\t\t\t\t\talt=\"과속차량 이미지\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={imgInfo[1]}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Text>해당 과속차량 이미지가 없습니다</Text>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\tconst axiosData = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}/violations/speeding/records?${camCodes}&startDate=${startDate}&endTime=${endTime} 23:59:59&limit=0&offset=0`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"count table axios\");\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tres.data.forEach((eachData, index) => {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\trecordTime,\r\n\t\t\t\t\t\t\tvehicleType,\r\n\t\t\t\t\t\t\tlaneNumber,\r\n\t\t\t\t\t\t\tlicenseNumber,\r\n\t\t\t\t\t\t\tspeed,\r\n\t\t\t\t\t\t\timageLink,\r\n\t\t\t\t\t\t} = eachData;\r\n\t\t\t\t\t\tlet dataTemp = {};\r\n\t\t\t\t\t\tdataTemp[\"key\"] = index.toString();\r\n\t\t\t\t\t\tif (startDate !== endTime) {\r\n\t\t\t\t\t\t\tdataTemp[\"time\"] = moment(recordTime).format(\r\n\t\t\t\t\t\t\t\t\"YYYY년 MM월 DD일 HH:mm:ss\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdataTemp[\"time\"] = moment(recordTime).format(\"HH:mm:ss\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdataTemp[\"vehicleType\"] = vehicleType;\r\n\t\t\t\t\t\tif (ocrFlag) {\r\n\t\t\t\t\t\t\tdataTemp[\"licenseNumber\"] = licenseNumber;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdataTemp[\"licenseNumber\"] = \"지원하지 않은 카메라입니다\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdataTemp[\"speed\"] = `${speed} km/h`;\r\n\t\t\t\t\t\tdataTemp[\"laneNumber\"] = `${laneNumber} 차선`;\r\n\t\t\t\t\t\tdataTemp[\"imageLink\"] = [\r\n\t\t\t\t\t\t\tindex.toString(),\r\n\t\t\t\t\t\t\timageLink,\r\n\t\t\t\t\t\t\tmoment(recordTime).format(\"YYYY년 MM월 DD일 HH시 mm분 ss초\"),\r\n\t\t\t\t\t\t\tspeed,\r\n\t\t\t\t\t\t\tdataTemp[\"laneNumber\"],\r\n\t\t\t\t\t\t\tlicenseNumber,\r\n\t\t\t\t\t\t\trecordTime,\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t\tTotalData.push(dataTemp);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetData(TotalData);\r\n\t\t\t\t\tsetLoadingData(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t\tif (err.response.status === 400) {\r\n\t\t\t\t\tmessage.warning(\"해당 기간 시간 별 데이터가 없습니다\");\r\n\t\t\t\t} else if (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t}\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isEmptyData ? (\r\n\t\t\t\t<div className=\"empty-data-text\">\r\n\t\t\t\t\t<Text strong type=\"danger\">\r\n\t\t\t\t\t\t해당 과속 데이터가 없습니다\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</div>\r\n\t\t\t) : isLoadingData ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Table\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tdataSource={Data}\r\n\t\t\t\t\tpagination={{ pageSize: 10, showSizeChanger: false }}\r\n\t\t\t\t\tonRow={(record, rowIndex) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tonClick: (event) => {\r\n\t\t\t\t\t\t\t\tsetShownKey(rowIndex);\r\n\t\t\t\t\t\t\t}, // click row\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tbordered\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\tcamera: state.location.camera,\r\n\t\toverSpeedVideoURL: state.baseURL.overSpeedVideoURL,\r\n\t\tassociateIds: state.locationCode.associateIds,\r\n\t\tocrFlag: state.locationCode.ocrFlag,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(OverSpeedTable);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\visualStatistic\\timeStat\\TimeStat.js",["727","728"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\baseURL.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\generalVisualization\\GeneralVisualization.js",["729","730"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\generalVisualization\\StreamingGenVisualization.js",["731"],"import React, { useEffect, useState } from \"react\";\r\nimport { Spin, message } from \"antd\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport VisualizationCard from \"../../molecules/genVisualizationCard/GenVisualizationCard\";\r\nimport VehicleRatio from \"../../charts/doughnutChart/VehicleRatio\";\r\nimport OverSpeedBar from \"../../charts/barChart/GenOverSpeed\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst StreamingGeneralVisualization = (props) => {\r\n\tconst {\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcurrentTime,\r\n\t\trealtimeCamCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\tsetLoggedIn,\r\n\t\tassociateIds,\r\n\t} = props;\r\n\r\n\tconst [isLoadingTraffic, setLoadingTraffic] = useState(true);\r\n\tconst [trafficData, setTrafficData] = useState([]);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [curStartTime, setCurStartTime] = useState(\"\");\r\n\tconst [curEndTime, setCurEndTime] = useState(\"\");\r\n\r\n\tconst camCodes =\r\n\t\tassociateIds.length !== 0\r\n\t\t\t? `camCodes=[${[...associateIds, realtimeCamCode]}]`\r\n\t\t\t: `camCode=${realtimeCamCode}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoadingTraffic(true);\r\n\t\tsetEmptyData(false);\r\n\t\tsetTrafficData([]);\r\n\t\tgetTrafficData();\r\n\t}, [realtimeCamCode, startDate, endTime, currentTime]);\r\n\r\n\tconst getTrafficData = () => {\r\n\t\taxios\r\n\t\t\t.get(\r\n\t\t\t\t`${baseURL}${trafficURL}/daily?${camCodes}&startDate=${startDate}&endTime=${endTime} ${currentTime}&axis=time&laneNumber=0`,\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tconsole.log(\"data\", res.data);\r\n\t\t\t\t\tvar tempStartTime = moment(\r\n\t\t\t\t\t\tres.data[res.data.length - 1].recordTime\r\n\t\t\t\t\t).format(\"HH:mm\");\r\n\t\t\t\t\tvar tempEndTime = moment(\r\n\t\t\t\t\t\tnew Date(res.data[res.data.length - 1].recordTime)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\t.add(15, \"m\")\r\n\t\t\t\t\t\t.format(\"HH:mm\");\r\n\r\n\t\t\t\t\tsetTrafficData(res.data);\r\n\t\t\t\t\tsetCurStartTime(tempStartTime);\r\n\t\t\t\t\tsetCurEndTime(tempEndTime);\r\n\t\t\t\t\tsetLoadingTraffic(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetLoadingTraffic(true);\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t\tif (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\r\n\t\t\t\t\t\t\"네트워크 문제 혹은 일시적인 오류로 페이지를 불러올 수 없습니다\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (err.response.status === 401) {\r\n\t\t\t\t\tmessage.warning(\r\n\t\t\t\t\t\t\"로그인 정보가 유효하지 않습니다. 다시 로그인해주세요\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t}\r\n\t\t\t\tsetLoadingTraffic(true);\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"general-graph-layout\">\r\n\t\t\t{!isEmptyData ? (\r\n\t\t\t\tisLoadingTraffic ? (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\ttitle={`차종별 통행량 | ${curStartTime} ~ ${curEndTime}`}\r\n\t\t\t\t\t\t\tchart={\r\n\t\t\t\t\t\t\t\t<VehicleRatio trafficData={trafficData} page=\"STREAMING\" />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<VisualizationCard\r\n\t\t\t\t\t\t\ttitle={`차종별 과속차량 | ${curStartTime} ~ ${curEndTime}`}\r\n\t\t\t\t\t\t\tchart={\r\n\t\t\t\t\t\t\t\t<OverSpeedBar trafficData={trafficData} page=\"STREAMING\" />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"general-graph-card\">\r\n\t\t\t\t\t<VisualizationCard title=\"차종별 통행량\" />\r\n\t\t\t\t\t<VisualizationCard title=\"차종별 과속차량\" />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t\tassociateIds: state.locationCode.associateIds,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(StreamingGeneralVisualization);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\visualStatistic\\laneStat\\LaneStat.js",["732","733"],"import React, { useState, useEffect } from \"react\";\r\nimport { Spin, Typography, message } from \"antd\";\r\n\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LaneTableCard from \"../../../molecules/tableCard/LaneTableCard\";\r\nimport LaneDataVisualization from \"../../../molecules/dataVisualization/LaneDataVisualization\";\r\nimport \"../style.less\";\r\n\r\nconst LaneVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tstartDate,\r\n\t\tendTime,\r\n\t\tcameraCode,\r\n\t\tbaseURL,\r\n\t\ttrafficURL,\r\n\t\tadditionalFilter,\r\n\t\tsetLoggedIn,\r\n\t\tassociateIds,\r\n\t} = props;\r\n\tconst { Text } = Typography;\r\n\r\n\tconst [activeVisualKey, setActiveVisualKey] = useState(\"1\");\r\n\r\n\tconst [isLoadingTrafficTotal, setLoadingTrafficTotal] = useState(true);\r\n\tconst [isEmptyData, setEmptyData] = useState(false);\r\n\tconst [trafficTotalData, setTrafficTotalData] = useState([]);\r\n\r\n\tconst camCodes =\r\n\t\tassociateIds.length !== 0\r\n\t\t\t? `camCodes=[${[...associateIds, cameraCode]}]`\r\n\t\t\t: `camCode=${cameraCode}`;\r\n\r\n\tconst periodURL =\r\n\t\tperiod === \"DAY\" ? \"/daily\" : period === \"WEEK\" ? \"/weekly\" : \"/monthly\";\r\n\r\n\tconst currentURL =\r\n\t\tperiod === \"DAY\"\r\n\t\t\t? `${baseURL}${trafficURL}${periodURL}?${camCodes}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane`\r\n\t\t\t: `${baseURL}${trafficURL}${periodURL}?${camCodes}&startDate=${startDate}&endTime=${endTime} 23:59:59&axis=lane&weekOption=${additionalFilter}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEmptyData(false);\r\n\t\tsetLoadingTrafficTotal(true);\r\n\t\tsetTrafficTotalData([]);\r\n\t\tgetTrafficTotalData();\r\n\t}, [cameraCode, startDate, endTime, additionalFilter]);\r\n\r\n\tconst getTrafficTotalData = () => {\r\n\t\taxios\r\n\t\t\t.get(`${currentURL}`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n\t\t\t\t\tCache: \"No-cache\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetTrafficTotalData(res.data);\r\n\t\t\t\tif (res.data.length !== 0) {\r\n\t\t\t\t\tsetLoadingTrafficTotal(false);\r\n\t\t\t\t\tsetEmptyData(false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetEmptyData(true);\r\n\t\t\t\t\tmessage.warning(\"해당 기간 차선 별 데이터가 없습니다\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t\tsetEmptyData(true);\r\n\t\t\t\tif (err.response.status === 401) {\r\n\t\t\t\t\tsetLoggedIn(false);\r\n\t\t\t\t} else if (err.response.status === 500) {\r\n\t\t\t\t\tmessage.error(\r\n\t\t\t\t\t\t\"네트워크 문제 혹은 일시적인 오류로 페이지를 불러올 수 없습니다\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmessage.warning(\"해당 기간 차선 별 데이터가 없습니다\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!isEmptyData ? (\r\n\t\t\t\tisLoadingTrafficTotal ? (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<LaneDataVisualization\r\n\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\tsetActiveVisualKey={setActiveVisualKey}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<LaneTableCard\r\n\t\t\t\t\t\t\tperiod={period}\r\n\t\t\t\t\t\t\ttableKey=\"first\"\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t) : null}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcameraCode: state.locationCode.cameraCode,\r\n\t\tcamLanes: state.locationCode.camLanes,\r\n\t\tbaseURL: state.baseURL.baseURL,\r\n\t\ttrafficURL: state.baseURL.trafficURL,\r\n\t\tassociateIds: state.locationCode.associateIds,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(LaneVisualization);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\searchDrawer\\SearchDrawer.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\search\\OverspeedPage.js",["734"],"import React, { useState } from \"react\";\r\nimport { Layout, Typography } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Sider from \"../../organisms/sider\";\r\nimport Header from \"../../organisms/header\";\r\nimport Breadcrumb from \"../../atoms/breadcrumb/Breadcrumb\";\r\nimport SearchData from \"../../organisms/searchData/SearchData\";\r\nimport OverspeedTable from \"../../molecules/StatisticsTable/OverSpeedTable\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst OverspeedPage = (props) => {\r\n\tconst { camera } = props;\r\n\r\n\tconst { setLoggedIn, isMaster } = props;\r\n\tconst [timeClassification, setTimeClassification] = useState(true);\r\n\tconst [firstFilter, setFirstFilter] = useState(false);\r\n\tconst [startDate, setStartDate] = useState(\"\");\r\n\tconst [endTime, setEndTime] = useState(\"\");\r\n\tconst [count, setCount] = useState(false);\r\n\r\n\tconst { Content } = Layout;\r\n\tconst { Title } = Typography;\r\n\r\n\treturn (\r\n\t\t<div className=\"page\">\r\n\t\t\t<Layout style={{ minHeight: \"100vh\" }}>\r\n\t\t\t\t<Sider />\r\n\t\t\t\t<Layout className=\"site-layout\">\r\n\t\t\t\t\t<Header setLoggedIn={setLoggedIn} isMaster={isMaster} />\r\n\t\t\t\t\t<Content style={{ margin: \"0 16px\" }}>\r\n\t\t\t\t\t\t<Breadcrumb pageHierarchy={[\"대시보드\", \"과속 데이터 조회\"]} />\r\n\t\t\t\t\t\t<SearchData\r\n\t\t\t\t\t\t\tperiod=\"OVERSPEED\"\r\n\t\t\t\t\t\t\tclassification={timeClassification}\r\n\t\t\t\t\t\t\tsetClassification={setTimeClassification}\r\n\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\tsetStartDate={setStartDate}\r\n\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\tsetEndTime={setEndTime}\r\n\t\t\t\t\t\t\tsetFirstFilter={setFirstFilter}\r\n\t\t\t\t\t\t\tsetCount={setCount}\r\n\t\t\t\t\t\t\tfirstFilter={firstFilter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{firstFilter ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Title level={5} style={{ marginBottom: 15 }}>\r\n\t\t\t\t\t\t\t\t\t{camera}\r\n\t\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t\t\t<OverspeedTable\r\n\t\t\t\t\t\t\t\t\tstartDate={startDate}\r\n\t\t\t\t\t\t\t\t\tendTime={endTime}\r\n\t\t\t\t\t\t\t\t\tsetLoggedIn={setLoggedIn}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcamera: state.location.camera,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(OverspeedPage);\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\breadcrumb\\Breadcrumb.js",[],["735","736"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\monthTable\\MTFirstTable.js",["737"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LaneVehicleRatio.js",["738"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\WTVehicleRatio.js",["739"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst VehicleRatio = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"3\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count count parse\");\r\n\t\tvar carRatio = [];\r\n\t\tvar busRatio = [];\r\n\t\tvar truckRatio = [];\r\n\t\tvar motorRatio = [];\r\n\t\tvar RatioTotalData = [];\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarVehicleRatio,\r\n\t\t\t\tmBusVehicleRatio,\r\n\t\t\t\tmTruckVehicleRatio,\r\n\t\t\t\tmotorVehicleRatio,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\r\n\t\t\ttempCar[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempCar[\"value\"] = parseFloat((carVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempBus[\"value\"] = parseFloat((mBusVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempTruck[\"value\"] = parseFloat((mTruckVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = WeekKey[weekOption];\r\n\t\t\ttempMotor[\"value\"] = parseFloat((motorVehicleRatio * 100).toFixed(2));\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\r\n\t\t\tcarRatio.push(tempCar);\r\n\t\t\tbusRatio.push(tempBus);\r\n\t\t\ttruckRatio.push(tempTruck);\r\n\t\t\tmotorRatio.push(tempMotor);\r\n\t\t});\r\n\t\tRatioTotalData = carRatio.concat(\r\n\t\t\tbusRatio.concat(truckRatio.concat(motorRatio))\r\n\t\t);\r\n\t\tsetData(RatioTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"%\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default VehicleRatio;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\statisticText\\PeakHourFlowRate.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\DayStatPage.js",["740","741"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\searchData\\SearchData.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\MonthStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\pages\\statisticAnalysis\\WeekStatPage.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\dataVisualization\\TimeDataVisualization.js",["742"],"import React, { useState } from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport DayCntLineChart from \"../../charts/lineChart/DTCnt\";\r\nimport DayPCULineChart from \"../../charts/lineChart/DTPCU\";\r\nimport DayVehicleRatio from \"../../charts/lineChart/DTVehicleRatio\";\r\nimport DayAvgSpeed from \"../../charts/lineChart/DTAvgSpeed\";\r\nimport DayOverSpeed from \"../../charts/lineChart/DTOverSpeed\";\r\nimport Peak15 from \"../../charts/statisticText/Peak15\";\r\nimport PeakHourFlowRate from \"../../charts/statisticText/PeakHourFlowRate\";\r\nimport DayPHF from \"../../charts/statisticText/PHF\";\r\nimport DayConcentrationRatio from \"../../charts/liquidChart/PeakRatio\";\r\nimport BidirectionalBar from \"../../charts/bidirectionalBar/DayNight\";\r\nimport PedestriansDashLine from \"../../charts/dashLineChart/DayPedestrians\";\r\n\r\nimport WeekCnt from \"../../charts/lineChart/WTCnt\";\r\nimport WeekPCU from \"../../charts/lineChart/WTPCU\";\r\nimport WeekAvgSpeed from \"../../charts/lineChart/WTAvgSpeed\";\r\nimport WeekOverSpeed from \"../../charts/lineChart/WTOverSpeed\";\r\nimport WeekVehicleRatio from \"../../charts/barChart/WTVehicleRatio\";\r\nimport WeekPeakTime from \"../../charts/lineChart/WeekPeakTime\";\r\n\r\nimport WeekMonthFlowRate from \"../../charts/barChart/WMFlowRate\";\r\nimport WeekMonthPHF from \"../../charts/barChart/WTPHF\";\r\nimport WeekMonthConcentrationRatio from \"../../charts/barChart/WTConcentrationRatio\";\r\nimport WeekMonthPedstrians from \"../../charts/dashLineChart/WeekPedestrians\";\r\n\r\nimport MonthCnt from \"../../charts/lineChart/MTCnt\";\r\nimport MonthPCU from \"../../charts/lineChart/MTPCU\";\r\nimport MonthVehicleRatio from \"../../charts/lineChart/MTVehicleRatio\";\r\nimport MonthAvgSpeed from \"../../charts/lineChart/MTAvgSpeed\";\r\nimport MonthOverSpeed from \"../../charts/lineChart/MTOverSpeed\";\r\nimport MonthPeakTime from \"../../charts/lineChart/MonthPeakTime\";\r\n\r\nimport \"./style.less\";\r\n\r\nconst TimeDataVisualization = (props) => {\r\n\tconst {\r\n\t\tperiod,\r\n\t\tcurrentLaneNum,\r\n\t\tactiveVisualKey,\r\n\t\tsetActiveVisualKey,\r\n\t\ttrafficTotalData,\r\n\t} = props;\r\n\r\n\tconst { TabPane } = Tabs;\r\n\r\n\tconst callback = (key) => {\r\n\t\tsetActiveVisualKey(key);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Tabs\r\n\t\t\tdefaultActiveKey=\"1\"\r\n\t\t\tactiveKey={activeVisualKey}\r\n\t\t\tonChange={callback}\r\n\t\t\ttabPosition=\"right\"\r\n\t\t>\r\n\t\t\t<TabPane tab=\"교통량\" key=\"1\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayCntLineChart\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekCnt\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthCnt\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"PCU\" key=\"2\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayPCULineChart\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekPCU\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthPCU\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"차종비율\" key=\"3\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayVehicleRatio\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekVehicleRatio\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthVehicleRatio\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"평균속도\" key=\"4\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayAvgSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekAvgSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthAvgSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t<TabPane tab=\"과속차량\" key=\"5\">\r\n\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t<DayOverSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t<WeekOverSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<MonthOverSpeed\r\n\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</TabPane>\r\n\t\t\t{parseInt(currentLaneNum) === 0 ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<TabPane tab=\"주야율\" key=\"6\">\r\n\t\t\t\t\t\t<BidirectionalBar\r\n\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"첨두시간\" key=\"7\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<Peak15\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : period === \"WEEK\" ? (\r\n\t\t\t\t\t\t\t<WeekPeakTime\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<MonthPeakTime\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"첨두유율\" key=\"8\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<PeakHourFlowRate\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthFlowRate\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"PHF\" key=\"9\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<DayPHF\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthPHF\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"집중률\" key=\"10\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<DayConcentrationRatio\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthConcentrationRatio\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"무단횡단\" key=\"11\">\r\n\t\t\t\t\t\t{period === \"DAY\" ? (\r\n\t\t\t\t\t\t\t<PedestriansDashLine\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<WeekMonthPedstrians\r\n\t\t\t\t\t\t\t\tactiveVisualKey={activeVisualKey}\r\n\t\t\t\t\t\t\t\ttrafficTotalData={trafficTotalData}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\tsetActiveVisualKey(\"1\")\r\n\t\t\t)}\r\n\t\t</Tabs>\r\n\t);\r\n};\r\n\r\nexport default TimeDataVisualization;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\atoms\\datePicker\\DatePicker.js",["743"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\genVisualizationCard\\GenVisualizationCard.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\tableDescription\\TableDescription.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\WTConcentrationRatio.js",["744"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\barChart\\LanePCU.js",["745"],"import React, { useState, useEffect } from \"react\";\r\nimport { Column } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst PCU = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"2\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 차선별 PCU parse\");\r\n\t\tvar PCUCar = [];\r\n\t\tvar PCUBus = [];\r\n\t\tvar PCUTruck = [];\r\n\t\tvar PCUMotor = [];\r\n\t\tvar PCUTotalData = [];\r\n\t\ttrafficTotalData.slice(1).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tlaneNumber,\r\n\t\t\t\tcarPassengerCarUnit,\r\n\t\t\t\tmBusPassengerCarUnit,\r\n\t\t\t\tmTruckPassengerCarUnit,\r\n\t\t\t\tmotorPassengerCarUnit,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\r\n\t\t\ttempCar[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempCar[\"value\"] = carPassengerCarUnit;\r\n\t\t\ttempCar[\"type\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempBus[\"value\"] = mBusPassengerCarUnit;\r\n\t\t\ttempBus[\"type\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempTruck[\"value\"] = mTruckPassengerCarUnit;\r\n\t\t\ttempTruck[\"type\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"laneNum\"] = `${laneNumber.toString()} 차선`;\r\n\t\t\ttempMotor[\"value\"] = motorPassengerCarUnit;\r\n\t\t\ttempMotor[\"type\"] = \"오토바이\";\r\n\t\t\tPCUCar.push(tempCar);\r\n\t\t\tPCUBus.push(tempBus);\r\n\t\t\tPCUTruck.push(tempTruck);\r\n\t\t\tPCUMotor.push(tempMotor);\r\n\t\t});\r\n\t\tPCUTotalData = PCUCar.concat(PCUBus.concat(PCUTruck.concat(PCUMotor)));\r\n\t\tsetData(PCUTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\tisStack: true,\r\n\t\txField: \"laneNum\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"type\",\r\n\t\tlabel: {\r\n\t\t\tposition: \"middle\",\r\n\t\t\tlayout: [\r\n\t\t\t\t{ type: \"interval-adjust-position\" },\r\n\t\t\t\t{ type: \"interval-hide-overlap\" },\r\n\t\t\t\t{ type: \"adjust-color\" },\r\n\t\t\t],\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Column {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default PCU;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\weekTable\\WTSecondTable.js",["746"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\LaneAvgSpeed.js",["747"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\WTCnt.js",["748"],"import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst WTCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\tconst WeekKey = {\r\n\t\tSUN: \"일요일\",\r\n\t\tMON: \"월요일\",\r\n\t\tTUE: \"화요일\",\r\n\t\tWED: \"수요일\",\r\n\t\tTHU: \"목요일\",\r\n\t\tFRI: \"금요일\",\r\n\t\tSAT: \"토요일\",\r\n\t\tALL: \"전체\",\r\n\t\tDAY: \"평일전체\",\r\n\t\tEND: \"주말전체\",\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"1\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 주간 통행량 그래프 parse\");\r\n\t\tvar cntTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\tweekOption,\r\n\t\t\t\tcarVolume,\r\n\t\t\t\tmBusVolume,\r\n\t\t\t\tmTruckVolume,\r\n\t\t\t\tmotorVolume,\r\n\t\t\t\ttotalVehicleVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tlet tempCar = {};\r\n\t\t\tlet tempBus = {};\r\n\t\t\tlet tempTruck = {};\r\n\t\t\tlet tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst week = WeekKey[weekOption];\r\n\t\t\ttempCar[\"time\"] = week;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\t\t\ttempCar[\"value\"] = carVolume;\r\n\r\n\t\t\ttempBus[\"time\"] = week;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\t\t\ttempBus[\"value\"] = mBusVolume;\r\n\r\n\t\t\ttempTruck[\"time\"] = week;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\t\t\ttempTruck[\"value\"] = mTruckVolume;\r\n\r\n\t\t\ttempMotor[\"time\"] = week;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\t\t\ttempMotor[\"value\"] = motorVolume;\r\n\r\n\t\t\ttempTotal[\"time\"] = week;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleVolume;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tcntTotalData.push(tempCar);\r\n\t\t\tcntTotalData.push(tempBus);\r\n\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\tcntTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tlegend: true,\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default WTCnt;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\location.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTCnt.js",["749"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\statisticText\\PHF.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchSecondTable.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTOverSpeed.js",["750"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport moment from \"moment\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst OverSpeedCnt = (props) => {\r\n\tconst { activeVisualKey, trafficTotalData } = props;\r\n\r\n\tconst [Data, setData] = useState([]);\r\n\tconst [isLoading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeVisualKey === \"5\") {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetData([]);\r\n\r\n\t\t\tparseTotalData();\r\n\t\t}\r\n\t}, [trafficTotalData, activeVisualKey]);\r\n\r\n\tconst parseTotalData = () => {\r\n\t\tconsole.log(\"count 일간 과속 parse\");\r\n\t\tvar cntTotalData = [];\r\n\r\n\t\ttrafficTotalData.slice(3).forEach((TrafficData) => {\r\n\t\t\tconst {\r\n\t\t\t\trecordDate,\r\n\t\t\t\ttotalVehicleSpdVolume,\r\n\t\t\t\tcarSpdVolume,\r\n\t\t\t\tmBusSpdVolume,\r\n\t\t\t\tmTruckSpdVolume,\r\n\t\t\t\tmotorSpdVolume,\r\n\t\t\t} = TrafficData;\r\n\t\t\tconst tempCar = {};\r\n\t\t\tconst tempBus = {};\r\n\t\t\tconst tempTruck = {};\r\n\t\t\tconst tempMotor = {};\r\n\t\t\tconst tempTotal = {};\r\n\t\t\tconst Time = moment(recordDate).format(\"MM-DD\");\r\n\t\t\ttempCar[\"time\"] = Time;\r\n\t\t\ttempCar[\"value\"] = carSpdVolume;\r\n\t\t\ttempCar[\"category\"] = \"승용차\";\r\n\r\n\t\t\ttempBus[\"time\"] = Time;\r\n\t\t\ttempBus[\"value\"] = mBusSpdVolume;\r\n\t\t\ttempBus[\"category\"] = \"버스\";\r\n\r\n\t\t\ttempTruck[\"time\"] = Time;\r\n\t\t\ttempTruck[\"value\"] = mTruckSpdVolume;\r\n\t\t\ttempTruck[\"category\"] = \"화물차\";\r\n\r\n\t\t\ttempMotor[\"time\"] = Time;\r\n\t\t\ttempMotor[\"value\"] = motorSpdVolume;\r\n\t\t\ttempMotor[\"category\"] = \"오토바이\";\r\n\r\n\t\t\ttempTotal[\"time\"] = Time;\r\n\t\t\ttempTotal[\"value\"] = totalVehicleSpdVolume;\r\n\t\t\ttempTotal[\"category\"] = \"전체\";\r\n\r\n\t\t\tcntTotalData.push(tempCar);\r\n\t\t\tcntTotalData.push(tempBus);\r\n\t\t\tcntTotalData.push(tempTruck);\r\n\t\t\tcntTotalData.push(tempMotor);\r\n\t\t\tcntTotalData.push(tempTotal);\r\n\t\t});\r\n\t\tsetData(cntTotalData);\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\tvar config = {\r\n\t\tdata: Data,\r\n\t\txField: \"time\",\r\n\t\tyField: \"value\",\r\n\t\tseriesField: \"category\",\r\n\t\tlegend: true,\r\n\t\tyAxis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tformatter: function formatter(v) {\r\n\t\t\t\t\treturn v.concat(\"대\").replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n\t\t\t\t\t\treturn \"\".concat(s, \",\");\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\tpaddingTop: 30,\r\n\t\t\t\t\t\tpaddingBottom: 30,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Spin size=\"large\" />\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Line {...config} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default OverSpeedCnt;\r\n","C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\accountForm\\PasswordFrom.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\organisms\\accountForm\\SignupForm.js",["751","752"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\dayTable\\DTSecondTable.js",["753"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MTPCU.js",["754"],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\statisticText\\Peak15.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\molecules\\StatisticsTable\\searchTable\\SearchOverSpeed.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\redux\\reducers\\userInfo.js",[],"C:\\Users\\user\\Documents\\MyGitHub\\webcctv-ifez-client\\src\\components\\charts\\lineChart\\MonthPeakTime.js",["755"],{"ruleId":"756","severity":1,"message":"757","line":81,"column":5,"nodeType":"758","endLine":81,"endColumn":27,"suggestions":"759"},{"ruleId":"756","severity":1,"message":"760","line":89,"column":5,"nodeType":"758","endLine":89,"endColumn":14,"suggestions":"761"},{"ruleId":"762","replacedBy":"763"},{"ruleId":"764","replacedBy":"765"},{"ruleId":"756","severity":1,"message":"766","line":18,"column":15,"nodeType":"767","endLine":18,"endColumn":16},{"ruleId":"762","replacedBy":"768"},{"ruleId":"764","replacedBy":"769"},{"ruleId":"756","severity":1,"message":"770","line":63,"column":5,"nodeType":"758","endLine":63,"endColumn":13,"suggestions":"771"},{"ruleId":"762","replacedBy":"772"},{"ruleId":"764","replacedBy":"773"},{"ruleId":"756","severity":1,"message":"774","line":18,"column":5,"nodeType":"758","endLine":18,"endColumn":40,"suggestions":"775"},{"ruleId":"756","severity":1,"message":"774","line":29,"column":5,"nodeType":"758","endLine":29,"endColumn":40,"suggestions":"776"},{"ruleId":"762","replacedBy":"777"},{"ruleId":"764","replacedBy":"778"},{"ruleId":"756","severity":1,"message":"779","line":53,"column":5,"nodeType":"758","endLine":53,"endColumn":13,"suggestions":"780"},{"ruleId":"756","severity":1,"message":"781","line":45,"column":5,"nodeType":"758","endLine":45,"endColumn":47,"suggestions":"782"},{"ruleId":"756","severity":1,"message":"781","line":54,"column":5,"nodeType":"758","endLine":54,"endColumn":14,"suggestions":"783"},{"ruleId":"756","severity":1,"message":"781","line":36,"column":5,"nodeType":"758","endLine":36,"endColumn":55,"suggestions":"784"},{"ruleId":"785","severity":1,"message":"786","line":24,"column":9,"nodeType":"787","messageId":"788","endLine":24,"endColumn":20},{"ruleId":"756","severity":1,"message":"760","line":52,"column":5,"nodeType":"758","endLine":52,"endColumn":53,"suggestions":"789"},{"ruleId":"762","replacedBy":"790"},{"ruleId":"764","replacedBy":"791"},{"ruleId":"756","severity":1,"message":"774","line":19,"column":5,"nodeType":"758","endLine":19,"endColumn":40,"suggestions":"792"},{"ruleId":"756","severity":1,"message":"774","line":19,"column":5,"nodeType":"758","endLine":19,"endColumn":40,"suggestions":"793"},{"ruleId":"762","replacedBy":"794"},{"ruleId":"764","replacedBy":"795"},{"ruleId":"785","severity":1,"message":"796","line":1,"column":27,"nodeType":"787","messageId":"788","endLine":1,"endColumn":36},{"ruleId":"785","severity":1,"message":"797","line":3,"column":8,"nodeType":"787","messageId":"788","endLine":3,"endColumn":13},{"ruleId":"762","replacedBy":"798"},{"ruleId":"764","replacedBy":"799"},{"ruleId":"756","severity":1,"message":"800","line":42,"column":5,"nodeType":"758","endLine":42,"endColumn":7,"suggestions":"801"},{"ruleId":"762","replacedBy":"802"},{"ruleId":"764","replacedBy":"803"},{"ruleId":"756","severity":1,"message":"774","line":24,"column":5,"nodeType":"758","endLine":24,"endColumn":40,"suggestions":"804"},{"ruleId":"762","replacedBy":"805"},{"ruleId":"764","replacedBy":"806"},{"ruleId":"756","severity":1,"message":"807","line":27,"column":5,"nodeType":"758","endLine":27,"endColumn":39,"suggestions":"808"},{"ruleId":"756","severity":1,"message":"809","line":27,"column":6,"nodeType":"810","endLine":27,"endColumn":38},{"ruleId":"756","severity":1,"message":"811","line":15,"column":14,"nodeType":"767","endLine":15,"endColumn":18},{"ruleId":"756","severity":1,"message":"812","line":46,"column":5,"nodeType":"758","endLine":46,"endColumn":37,"suggestions":"813"},{"ruleId":"785","severity":1,"message":"814","line":2,"column":23,"nodeType":"787","messageId":"788","endLine":2,"endColumn":31},{"ruleId":"785","severity":1,"message":"815","line":46,"column":9,"nodeType":"787","messageId":"788","endLine":46,"endColumn":18},{"ruleId":"756","severity":1,"message":"812","line":28,"column":5,"nodeType":"758","endLine":28,"endColumn":23,"suggestions":"816"},{"ruleId":"756","severity":1,"message":"774","line":18,"column":5,"nodeType":"758","endLine":18,"endColumn":40,"suggestions":"817"},{"ruleId":"785","severity":1,"message":"818","line":22,"column":10,"nodeType":"787","messageId":"788","endLine":22,"endColumn":14},{"ruleId":"756","severity":1,"message":"819","line":43,"column":5,"nodeType":"758","endLine":43,"endColumn":55,"suggestions":"820"},{"ruleId":"756","severity":1,"message":"821","line":109,"column":19,"nodeType":"767","endLine":109,"endColumn":20},{"ruleId":"756","severity":1,"message":"822","line":110,"column":20,"nodeType":"767","endLine":110,"endColumn":21},{"ruleId":"756","severity":1,"message":"823","line":111,"column":23,"nodeType":"767","endLine":111,"endColumn":24},{"ruleId":"824","severity":1,"message":"825","line":242,"column":38,"nodeType":"826","messageId":"827","endLine":242,"endColumn":40},{"ruleId":"824","severity":1,"message":"828","line":475,"column":38,"nodeType":"826","messageId":"829","endLine":475,"endColumn":40},{"ruleId":"756","severity":1,"message":"830","line":14,"column":5,"nodeType":"758","endLine":14,"endColumn":18,"suggestions":"831"},{"ruleId":"756","severity":1,"message":"774","line":18,"column":5,"nodeType":"758","endLine":18,"endColumn":40,"suggestions":"832"},{"ruleId":"756","severity":1,"message":"774","line":29,"column":5,"nodeType":"758","endLine":29,"endColumn":40,"suggestions":"833"},{"ruleId":"785","severity":1,"message":"834","line":42,"column":5,"nodeType":"787","messageId":"788","endLine":42,"endColumn":26},{"ruleId":"756","severity":1,"message":"835","line":41,"column":5,"nodeType":"758","endLine":41,"endColumn":7,"suggestions":"836"},{"ruleId":"756","severity":1,"message":"837","line":16,"column":5,"nodeType":"758","endLine":16,"endColumn":18,"suggestions":"838"},{"ruleId":"785","severity":1,"message":"839","line":3,"column":8,"nodeType":"787","messageId":"788","endLine":3,"endColumn":14},{"ruleId":"756","severity":1,"message":"774","line":19,"column":5,"nodeType":"758","endLine":19,"endColumn":40,"suggestions":"840"},{"ruleId":"785","severity":1,"message":"841","line":21,"column":9,"nodeType":"787","messageId":"788","endLine":21,"endColumn":14},{"ruleId":"756","severity":1,"message":"811","line":15,"column":14,"nodeType":"767","endLine":15,"endColumn":18},{"ruleId":"756","severity":1,"message":"811","line":20,"column":14,"nodeType":"767","endLine":20,"endColumn":18},{"ruleId":"785","severity":1,"message":"842","line":10,"column":13,"nodeType":"787","messageId":"788","endLine":10,"endColumn":20},{"ruleId":"756","severity":1,"message":"774","line":30,"column":5,"nodeType":"758","endLine":30,"endColumn":40,"suggestions":"843"},{"ruleId":"756","severity":1,"message":"774","line":29,"column":5,"nodeType":"758","endLine":29,"endColumn":40,"suggestions":"844"},{"ruleId":"756","severity":1,"message":"774","line":17,"column":5,"nodeType":"758","endLine":17,"endColumn":40,"suggestions":"845"},{"ruleId":"756","severity":1,"message":"774","line":18,"column":5,"nodeType":"758","endLine":18,"endColumn":40,"suggestions":"846"},{"ruleId":"785","severity":1,"message":"842","line":6,"column":13,"nodeType":"787","messageId":"788","endLine":6,"endColumn":20},{"ruleId":"785","severity":1,"message":"847","line":10,"column":10,"nodeType":"787","messageId":"788","endLine":10,"endColumn":15},{"ruleId":"785","severity":1,"message":"848","line":4,"column":10,"nodeType":"787","messageId":"788","endLine":4,"endColumn":13},{"ruleId":"756","severity":1,"message":"774","line":19,"column":5,"nodeType":"758","endLine":19,"endColumn":40,"suggestions":"849"},{"ruleId":"785","severity":1,"message":"850","line":1,"column":17,"nodeType":"787","messageId":"788","endLine":1,"endColumn":25},{"ruleId":"756","severity":1,"message":"774","line":18,"column":5,"nodeType":"758","endLine":18,"endColumn":40,"suggestions":"851"},{"ruleId":"762","replacedBy":"852"},{"ruleId":"764","replacedBy":"853"},{"ruleId":"756","severity":1,"message":"854","line":76,"column":5,"nodeType":"758","endLine":76,"endColumn":30,"suggestions":"855"},{"ruleId":"756","severity":1,"message":"760","line":84,"column":5,"nodeType":"758","endLine":84,"endColumn":14,"suggestions":"856"},{"ruleId":"756","severity":1,"message":"821","line":116,"column":19,"nodeType":"767","endLine":116,"endColumn":20},{"ruleId":"756","severity":1,"message":"822","line":117,"column":20,"nodeType":"767","endLine":117,"endColumn":21},{"ruleId":"756","severity":1,"message":"823","line":118,"column":23,"nodeType":"767","endLine":118,"endColumn":24},{"ruleId":"824","severity":1,"message":"825","line":249,"column":38,"nodeType":"826","messageId":"827","endLine":249,"endColumn":40},{"ruleId":"824","severity":1,"message":"828","line":486,"column":38,"nodeType":"826","messageId":"829","endLine":486,"endColumn":40},{"ruleId":"756","severity":1,"message":"766","line":18,"column":15,"nodeType":"767","endLine":18,"endColumn":16},{"ruleId":"785","severity":1,"message":"839","line":3,"column":8,"nodeType":"787","messageId":"788","endLine":3,"endColumn":14},{"ruleId":"762","replacedBy":"857"},{"ruleId":"764","replacedBy":"858"},{"ruleId":"756","severity":1,"message":"811","line":15,"column":14,"nodeType":"767","endLine":15,"endColumn":18},{"ruleId":"762","replacedBy":"859"},{"ruleId":"764","replacedBy":"860"},{"ruleId":"756","severity":1,"message":"774","line":29,"column":5,"nodeType":"758","endLine":29,"endColumn":40,"suggestions":"861"},{"ruleId":"785","severity":1,"message":"862","line":9,"column":8,"nodeType":"787","messageId":"788","endLine":9,"endColumn":33},{"ruleId":"785","severity":1,"message":"797","line":4,"column":8,"nodeType":"787","messageId":"788","endLine":4,"endColumn":13},{"ruleId":"785","severity":1,"message":"863","line":17,"column":33,"nodeType":"787","messageId":"788","endLine":17,"endColumn":40},{"ruleId":"785","severity":1,"message":"864","line":23,"column":8,"nodeType":"787","messageId":"788","endLine":23,"endColumn":12},{"ruleId":"785","severity":1,"message":"865","line":24,"column":8,"nodeType":"787","messageId":"788","endLine":24,"endColumn":19},{"ruleId":"756","severity":1,"message":"866","line":65,"column":5,"nodeType":"758","endLine":65,"endColumn":7,"suggestions":"867"},{"ruleId":"756","severity":1,"message":"835","line":48,"column":5,"nodeType":"758","endLine":48,"endColumn":7,"suggestions":"868"},{"ruleId":"762","replacedBy":"869"},{"ruleId":"764","replacedBy":"870"},{"ruleId":"785","severity":1,"message":"842","line":6,"column":13,"nodeType":"787","messageId":"788","endLine":6,"endColumn":20},{"ruleId":"785","severity":1,"message":"847","line":10,"column":10,"nodeType":"787","messageId":"788","endLine":10,"endColumn":15},{"ruleId":"762","replacedBy":"871"},{"ruleId":"764","replacedBy":"872"},{"ruleId":"785","severity":1,"message":"850","line":1,"column":17,"nodeType":"787","messageId":"788","endLine":1,"endColumn":25},{"ruleId":"756","severity":1,"message":"774","line":31,"column":5,"nodeType":"758","endLine":31,"endColumn":40,"suggestions":"873"},{"ruleId":"762","replacedBy":"874"},{"ruleId":"764","replacedBy":"875"},{"ruleId":"756","severity":1,"message":"774","line":17,"column":5,"nodeType":"758","endLine":17,"endColumn":40,"suggestions":"876"},{"ruleId":"756","severity":1,"message":"807","line":27,"column":5,"nodeType":"758","endLine":27,"endColumn":39,"suggestions":"877"},{"ruleId":"756","severity":1,"message":"809","line":27,"column":6,"nodeType":"810","endLine":27,"endColumn":38},{"ruleId":"785","severity":1,"message":"878","line":2,"column":18,"nodeType":"787","messageId":"788","endLine":2,"endColumn":22},{"ruleId":"785","severity":1,"message":"841","line":18,"column":9,"nodeType":"787","messageId":"788","endLine":18,"endColumn":14},{"ruleId":"762","replacedBy":"879"},{"ruleId":"764","replacedBy":"880"},{"ruleId":"762","replacedBy":"881"},{"ruleId":"764","replacedBy":"882"},{"ruleId":"756","severity":1,"message":"812","line":28,"column":5,"nodeType":"758","endLine":28,"endColumn":23,"suggestions":"883"},{"ruleId":"762","replacedBy":"884"},{"ruleId":"764","replacedBy":"885"},{"ruleId":"756","severity":1,"message":"774","line":15,"column":5,"nodeType":"758","endLine":15,"endColumn":18,"suggestions":"886"},{"ruleId":"762","replacedBy":"887"},{"ruleId":"764","replacedBy":"888"},{"ruleId":"756","severity":1,"message":"811","line":15,"column":14,"nodeType":"767","endLine":15,"endColumn":18},{"ruleId":"756","severity":1,"message":"774","line":29,"column":5,"nodeType":"758","endLine":29,"endColumn":40,"suggestions":"889"},{"ruleId":"785","severity":1,"message":"834","line":42,"column":5,"nodeType":"787","messageId":"788","endLine":42,"endColumn":26},{"ruleId":"756","severity":1,"message":"774","line":19,"column":5,"nodeType":"758","endLine":19,"endColumn":40,"suggestions":"890"},{"ruleId":"762","replacedBy":"891"},{"ruleId":"764","replacedBy":"892"},{"ruleId":"756","severity":1,"message":"774","line":31,"column":5,"nodeType":"758","endLine":31,"endColumn":40,"suggestions":"893"},{"ruleId":"756","severity":1,"message":"774","line":18,"column":5,"nodeType":"758","endLine":18,"endColumn":40,"suggestions":"894"},{"ruleId":"785","severity":1,"message":"895","line":4,"column":45,"nodeType":"787","messageId":"788","endLine":4,"endColumn":50},{"ruleId":"756","severity":1,"message":"812","line":53,"column":5,"nodeType":"758","endLine":53,"endColumn":37,"suggestions":"896"},{"ruleId":"785","severity":1,"message":"786","line":25,"column":9,"nodeType":"787","messageId":"788","endLine":25,"endColumn":20},{"ruleId":"756","severity":1,"message":"760","line":57,"column":5,"nodeType":"758","endLine":57,"endColumn":53,"suggestions":"897"},{"ruleId":"756","severity":1,"message":"781","line":51,"column":5,"nodeType":"758","endLine":51,"endColumn":47,"suggestions":"898"},{"ruleId":"756","severity":1,"message":"781","line":60,"column":5,"nodeType":"758","endLine":60,"endColumn":14,"suggestions":"899"},{"ruleId":"756","severity":1,"message":"781","line":41,"column":5,"nodeType":"758","endLine":41,"endColumn":55,"suggestions":"900"},{"ruleId":"785","severity":1,"message":"818","line":23,"column":10,"nodeType":"787","messageId":"788","endLine":23,"endColumn":14},{"ruleId":"756","severity":1,"message":"819","line":49,"column":5,"nodeType":"758","endLine":49,"endColumn":55,"suggestions":"901"},{"ruleId":"785","severity":1,"message":"841","line":21,"column":9,"nodeType":"787","messageId":"788","endLine":21,"endColumn":14},{"ruleId":"762","replacedBy":"902"},{"ruleId":"764","replacedBy":"903"},{"ruleId":"756","severity":1,"message":"766","line":16,"column":14,"nodeType":"767","endLine":16,"endColumn":15},{"ruleId":"756","severity":1,"message":"774","line":17,"column":5,"nodeType":"758","endLine":17,"endColumn":40,"suggestions":"904"},{"ruleId":"756","severity":1,"message":"774","line":29,"column":5,"nodeType":"758","endLine":29,"endColumn":40,"suggestions":"905"},{"ruleId":"785","severity":1,"message":"796","line":1,"column":27,"nodeType":"787","messageId":"788","endLine":1,"endColumn":36},{"ruleId":"785","severity":1,"message":"797","line":3,"column":8,"nodeType":"787","messageId":"788","endLine":3,"endColumn":13},{"ruleId":"785","severity":1,"message":"850","line":1,"column":17,"nodeType":"787","messageId":"788","endLine":1,"endColumn":25},{"ruleId":"756","severity":1,"message":"779","line":53,"column":5,"nodeType":"758","endLine":53,"endColumn":13,"suggestions":"906"},{"ruleId":"756","severity":1,"message":"774","line":30,"column":5,"nodeType":"758","endLine":30,"endColumn":40,"suggestions":"907"},{"ruleId":"756","severity":1,"message":"774","line":18,"column":5,"nodeType":"758","endLine":18,"endColumn":40,"suggestions":"908"},{"ruleId":"756","severity":1,"message":"909","line":31,"column":5,"nodeType":"758","endLine":31,"endColumn":23,"suggestions":"910"},{"ruleId":"756","severity":1,"message":"774","line":18,"column":5,"nodeType":"758","endLine":18,"endColumn":40,"suggestions":"911"},{"ruleId":"756","severity":1,"message":"774","line":29,"column":5,"nodeType":"758","endLine":29,"endColumn":40,"suggestions":"912"},{"ruleId":"756","severity":1,"message":"774","line":19,"column":5,"nodeType":"758","endLine":19,"endColumn":40,"suggestions":"913"},{"ruleId":"756","severity":1,"message":"774","line":19,"column":5,"nodeType":"758","endLine":19,"endColumn":40,"suggestions":"914"},{"ruleId":"785","severity":1,"message":"814","line":2,"column":23,"nodeType":"787","messageId":"788","endLine":2,"endColumn":31},{"ruleId":"785","severity":1,"message":"815","line":46,"column":9,"nodeType":"787","messageId":"788","endLine":46,"endColumn":18},{"ruleId":"756","severity":1,"message":"909","line":17,"column":5,"nodeType":"758","endLine":17,"endColumn":23,"suggestions":"915"},{"ruleId":"756","severity":1,"message":"774","line":18,"column":5,"nodeType":"758","endLine":18,"endColumn":40,"suggestions":"916"},{"ruleId":"756","severity":1,"message":"774","line":19,"column":5,"nodeType":"758","endLine":19,"endColumn":40,"suggestions":"917"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosAsync', 'baseURL', 'camAddress', 'camera.length', and 'setLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["918"],"React Hook useEffect has a missing dependency: 'axiosAsync'. Either include it or remove the dependency array.",["919"],"no-native-reassign",["920"],"no-negated-in-lhs",["921"],"Assignments to the 'countCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal",["920"],["921"],"React Hook useEffect has a missing dependency: 'setVideoSource'. Either include it or remove the dependency array.",["922"],["920"],["921"],"React Hook useEffect has a missing dependency: 'parseTotalData'. Either include it or remove the dependency array.",["923"],["924"],["920"],["921"],"React Hook useEffect has missing dependencies: 'dayEndTime', 'dayStartDate', 'monthEndTime', 'monthStartDate', 'overSpeedEndTime', 'overSpeedStartDate', 'searchEndTime', 'searchStartDate', 'setTempEndTime', 'setTempStartDate', 'weekEndTime', and 'weekStartDate'. Either include them or remove the dependency array.",["925"],"React Hook useEffect has a missing dependency: 'getTrafficData'. Either include it or remove the dependency array.",["926"],["927"],["928"],"no-unused-vars","'isEmptyData' is assigned a value but never used.","Identifier","unusedVar",["929"],["920"],["921"],["930"],["931"],["920"],["921"],"'useEffect' is defined but never used.","'axios' is defined but never used.",["920"],["921"],"React Hook useEffect has missing dependencies: 'addArr' and 'baseURL'. Either include them or remove the dependency array.",["932"],["920"],["921"],["933"],["920"],["921"],"React Hook useEffect has a missing dependency: 'loginStatus'. Either include it or remove the dependency array.",["934"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","Assignments to the 'FristRow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'axiosData'. Either include it or remove the dependency array.",["935"],"'Checkbox' is defined but never used.","'clipboard' is assigned a value but never used.",["936"],["937"],"'Text' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTrafficTotalData'. Either include it or remove the dependency array.",["938"],"Assignments to the 'countFirstCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'countSecondCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'countOverSpeedCol' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","array-callback-return","Array.prototype.some() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.some() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'parseTraffic'. Either include it or remove the dependency array.",["939"],["940"],["941"],"'totalVehicleSpdVolume' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOptions'. Either include it or remove the dependency array.",["942"],"React Hook useEffect has a missing dependency: 'parseData'. Either include it or remove the dependency array.",["943"],"'moment' is defined but never used.",["944"],"'count' is assigned a value but never used.","'actions' is defined but never used.",["945"],["946"],["947"],["948"],"'Title' is assigned a value but never used.","'act' is defined but never used.",["949"],"'useState' is defined but never used.",["950"],["920"],["921"],"React Hook useEffect has missing dependencies: 'axiosAsync', 'baseURL', 'camAddress', and 'setLoggedIn'. Either include them or remove the dependency array.",["951"],["952"],["920"],["921"],["920"],["921"],["953"],"'StreamingGenVisualization' is defined but never used.","'baseURL' is assigned a value but never used.","'date' is assigned a value but never used.","'currentTime' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addArr' and 'camName'. Either include them or remove the dependency array.",["954"],["955"],["920"],["921"],["920"],["921"],["956"],["920"],["921"],["957"],["958"],"'Spin' is defined but never used.",["920"],["921"],["920"],["921"],["959"],["920"],["921"],["960"],["920"],["921"],["961"],["962"],["920"],["921"],["963"],["964"],"'Alert' is defined but never used.",["965"],["966"],["967"],["968"],["969"],["970"],["920"],["921"],["971"],["972"],["973"],["974"],["975"],"React Hook useEffect has missing dependencies: 'currentLaneNum' and 'parseData'. Either include them or remove the dependency array.",["976"],["977"],["978"],["979"],["980"],["981"],["982"],["983"],{"desc":"984","fix":"985"},{"desc":"986","fix":"987"},"no-global-assign","no-unsafe-negation",{"desc":"988","fix":"989"},{"desc":"990","fix":"991"},{"desc":"990","fix":"992"},{"desc":"993","fix":"994"},{"desc":"995","fix":"996"},{"desc":"997","fix":"998"},{"desc":"999","fix":"1000"},{"desc":"1001","fix":"1002"},{"desc":"990","fix":"1003"},{"desc":"990","fix":"1004"},{"desc":"1005","fix":"1006"},{"desc":"990","fix":"1007"},{"desc":"1008","fix":"1009"},{"desc":"1010","fix":"1011"},{"desc":"1012","fix":"1013"},{"desc":"990","fix":"1014"},{"desc":"1015","fix":"1016"},{"desc":"1017","fix":"1018"},{"desc":"990","fix":"1019"},{"desc":"990","fix":"1020"},{"desc":"1021","fix":"1022"},{"desc":"1023","fix":"1024"},{"desc":"990","fix":"1025"},{"desc":"990","fix":"1026"},{"desc":"990","fix":"1027"},{"desc":"990","fix":"1028"},{"desc":"990","fix":"1029"},{"desc":"990","fix":"1030"},{"desc":"990","fix":"1031"},{"desc":"1032","fix":"1033"},{"desc":"986","fix":"1034"},{"desc":"990","fix":"1035"},{"desc":"1036","fix":"1037"},{"desc":"1021","fix":"1038"},{"desc":"990","fix":"1039"},{"desc":"990","fix":"1040"},{"desc":"1008","fix":"1041"},{"desc":"1012","fix":"1042"},{"desc":"1043","fix":"1044"},{"desc":"990","fix":"1045"},{"desc":"990","fix":"1046"},{"desc":"990","fix":"1047"},{"desc":"990","fix":"1048"},{"desc":"1010","fix":"1049"},{"desc":"1001","fix":"1050"},{"desc":"995","fix":"1051"},{"desc":"997","fix":"1052"},{"desc":"999","fix":"1053"},{"desc":"1015","fix":"1054"},{"desc":"990","fix":"1055"},{"desc":"990","fix":"1056"},{"desc":"993","fix":"1057"},{"desc":"990","fix":"1058"},{"desc":"990","fix":"1059"},{"desc":"1060","fix":"1061"},{"desc":"990","fix":"1062"},{"desc":"990","fix":"1063"},{"desc":"990","fix":"1064"},{"desc":"990","fix":"1065"},{"desc":"1060","fix":"1066"},{"desc":"990","fix":"1067"},{"desc":"990","fix":"1068"},"Update the dependencies array to be: [axiosAsync, baseURL, camAddress, camCode, camera.length, currTimeStr, setLoggedIn]",{"range":"1069","text":"1070"},"Update the dependencies array to be: [axiosAsync, refresh]",{"range":"1071","text":"1072"},"Update the dependencies array to be: [setVideoSource, source]",{"range":"1073","text":"1074"},"Update the dependencies array to be: [trafficTotalData, activeVisualKey, parseTotalData]",{"range":"1075","text":"1076"},{"range":"1077","text":"1076"},"Update the dependencies array to be: [dayEndTime, dayStartDate, monthEndTime, monthStartDate, overSpeedEndTime, overSpeedStartDate, period, searchEndTime, searchStartDate, setTempEndTime, setTempStartDate, weekEndTime, weekStartDate]",{"range":"1078","text":"1079"},"Update the dependencies array to be: [camCode, startDate, endTime, currentTime, getTrafficData]",{"range":"1080","text":"1081"},"Update the dependencies array to be: [getTrafficData, refresh]",{"range":"1082","text":"1083"},"Update the dependencies array to be: [realtimeCamCode, startDate, endTime, currentTime, getTrafficData]",{"range":"1084","text":"1085"},"Update the dependencies array to be: [cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",{"range":"1086","text":"1087"},{"range":"1088","text":"1076"},{"range":"1089","text":"1076"},"Update the dependencies array to be: [addArr, baseURL]",{"range":"1090","text":"1091"},{"range":"1092","text":"1076"},"Update the dependencies array to be: [loginStatus]",{"range":"1093","text":"1094"},"Update the dependencies array to be: [startDate, endTime, cameraCode, axiosData]",{"range":"1095","text":"1096"},"Update the dependencies array to be: [axiosData, trafficTotalData]",{"range":"1097","text":"1098"},{"range":"1099","text":"1076"},"Update the dependencies array to be: [cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",{"range":"1100","text":"1101"},"Update the dependencies array to be: [parseTraffic, trafficData]",{"range":"1102","text":"1103"},{"range":"1104","text":"1076"},{"range":"1105","text":"1076"},"Update the dependencies array to be: [getOptions]",{"range":"1106","text":"1107"},"Update the dependencies array to be: [parseData, trafficData]",{"range":"1108","text":"1109"},{"range":"1110","text":"1076"},{"range":"1111","text":"1076"},{"range":"1112","text":"1076"},{"range":"1113","text":"1076"},{"range":"1114","text":"1076"},{"range":"1115","text":"1076"},{"range":"1116","text":"1076"},"Update the dependencies array to be: [axiosAsync, baseURL, camAddress, cameraCode, currTimeStr, setLoggedIn]",{"range":"1117","text":"1118"},{"range":"1119","text":"1072"},{"range":"1120","text":"1076"},"Update the dependencies array to be: [addArr, camName]",{"range":"1121","text":"1122"},{"range":"1123","text":"1107"},{"range":"1124","text":"1076"},{"range":"1125","text":"1076"},{"range":"1126","text":"1094"},{"range":"1127","text":"1098"},"Update the dependencies array to be: [parseTotalData, trafficData]",{"range":"1128","text":"1129"},{"range":"1130","text":"1076"},{"range":"1131","text":"1076"},{"range":"1132","text":"1076"},{"range":"1133","text":"1076"},{"range":"1134","text":"1096"},{"range":"1135","text":"1087"},{"range":"1136","text":"1081"},{"range":"1137","text":"1083"},{"range":"1138","text":"1085"},{"range":"1139","text":"1101"},{"range":"1140","text":"1076"},{"range":"1141","text":"1076"},{"range":"1142","text":"1079"},{"range":"1143","text":"1076"},{"range":"1144","text":"1076"},"Update the dependencies array to be: [currentLaneNum, parseData, trafficTotalData]",{"range":"1145","text":"1146"},{"range":"1147","text":"1076"},{"range":"1148","text":"1076"},{"range":"1149","text":"1076"},{"range":"1150","text":"1076"},{"range":"1151","text":"1146"},{"range":"1152","text":"1076"},{"range":"1153","text":"1076"},[2420,2442],"[axiosAsync, baseURL, camAddress, camCode, camera.length, currTimeStr, setLoggedIn]",[2567,2576],"[axiosAsync, refresh]",[1583,1591],"[setVideoSource, source]",[439,474],"[trafficTotalData, activeVisualKey, parseTotalData]",[611,646],[1489,1497],"[dayEndTime, dayStartDate, monthEndTime, monthStartDate, overSpeedEndTime, overSpeedStartDate, period, searchEndTime, searchStartDate, setTempEndTime, setTempStartDate, weekEndTime, weekStartDate]",[1411,1453],"[camCode, startDate, endTime, currentTime, getTrafficData]",[1606,1615],"[getTrafficData, refresh]",[1082,1132],"[realtimeCamCode, startDate, endTime, currentTime, getTrafficData]",[1700,1748],"[cameraCode, startDate, endTime, currentLaneNum, axiosAsync]",[469,504],[467,502],[1285,1287],"[addArr, baseURL]",[596,631],[1324,1358],"[loginStatus]",[1107,1139],"[startDate, endTime, cameraCode, axiosData]",[575,593],"[axiosData, trafficTotalData]",[464,499],[1408,1458],"[cameraCode, startDate, endTime, additionalFilter, getTrafficTotalData]",[386,399],"[parseTraffic, trafficData]",[439,474],[612,647],[955,957],"[getOptions]",[390,403],"[parseData, trafficData]",[469,504],[654,689],[606,641],[439,474],[432,467],[515,550],[462,497],[2215,2240],"[axiosAsync, baseURL, camAddress, cameraCode, currTimeStr, setLoggedIn]",[2365,2374],[606,641],[1958,1960],"[addArr, camName]",[1268,1270],[673,708],[488,523],[1350,1384],[575,593],[385,398],"[parseTotalData, trafficData]",[612,647],[464,499],[640,675],[439,474],[1219,1251],[1828,1876],[1555,1597],[1750,1759],[1190,1240],[1538,1588],[439,474],[615,650],[1489,1497],[654,689],[432,467],[617,635],"[currentLaneNum, parseData, trafficTotalData]",[439,474],[606,641],[462,497],[469,504],[417,435],[464,499],[470,505]]